
/*
 * Type Definitions for Gjs (https://gjs.guide/)
 *
 * These type definitions are automatically generated, do not edit them by hand.
 * If you found a bug fix it in `ts-for-gir` or create a bug report on https://github.com/gjsify/ts-for-gir
 */

import './gxml-0.18-ambient.d.ts';
import './gxml-0.18-import.d.ts';
/**
 * GXml-0.18
 */

import type libxml2 from '@girs/libxml2-2.0';
import type Gio from '@girs/gio-2.0';
import type GObject from '@girs/gobject-2.0';
import type GLib from '@girs/glib-2.0';
import type Gee from '@girs/gee-0.8';

export enum CssSelectorType {
    CLASS,
    ID,
    ALL,
    ELEMENT,
    ATTRIBUTE,
    ATTRIBUTE_EQUAL,
    ATTRIBUTE_CONTAINS,
    ATTRIBUTE_SUBSTRING,
    ATTRIBUTE_START_WITH,
    ATTRIBUTE_START_WITH_HYPHEN,
    ATTRIBUTE_END_WITH,
    PSEUDO,
    AND,
    INSIDE,
    PARENT,
    AFTER,
    BEFORE,
}
export enum NodeType {
    INVALID,
    ELEMENT,
    ATTRIBUTE,
    TEXT,
    CDATA_SECTION,
    ENTITY_REFERENCE,
    ENTITY,
    PROCESSING_INSTRUCTION,
    COMMENT,
    DOCUMENT,
    DOCUMENT_TYPE,
    DOCUMENT_FRAGMENT,
    NOTATION,
}
export enum XPathObjectType {
    UNDEFINED,
    NODESET,
    BOOLEAN,
    NUMBER,
    STRING,
    POINT,
    RANGE,
    LOCATIONSET,
    USERS,
    XSLT_TREE,
}
export enum CssSelectorError {
    NULL,
    ATTRIBUTE,
    INVALID,
    LENGTH,
    STRING,
    TYPE,
}
export enum DocumentError {
    INVALID_DOCUMENT_ERROR,
    INVALID_FILE,
}
export enum DomError {
    INDEX_SIZE_ERROR,
    DOMSTRING_SIZE_ERROR,
    HIERARCHY_REQUEST_ERROR,
    WRONG_DOCUMENT_ERROR,
    INVALID_CHARACTER_ERROR,
    NO_DATA_ALLOWED_ERROR,
    NO_MODIFICATION_ALLOWED_ERROR,
    NOT_FOUND_ERROR,
    NOT_SUPPORTED_ERROR,
    INUSE_ATTRIBUTE_ERROR,
    INVALID_STATE_ERROR,
    SYNTAX_ERROR,
    INVALID_MODIFICATION_ERROR,
    NAMESPACE_ERROR,
    INVALID_ACCESS_ERROR,
    VALIDATION_ERROR,
    TYPE_MISMATCH_ERROR,
    SECURITY_ERROR,
    NETWORK_ERROR,
    ABORT_ERROR,
    URL_MISMATCH_ERROR,
    QUOTA_EXCEEDED_ERROR,
    TIME_OUT_ERROR,
    INVALID_NODE_TYPE_ERROR,
    DATA_CLONE_ERROR,
}
export enum EnumerationError {
    INVALID_VALUE,
    INVALID_TEXT,
}
export enum Error {
    NOT_SUPPORTED,
    PARSER,
    WRITER,
}
export enum ParserError {
    INVALID_DATA_ERROR,
    INVALID_FILE_ERROR,
    INVALID_STREAM_ERROR,
}
export enum IXsdSchemaError {
    INVALIDATION_ERROR,
}
export enum SerializableError {
    UNSUPPORTED_TYPE_ERROR,
    STR_TO_VALUE_ERROR,
}
export enum SerializableEnumError {
    INVALID_VALUE_ERROR,
    PARSE_ERROR,
}
export enum XPathError {
    EXPRESSION_OK,
    NUMBER_ERROR,
    UNFINISHED_LITERAL_ERROR,
    START_LITERAL_ERROR,
    VARIABLE_REF_ERROR,
    UNDEF_VARIABLE_ERROR,
    INVALID_PREDICATE_ERROR,
    EXPR_ERROR,
    UNCLOSED_ERROR,
    UNKNOWN_FUNC_ERROR,
    INVALID_OPERAND,
    INVALID_TYPE,
    INVALID_ARITY,
    INVALID_CTXT_SIZE,
    INVALID_CTXT_POSITION,
    MEMORY_ERROR,
    XPTR_SYNTAX_ERROR,
    XPTR_RESOURCE_ERROR,
    XPTR_SUB_RESOURCE_ERROR,
    UNDEF_PREFIX_ERROR,
    ENCODING_ERROR,
    INVALID_CHAR_ERROR,
    INVALID_CTXT,
}
export enum TDocumentReadType {
    NEXT,
    CONTINUE,
    STOP,
}
export enum DomEventPhase {
    NONE,
    CAPTURING_PHASE,
    AT_TARGET,
    BUBBLING_PHASE,
}
export enum DomNodeNodeType {
    INVALID,
    ELEMENT_NODE,
    ATTRIBUTE_NODE,
    TEXT_NODE,
    CDATA_SECTION_NODE,
    ENTITY_REFERENCE_NODE,
    ENTITY_NODE,
    PROCESSING_INSTRUCTION_NODE,
    COMMENT_NODE,
    DOCUMENT_NODE,
    DOCUMENT_TYPE_NODE,
    DOCUMENT_FRAGMENT_NODE,
    NOTATION_NODE,
}
export enum DomRangeBoundaryPoints {
    START_TO_START,
    START_TO_END,
    END_TO_END,
    END_TO_START,
}
export enum DomEventFlags {
    STOP_PROPAGATION_FLAG,
    STOP_IMMEDIATE_PROPAGATION_FLAG,
    CANCELED_FLAG,
    INITIALIZED_FLAG,
    DISPATCH_FLAG,
}
export enum DomNodeDocumentPosition {
    NONE,
    DISCONNECTED,
    PRECEDING,
    FOLLOWING,
    CONTAINS,
    CONTAINED_BY,
    IMPLEMENTATION_SPECIFIC,
}
export interface DomMutationCallback {
    (mutations: Gee.List, observer: DomMutationObserver): void
}
export module Collection {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Collection

        element?: DomElement | null
        items_type?: GObject.GType | null
        itemsType?: GObject.GType | null
    }

}

export interface Collection extends GObject.Object {

    // Own properties of GXml-0.18.GXml.Collection

    readonly nodes_index: GLib.Queue
    readonly nodesIndex: GLib.Queue
    element: DomElement
    readonly items_name: string | null
    readonly itemsName: string | null
    items_type: GObject.GType
    itemsType: GObject.GType
    readonly length: number

    // Owm methods of GXml-0.18.GXml.Collection

    search(): void
    get_item(index: number): DomElement | null
    append(node: DomElement): void
    initialize(t: GObject.GType): void
    create_item(): DomElement | null
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_nodes_index(): GLib.Queue
    get_element(): DomElement
    set_element(value: DomElement): void
    get_items_name(): string | null
    get_items_type(): GObject.GType
    set_items_type(value: GObject.GType): void
    get_length(): number

    // Own virtual methods of GXml-0.18.GXml.Collection

    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.GType): void
    vfunc_create_item(): DomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): DomElement
    vfunc_set_element(value: DomElement): void
    vfunc_get_items_name(): string | null
    vfunc_get_items_type(): GObject.GType
    vfunc_set_items_type(value: GObject.GType): void
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.Collection

    connect(sigName: "notify::nodes-index", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: Collection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Collection {

    // Own properties of GXml-0.18.GXml.Collection

    static name: string
    static $gtype: GObject.GType<Collection>

    // Constructors of GXml-0.18.GXml.Collection

    constructor(config?: Collection.ConstructorProperties) 
    _init(config?: Collection.ConstructorProperties): void
}

export module List {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Collection.ConstructorProperties, Gee.Traversable.ConstructorProperties, Gee.Iterable.ConstructorProperties {
    }

}

export interface List extends GObject.Object, Collection, Gee.Traversable, Gee.Iterable {

    // Class property signals of GXml-0.18.GXml.List

    connect(sigName: "notify::nodes-index", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: List, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class List {

    // Own properties of GXml-0.18.GXml.List

    static name: string
    static $gtype: GObject.GType<List>

    // Constructors of GXml-0.18.GXml.List

    constructor(config?: List.ConstructorProperties) 
    _init(config?: List.ConstructorProperties): void
}

export module MappeableElement {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties {
    }

}

export interface MappeableElement extends GObject.Object, DomElement {

    // Owm methods of GXml-0.18.GXml.MappeableElement

    get_map_key(): string | null

    // Own virtual methods of GXml-0.18.GXml.MappeableElement

    vfunc_get_map_key(): string | null

    // Class property signals of GXml-0.18.GXml.MappeableElement

    connect(sigName: "notify::namespace-uri", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class MappeableElement {

    // Own properties of GXml-0.18.GXml.MappeableElement

    static name: string
    static $gtype: GObject.GType<MappeableElement>

    // Constructors of GXml-0.18.GXml.MappeableElement

    constructor(config?: MappeableElement.ConstructorProperties) 
    _init(config?: MappeableElement.ConstructorProperties): void
}

export module Map {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Collection.ConstructorProperties, Gee.Traversable.ConstructorProperties, Gee.Iterable.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Map

        attribute_key?: string | null
        attributeKey?: string | null
    }

}

export interface Map extends GObject.Object, Collection, Gee.Traversable, Gee.Iterable {

    // Own properties of GXml-0.18.GXml.Map

    attribute_key: string | null
    attributeKey: string | null
    readonly keys_set: Gee.Set
    readonly keysSet: Gee.Set

    // Owm methods of GXml-0.18.GXml.Map

    item(key: string | null): DomElement | null
    has_key(key: string | null): boolean
    get_attribute_key(): string | null
    set_attribute_key(value: string | null): void
    get_keys_set(): Gee.Set

    // Own virtual methods of GXml-0.18.GXml.Map

    vfunc_item(key: string | null): DomElement | null
    vfunc_has_key(key: string | null): boolean
    vfunc_get_attribute_key(): string | null
    vfunc_set_attribute_key(value: string | null): void
    vfunc_get_keys_set(): Gee.Set

    // Class property signals of GXml-0.18.GXml.Map

    connect(sigName: "notify::attribute-key", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-key", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-key", ...args: any[]): void
    connect(sigName: "notify::keys-set", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys-set", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys-set", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: Map, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Map {

    // Own properties of GXml-0.18.GXml.Map

    static name: string
    static $gtype: GObject.GType<Map>

    // Constructors of GXml-0.18.GXml.Map

    constructor(config?: Map.ConstructorProperties) 
    _init(config?: Map.ConstructorProperties): void
}

export module MappeableElementPairKey {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties {
    }

}

export interface MappeableElementPairKey extends GObject.Object, DomElement {

    // Owm methods of GXml-0.18.GXml.MappeableElementPairKey

    get_map_primary_key(): string | null
    get_map_secondary_key(): string | null

    // Own virtual methods of GXml-0.18.GXml.MappeableElementPairKey

    vfunc_get_map_primary_key(): string | null
    vfunc_get_map_secondary_key(): string | null

    // Class property signals of GXml-0.18.GXml.MappeableElementPairKey

    connect(sigName: "notify::namespace-uri", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class MappeableElementPairKey {

    // Own properties of GXml-0.18.GXml.MappeableElementPairKey

    static name: string
    static $gtype: GObject.GType<MappeableElementPairKey>

    // Constructors of GXml-0.18.GXml.MappeableElementPairKey

    constructor(config?: MappeableElementPairKey.ConstructorProperties) 
    _init(config?: MappeableElementPairKey.ConstructorProperties): void
}

export module PairedMap {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Collection.ConstructorProperties, Gee.Traversable.ConstructorProperties, Gee.Iterable.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.PairedMap

        attribute_primary_key?: string | null
        attribute_secondary_key?: string | null
        attributePrimaryKey?: string | null
        attributeSecondaryKey?: string | null
    }

}

export interface PairedMap extends GObject.Object, Collection, Gee.Traversable, Gee.Iterable {

    // Own properties of GXml-0.18.GXml.PairedMap

    attribute_primary_key: string | null
    attributePrimaryKey: string | null
    attribute_secondary_key: string | null
    attributeSecondaryKey: string | null
    readonly primary_keys_set: Gee.Set
    readonly primaryKeysSet: Gee.Set

    // Owm methods of GXml-0.18.GXml.PairedMap

    item(primary_key: string | null, secondary_key: string | null): DomElement | null
    has_primary_key(key: string | null): boolean
    has_secondary_key(pkey: string | null, key: string | null): boolean
    secondary_keys_set(pkey: string | null): Gee.Set
    get_attribute_primary_key(): string | null
    set_attribute_primary_key(value: string | null): void
    get_attribute_secondary_key(): string | null
    set_attribute_secondary_key(value: string | null): void
    get_primary_keys_set(): Gee.Set

    // Own virtual methods of GXml-0.18.GXml.PairedMap

    vfunc_item(primary_key: string | null, secondary_key: string | null): DomElement | null
    vfunc_has_primary_key(key: string | null): boolean
    vfunc_has_secondary_key(pkey: string | null, key: string | null): boolean
    vfunc_secondary_keys_set(pkey: string | null): Gee.Set
    vfunc_get_attribute_primary_key(): string | null
    vfunc_set_attribute_primary_key(value: string | null): void
    vfunc_get_attribute_secondary_key(): string | null
    vfunc_set_attribute_secondary_key(value: string | null): void
    vfunc_get_primary_keys_set(): Gee.Set

    // Class property signals of GXml-0.18.GXml.PairedMap

    connect(sigName: "notify::attribute-primary-key", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-primary-key", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-primary-key", ...args: any[]): void
    connect(sigName: "notify::attribute-secondary-key", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-secondary-key", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-secondary-key", ...args: any[]): void
    connect(sigName: "notify::primary-keys-set", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-keys-set", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::primary-keys-set", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: PairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class PairedMap {

    // Own properties of GXml-0.18.GXml.PairedMap

    static name: string
    static $gtype: GObject.GType<PairedMap>

    // Constructors of GXml-0.18.GXml.PairedMap

    constructor(config?: PairedMap.ConstructorProperties) 
    _init(config?: PairedMap.ConstructorProperties): void
}

export module MappeableElementThreeKey {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties {
    }

}

export interface MappeableElementThreeKey extends GObject.Object, DomElement {

    // Owm methods of GXml-0.18.GXml.MappeableElementThreeKey

    get_map_pkey(): string | null
    get_map_skey(): string | null
    get_map_tkey(): string | null

    // Own virtual methods of GXml-0.18.GXml.MappeableElementThreeKey

    vfunc_get_map_pkey(): string | null
    vfunc_get_map_skey(): string | null
    vfunc_get_map_tkey(): string | null

    // Class property signals of GXml-0.18.GXml.MappeableElementThreeKey

    connect(sigName: "notify::namespace-uri", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class MappeableElementThreeKey {

    // Own properties of GXml-0.18.GXml.MappeableElementThreeKey

    static name: string
    static $gtype: GObject.GType<MappeableElementThreeKey>

    // Constructors of GXml-0.18.GXml.MappeableElementThreeKey

    constructor(config?: MappeableElementThreeKey.ConstructorProperties) 
    _init(config?: MappeableElementThreeKey.ConstructorProperties): void
}

export module ThreeMap {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Collection.ConstructorProperties, Gee.Traversable.ConstructorProperties, Gee.Iterable.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.ThreeMap

        attribute_primary_key?: string | null
        attribute_secondary_key?: string | null
        attribute_third_key?: string | null
        attributePrimaryKey?: string | null
        attributeSecondaryKey?: string | null
        attributeThirdKey?: string | null
    }

}

export interface ThreeMap extends GObject.Object, Collection, Gee.Traversable, Gee.Iterable {

    // Own properties of GXml-0.18.GXml.ThreeMap

    attribute_primary_key: string | null
    attributePrimaryKey: string | null
    attribute_secondary_key: string | null
    attributeSecondaryKey: string | null
    attribute_third_key: string | null
    attributeThirdKey: string | null
    readonly primary_keys_set: Gee.Set
    readonly primaryKeysSet: Gee.Set

    // Owm methods of GXml-0.18.GXml.ThreeMap

    item(primary_key: string | null, secondary_key: string | null, third_key: string | null): DomElement | null
    has_primary_key(key: string | null): boolean
    has_secondary_key(pkey: string | null, key: string | null): boolean
    has_third_key(pkey: string | null, skey: string | null, key: string | null): boolean
    secondary_keys_set(pkey: string | null): Gee.Set
    third_keys_set(pkey: string | null, skey: string | null): Gee.Set
    get_attribute_primary_key(): string | null
    set_attribute_primary_key(value: string | null): void
    get_attribute_secondary_key(): string | null
    set_attribute_secondary_key(value: string | null): void
    get_attribute_third_key(): string | null
    set_attribute_third_key(value: string | null): void
    get_primary_keys_set(): Gee.Set

    // Own virtual methods of GXml-0.18.GXml.ThreeMap

    vfunc_item(primary_key: string | null, secondary_key: string | null, third_key: string | null): DomElement | null
    vfunc_has_primary_key(key: string | null): boolean
    vfunc_has_secondary_key(pkey: string | null, key: string | null): boolean
    vfunc_has_third_key(pkey: string | null, skey: string | null, key: string | null): boolean
    vfunc_secondary_keys_set(pkey: string | null): Gee.Set
    vfunc_third_keys_set(pkey: string | null, skey: string | null): Gee.Set
    vfunc_get_attribute_primary_key(): string | null
    vfunc_set_attribute_primary_key(value: string | null): void
    vfunc_get_attribute_secondary_key(): string | null
    vfunc_set_attribute_secondary_key(value: string | null): void
    vfunc_get_attribute_third_key(): string | null
    vfunc_set_attribute_third_key(value: string | null): void
    vfunc_get_primary_keys_set(): Gee.Set

    // Class property signals of GXml-0.18.GXml.ThreeMap

    connect(sigName: "notify::attribute-primary-key", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-primary-key", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-primary-key", ...args: any[]): void
    connect(sigName: "notify::attribute-secondary-key", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-secondary-key", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-secondary-key", ...args: any[]): void
    connect(sigName: "notify::attribute-third-key", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-third-key", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-third-key", ...args: any[]): void
    connect(sigName: "notify::primary-keys-set", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-keys-set", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::primary-keys-set", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: ThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class ThreeMap {

    // Own properties of GXml-0.18.GXml.ThreeMap

    static name: string
    static $gtype: GObject.GType<ThreeMap>

    // Constructors of GXml-0.18.GXml.ThreeMap

    constructor(config?: ThreeMap.ConstructorProperties) 
    _init(config?: ThreeMap.ConstructorProperties): void
}

export module Attribute {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Attribute

        namespace?: Namespace | null
    }

}

export interface Attribute extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Attribute

    namespace: Namespace
    readonly prefix: string | null

    // Owm methods of GXml-0.18.GXml.Attribute

    get_namespace(): Namespace | null
    set_namespace(value?: Namespace | null): void

    // Overloads of set_namespace

    set_namespace(uri: string | null, prefix?: string | null): boolean
    get_prefix(): string | null

    // Own virtual methods of GXml-0.18.GXml.Attribute

    vfunc_get_namespace(): Namespace | null
    vfunc_set_namespace(value?: Namespace | null): void

    // Overloads of vfunc_set_namespace

    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_get_prefix(): string | null

    // Class property signals of GXml-0.18.GXml.Attribute

    connect(sigName: "notify::namespace", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Attribute {

    // Own properties of GXml-0.18.GXml.Attribute

    static name: string
    static $gtype: GObject.GType<Attribute>

    // Constructors of GXml-0.18.GXml.Attribute

    constructor(config?: Attribute.ConstructorProperties) 
    _init(config?: Attribute.ConstructorProperties): void
}

export module CDATA {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {
    }

}

export interface CDATA extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.CDATA

    readonly str: string | null

    // Owm methods of GXml-0.18.GXml.CDATA

    get_str(): string | null

    // Own virtual methods of GXml-0.18.GXml.CDATA

    vfunc_get_str(): string | null

    // Class property signals of GXml-0.18.GXml.CDATA

    connect(sigName: "notify::str", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class CDATA {

    // Own properties of GXml-0.18.GXml.CDATA

    static name: string
    static $gtype: GObject.GType<CDATA>

    // Constructors of GXml-0.18.GXml.CDATA

    constructor(config?: CDATA.ConstructorProperties) 
    _init(config?: CDATA.ConstructorProperties): void
}

export module Character {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Character

        str?: string | null
    }

}

export interface Character extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Character

    str: string | null

    // Owm methods of GXml-0.18.GXml.Character

    get_str(): string | null
    set_str(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.Character

    vfunc_get_str(): string | null
    vfunc_set_str(value: string | null): void

    // Class property signals of GXml-0.18.GXml.Character

    connect(sigName: "notify::str", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Character {

    // Own properties of GXml-0.18.GXml.Character

    static name: string
    static $gtype: GObject.GType<Character>

    // Constructors of GXml-0.18.GXml.Character

    constructor(config?: Character.ConstructorProperties) 
    _init(config?: Character.ConstructorProperties): void
}

export module Comment {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Comment

        str?: string | null
    }

}

export interface Comment extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Comment

    str: string | null

    // Owm methods of GXml-0.18.GXml.Comment

    get_str(): string | null
    set_str(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.Comment

    vfunc_get_str(): string | null
    vfunc_set_str(value: string | null): void

    // Class property signals of GXml-0.18.GXml.Comment

    connect(sigName: "notify::str", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Comment {

    // Own properties of GXml-0.18.GXml.Comment

    static name: string
    static $gtype: GObject.GType<Comment>

    // Constructors of GXml-0.18.GXml.Comment

    constructor(config?: Comment.ConstructorProperties) 
    _init(config?: Comment.ConstructorProperties): void
}

export module Document {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Document

        indent?: boolean | null
        ns_top?: boolean | null
        prefix_default_ns?: boolean | null
        backup?: boolean | null
        file?: Gio.File | null
        nsTop?: boolean | null
        prefixDefaultNs?: boolean | null
    }

}

export interface Document extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Document

    indent: boolean
    ns_top: boolean
    nsTop: boolean
    prefix_default_ns: boolean
    prefixDefaultNs: boolean
    backup: boolean
    readonly root: Node
    file: Gio.File

    // Owm methods of GXml-0.18.GXml.Document

    create_element(name: string | null): Node
    create_text(text: string | null): Node
    create_comment(text: string | null): Node
    create_cdata(text: string | null): Node
    create_pi(target: string | null, data: string | null): Node
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    get_indent(): boolean
    set_indent(value: boolean): void
    get_ns_top(): boolean
    set_ns_top(value: boolean): void
    get_prefix_default_ns(): boolean
    set_prefix_default_ns(value: boolean): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_root(): Node
    get_file(): Gio.File
    set_file(value: Gio.File): void

    // Own virtual methods of GXml-0.18.GXml.Document

    vfunc_create_element(name: string | null): Node
    vfunc_create_text(text: string | null): Node
    vfunc_create_comment(text: string | null): Node
    vfunc_create_cdata(text: string | null): Node
    vfunc_create_pi(target: string | null, data: string | null): Node
    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_ns_top(): boolean
    vfunc_set_ns_top(value: boolean): void
    vfunc_get_prefix_default_ns(): boolean
    vfunc_set_prefix_default_ns(value: boolean): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_root(): Node
    vfunc_get_file(): Gio.File
    vfunc_set_file(value: Gio.File): void

    // Class property signals of GXml-0.18.GXml.Document

    connect(sigName: "notify::indent", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::indent", ...args: any[]): void
    connect(sigName: "notify::ns-top", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ns-top", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ns-top", ...args: any[]): void
    connect(sigName: "notify::prefix-default-ns", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix-default-ns", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix-default-ns", ...args: any[]): void
    connect(sigName: "notify::backup", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::backup", ...args: any[]): void
    connect(sigName: "notify::root", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::file", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::file", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Document {

    // Own properties of GXml-0.18.GXml.Document

    static name: string
    static $gtype: GObject.GType<Document>

    // Constructors of GXml-0.18.GXml.Document

    constructor(config?: Document.ConstructorProperties) 
    _init(config?: Document.ConstructorProperties): void
    static new_default(): Document
    static new_default_for_path(path: string | null): Document
    static new_default_for_file(f: Gio.File): Document
}

export module DocumentType {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {
    }

}

export interface DocumentType extends GObject.Object, Node {

    // Class property signals of GXml-0.18.GXml.DocumentType

    connect(sigName: "notify::namespaces", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DocumentType {

    // Own properties of GXml-0.18.GXml.DocumentType

    static name: string
    static $gtype: GObject.GType<DocumentType>

    // Constructors of GXml-0.18.GXml.DocumentType

    constructor(config?: DocumentType.ConstructorProperties) 
    _init(config?: DocumentType.ConstructorProperties): void
}

export module DomAttr {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomAttr

        value?: string | null
    }

}

export interface DomAttr extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomAttr

    readonly namespace_uri: string | null
    readonly namespaceUri: string | null
    readonly prefix: string | null
    readonly local_name: string | null
    readonly localName: string | null
    readonly name: string | null
    value: string | null
    readonly specified: boolean

    // Owm methods of GXml-0.18.GXml.DomAttr

    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string | null
    get_name(): string | null
    get_value(): string | null
    set_value(value: string | null): void
    get_specified(): boolean

    // Own virtual methods of GXml-0.18.GXml.DomAttr

    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string | null
    vfunc_get_name(): string | null
    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void
    vfunc_get_specified(): boolean

    // Class property signals of GXml-0.18.GXml.DomAttr

    connect(sigName: "notify::namespace-uri", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::specified", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::specified", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomAttr {

    // Own properties of GXml-0.18.GXml.DomAttr

    static name: string
    static $gtype: GObject.GType<DomAttr>

    // Constructors of GXml-0.18.GXml.DomAttr

    constructor(config?: DomAttr.ConstructorProperties) 
    _init(config?: DomAttr.ConstructorProperties): void
}

export module DomCharacterData {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomNode.ConstructorProperties, DomNonDocumentTypeChildNode.ConstructorProperties, DomChildNode.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomCharacterData

        data?: string | null
    }

}

export interface DomCharacterData extends GObject.Object, DomNode, DomNonDocumentTypeChildNode, DomChildNode {

    // Own properties of GXml-0.18.GXml.DomCharacterData

    data: string | null
    readonly length: number

    // Owm methods of GXml-0.18.GXml.DomCharacterData

    substring_data(offset: number, count: number): string | null
    append_data(data: string | null): void
    insert_data(offset: number, data: string | null): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string | null): void
    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    get_length(): number

    // Own virtual methods of GXml-0.18.GXml.DomCharacterData

    vfunc_substring_data(offset: number, count: number): string | null
    vfunc_append_data(data: string | null): void
    vfunc_insert_data(offset: number, data: string | null): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string | null): void
    vfunc_get_data(): string | null
    vfunc_set_data(value: string | null): void
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.DomCharacterData

    connect(sigName: "notify::data", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomCharacterData {

    // Own properties of GXml-0.18.GXml.DomCharacterData

    static name: string
    static $gtype: GObject.GType<DomCharacterData>

    // Constructors of GXml-0.18.GXml.DomCharacterData

    constructor(config?: DomCharacterData.ConstructorProperties) 
    _init(config?: DomCharacterData.ConstructorProperties): void
}

export module DomText {

    // Constructor properties interface

    export interface ConstructorProperties extends DomCharacterData.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface DomText extends DomCharacterData {

    // Own properties of GXml-0.18.GXml.DomText

    readonly whole_text: string | null
    readonly wholeText: string | null

    // Owm methods of GXml-0.18.GXml.DomText

    split_text(offset: number): DomText
    get_whole_text(): string | null

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Own virtual methods of GXml-0.18.GXml.DomText

    vfunc_split_text(offset: number): DomText
    vfunc_get_whole_text(): string | null

    // Class property signals of GXml-0.18.GXml.DomText

    connect(sigName: "notify::whole-text", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::whole-text", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomText extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomText

    static name: string
    static $gtype: GObject.GType<DomText>

    // Constructors of GXml-0.18.GXml.DomText

    constructor(config?: DomText.ConstructorProperties) 
    _init(config?: DomText.ConstructorProperties): void
}

export module DomProcessingInstruction {

    // Constructor properties interface

    export interface ConstructorProperties extends DomCharacterData.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface DomProcessingInstruction extends DomCharacterData {

    // Own properties of GXml-0.18.GXml.DomProcessingInstruction

    readonly target: string | null

    // Owm methods of GXml-0.18.GXml.DomProcessingInstruction

    get_target(): string | null

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Own virtual methods of GXml-0.18.GXml.DomProcessingInstruction

    vfunc_get_target(): string | null

    // Class property signals of GXml-0.18.GXml.DomProcessingInstruction

    connect(sigName: "notify::target", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomProcessingInstruction extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomProcessingInstruction

    static name: string
    static $gtype: GObject.GType<DomProcessingInstruction>

    // Constructors of GXml-0.18.GXml.DomProcessingInstruction

    constructor(config?: DomProcessingInstruction.ConstructorProperties) 
    _init(config?: DomProcessingInstruction.ConstructorProperties): void
}

export module DomComment {

    // Constructor properties interface

    export interface ConstructorProperties extends DomCharacterData.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface DomComment extends DomCharacterData {

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.DomComment

    connect(sigName: "notify::data", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomComment extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomComment

    static name: string
    static $gtype: GObject.GType<DomComment>

    // Constructors of GXml-0.18.GXml.DomComment

    constructor(config?: DomComment.ConstructorProperties) 
    _init(config?: DomComment.ConstructorProperties): void
}

export module DomNonElementParentNode {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomNonElementParentNode extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.DomNonElementParentNode

    get_element_by_id(element_id: string | null): DomElement | null

    // Own virtual methods of GXml-0.18.GXml.DomNonElementParentNode

    vfunc_get_element_by_id(element_id: string | null): DomElement | null

    // Class property signals of GXml-0.18.GXml.DomNonElementParentNode

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNonElementParentNode {

    // Own properties of GXml-0.18.GXml.DomNonElementParentNode

    static name: string
    static $gtype: GObject.GType<DomNonElementParentNode>

    // Constructors of GXml-0.18.GXml.DomNonElementParentNode

    constructor(config?: DomNonElementParentNode.ConstructorProperties) 
    _init(config?: DomNonElementParentNode.ConstructorProperties): void
}

export module DomParentNode {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomParentNode extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomParentNode

    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly firstElementChild: DomElement
    readonly last_element_child: DomElement
    readonly lastElementChild: DomElement
    readonly child_element_count: number
    readonly childElementCount: number

    // Owm methods of GXml-0.18.GXml.DomParentNode

    query_selector(selectors: string | null): DomElement | null
    query_selector_all(selectors: string | null): DomNodeList
    get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number

    // Own virtual methods of GXml-0.18.GXml.DomParentNode

    vfunc_query_selector(selectors: string | null): DomElement | null
    vfunc_query_selector_all(selectors: string | null): DomNodeList
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number

    // Class property signals of GXml-0.18.GXml.DomParentNode

    connect(sigName: "notify::children", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomParentNode {

    // Own properties of GXml-0.18.GXml.DomParentNode

    static name: string
    static $gtype: GObject.GType<DomParentNode>

    // Constructors of GXml-0.18.GXml.DomParentNode

    constructor(config?: DomParentNode.ConstructorProperties) 
    _init(config?: DomParentNode.ConstructorProperties): void
}

export module DomNonDocumentTypeChildNode {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomNonDocumentTypeChildNode extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomNonDocumentTypeChildNode

    readonly previous_element_sibling: DomElement
    readonly previousElementSibling: DomElement
    readonly next_element_sibling: DomElement
    readonly nextElementSibling: DomElement

    // Owm methods of GXml-0.18.GXml.DomNonDocumentTypeChildNode

    get_previous_element_sibling(): DomElement | null
    get_next_element_sibling(): DomElement | null

    // Own virtual methods of GXml-0.18.GXml.DomNonDocumentTypeChildNode

    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null

    // Class property signals of GXml-0.18.GXml.DomNonDocumentTypeChildNode

    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNonDocumentTypeChildNode {

    // Own properties of GXml-0.18.GXml.DomNonDocumentTypeChildNode

    static name: string
    static $gtype: GObject.GType<DomNonDocumentTypeChildNode>

    // Constructors of GXml-0.18.GXml.DomNonDocumentTypeChildNode

    constructor(config?: DomNonDocumentTypeChildNode.ConstructorProperties) 
    _init(config?: DomNonDocumentTypeChildNode.ConstructorProperties): void
}

export module DomChildNode {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomChildNode extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.DomChildNode

    remove(): void

    // Own virtual methods of GXml-0.18.GXml.DomChildNode

    vfunc_remove(): void

    // Class property signals of GXml-0.18.GXml.DomChildNode

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomChildNode {

    // Own properties of GXml-0.18.GXml.DomChildNode

    static name: string
    static $gtype: GObject.GType<DomChildNode>

    // Constructors of GXml-0.18.GXml.DomChildNode

    constructor(config?: DomChildNode.ConstructorProperties) 
    _init(config?: DomChildNode.ConstructorProperties): void
}

export module DomNodeList {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Gee.BidirList.ConstructorProperties {
    }

}

export interface DomNodeList extends GObject.Object, Gee.BidirList {

    // Own properties of GXml-0.18.GXml.DomNodeList

    readonly length: number

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Owm methods of GXml-0.18.GXml.DomNodeList

    item(index: number): DomNode | null
    get_length(): number

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Own virtual methods of GXml-0.18.GXml.DomNodeList

    vfunc_item(index: number): DomNode | null
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.DomNodeList

    connect(sigName: "notify::length", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNodeList {

    // Own properties of GXml-0.18.GXml.DomNodeList

    static name: string
    static $gtype: GObject.GType<DomNodeList>

    // Constructors of GXml-0.18.GXml.DomNodeList

    constructor(config?: DomNodeList.ConstructorProperties) 
    _init(config?: DomNodeList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module DomHTMLCollection {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Gee.BidirList.ConstructorProperties {
    }

}

export interface DomHTMLCollection extends GObject.Object, Gee.BidirList {

    // Own properties of GXml-0.18.GXml.DomHTMLCollection

    readonly length: number

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Owm methods of GXml-0.18.GXml.DomHTMLCollection

    get_element(index: number): DomElement | null
    to_array(): DomElement[]

    // Overloads of to_array

    to_array(): any[]
    item(index: number): DomElement | null
    named_item(name: string | null): DomElement | null
    get_length(): number

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Own virtual methods of GXml-0.18.GXml.DomHTMLCollection

    vfunc_get_element(index: number): DomElement | null
    vfunc_to_array(): DomElement[]

    // Overloads of vfunc_to_array

    vfunc_to_array(): any[]
    vfunc_item(index: number): DomElement | null
    vfunc_named_item(name: string | null): DomElement | null
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.DomHTMLCollection

    connect(sigName: "notify::length", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomHTMLCollection {

    // Own properties of GXml-0.18.GXml.DomHTMLCollection

    static name: string
    static $gtype: GObject.GType<DomHTMLCollection>

    // Constructors of GXml-0.18.GXml.DomHTMLCollection

    constructor(config?: DomHTMLCollection.ConstructorProperties) 
    _init(config?: DomHTMLCollection.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module DomNodeIterator {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomNodeIterator {

    // Own properties of GXml-0.18.GXml.DomNodeIterator

    readonly root: DomNode
    readonly reference_node: DomNode
    readonly referenceNode: DomNode
    readonly pointer_before_reference_node: boolean
    readonly pointerBeforeReferenceNode: boolean
    readonly what_to_show: number
    readonly whatToShow: number
    readonly filter: DomNodeFilter

    // Owm methods of GXml-0.18.GXml.DomNodeIterator

    next_node(): DomNode | null
    previous_node(): DomNode | null
    detach(): void
    get_root(): DomNode
    get_reference_node(): DomNode
    get_pointer_before_reference_node(): boolean
    get_what_to_show(): number
    get_filter(): DomNodeFilter | null

    // Own virtual methods of GXml-0.18.GXml.DomNodeIterator

    vfunc_next_node(): DomNode | null
    vfunc_previous_node(): DomNode | null
    vfunc_detach(): void
    vfunc_get_root(): DomNode
    vfunc_get_reference_node(): DomNode
    vfunc_get_pointer_before_reference_node(): boolean
    vfunc_get_what_to_show(): number
    vfunc_get_filter(): DomNodeFilter | null

    // Class property signals of GXml-0.18.GXml.DomNodeIterator

    connect(sigName: "notify::root", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::reference-node", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reference-node", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::reference-node", ...args: any[]): void
    connect(sigName: "notify::pointer-before-reference-node", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-before-reference-node", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pointer-before-reference-node", ...args: any[]): void
    connect(sigName: "notify::what-to-show", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::what-to-show", ...args: any[]): void
    connect(sigName: "notify::filter", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::filter", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNodeIterator extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomNodeIterator

    static name: string
    static $gtype: GObject.GType<DomNodeIterator>

    // Constructors of GXml-0.18.GXml.DomNodeIterator

    constructor(config?: DomNodeIterator.ConstructorProperties) 
    _init(config?: DomNodeIterator.ConstructorProperties): void
}

export module DomTreeWalker {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomTreeWalker extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomTreeWalker

    readonly root: DomNode
    readonly what_to_show: number
    readonly whatToShow: number
    readonly filter: DomNodeFilter
    readonly current_node: DomNode
    readonly currentNode: DomNode

    // Owm methods of GXml-0.18.GXml.DomTreeWalker

    parentNode(): DomNode | null
    firstChild(): DomNode | null
    lastChild(): DomNode | null
    previousSibling(): DomNode | null
    nextSibling(): DomNode | null
    previousNode(): DomNode | null
    nextNode(): DomNode | null
    get_root(): DomNode
    get_what_to_show(): number
    get_filter(): DomNodeFilter | null
    get_current_node(): DomNode

    // Own virtual methods of GXml-0.18.GXml.DomTreeWalker

    vfunc_parentNode(): DomNode | null
    vfunc_firstChild(): DomNode | null
    vfunc_lastChild(): DomNode | null
    vfunc_previousSibling(): DomNode | null
    vfunc_nextSibling(): DomNode | null
    vfunc_previousNode(): DomNode | null
    vfunc_nextNode(): DomNode | null
    vfunc_get_root(): DomNode
    vfunc_get_what_to_show(): number
    vfunc_get_filter(): DomNodeFilter | null
    vfunc_get_current_node(): DomNode

    // Class property signals of GXml-0.18.GXml.DomTreeWalker

    connect(sigName: "notify::root", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::what-to-show", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::what-to-show", ...args: any[]): void
    connect(sigName: "notify::filter", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::filter", ...args: any[]): void
    connect(sigName: "notify::current-node", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-node", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-node", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomTreeWalker {

    // Own properties of GXml-0.18.GXml.DomTreeWalker

    static name: string
    static $gtype: GObject.GType<DomTreeWalker>

    // Constructors of GXml-0.18.GXml.DomTreeWalker

    constructor(config?: DomTreeWalker.ConstructorProperties) 
    _init(config?: DomTreeWalker.ConstructorProperties): void
}

export module DomNamedNodeMap {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Gee.Map.ConstructorProperties {
    }

}

export interface DomNamedNodeMap extends GObject.Object, Gee.Map {

    // Own properties of GXml-0.18.GXml.DomNamedNodeMap

    readonly length: number

    // Owm methods of GXml-0.18.GXml.DomNamedNodeMap

    item(index: number): DomNode | null
    get_named_item(name: string | null): DomNode | null
    set_named_item(node: DomNode): DomNode | null
    remove_named_item(name: string | null): DomNode | null
    remove_named_item_ns(namespace_uri: string | null, localName: string | null): DomNode | null
    get_named_item_ns(namespace_uri: string | null, local_name: string | null): DomNode | null
    set_named_item_ns(node: DomNode): DomNode | null
    get_length(): number

    // Own virtual methods of GXml-0.18.GXml.DomNamedNodeMap

    vfunc_item(index: number): DomNode | null
    vfunc_get_named_item(name: string | null): DomNode | null
    vfunc_set_named_item(node: DomNode): DomNode | null
    vfunc_remove_named_item(name: string | null): DomNode | null
    vfunc_remove_named_item_ns(namespace_uri: string | null, localName: string | null): DomNode | null
    vfunc_get_named_item_ns(namespace_uri: string | null, local_name: string | null): DomNode | null
    vfunc_set_named_item_ns(node: DomNode): DomNode | null
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.DomNamedNodeMap

    connect(sigName: "notify::length", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::keys", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys", ...args: any[]): void
    connect(sigName: "notify::values", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::values", ...args: any[]): void
    connect(sigName: "notify::entries", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::entries", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNamedNodeMap {

    // Own properties of GXml-0.18.GXml.DomNamedNodeMap

    static name: string
    static $gtype: GObject.GType<DomNamedNodeMap>

    // Constructors of GXml-0.18.GXml.DomNamedNodeMap

    constructor(config?: DomNamedNodeMap.ConstructorProperties) 
    _init(config?: DomNamedNodeMap.ConstructorProperties): void
}

export module DomTokenList {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Gee.BidirList.ConstructorProperties {
    }

}

export interface DomTokenList extends GObject.Object, Gee.BidirList {

    // Own properties of GXml-0.18.GXml.DomTokenList

    readonly length: number

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Owm methods of GXml-0.18.GXml.DomTokenList

    item(index: number): string | null
    contains(token: string | null): boolean

    // Overloads of contains

    contains(item: any): boolean
    add(tokens: string[]): void

    // Overloads of add

    add(item: any): boolean
    remove(tokens: string[]): void

    // Overloads of remove

    remove(item: any): boolean
    toggle(token: string | null, force: boolean, auto: boolean): boolean
    to_string(): string | null
    get_length(): number

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Own virtual methods of GXml-0.18.GXml.DomTokenList

    vfunc_item(index: number): string | null
    vfunc_contains(token: string | null): boolean

    // Overloads of vfunc_contains

    vfunc_contains(item: any): boolean
    vfunc_add(tokens: string[]): void

    // Overloads of vfunc_add

    vfunc_add(item: any): boolean
    vfunc_remove(tokens: string[]): void

    // Overloads of vfunc_remove

    vfunc_remove(item: any): boolean
    vfunc_toggle(token: string | null, force: boolean, auto: boolean): boolean
    vfunc_to_string(): string | null
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.DomTokenList

    connect(sigName: "notify::length", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomTokenList {

    // Own properties of GXml-0.18.GXml.DomTokenList

    static name: string
    static $gtype: GObject.GType<DomTokenList>

    // Constructors of GXml-0.18.GXml.DomTokenList

    constructor(config?: DomTokenList.ConstructorProperties) 
    _init(config?: DomTokenList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module DomSettableTokenList {

    // Constructor properties interface

    export interface ConstructorProperties extends DomTokenList.ConstructorProperties, GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomSettableTokenList

        value?: string | null
    }

}

export interface DomSettableTokenList extends DomTokenList {

    // Own properties of GXml-0.18.GXml.DomSettableTokenList

    value: string | null

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Owm methods of GXml-0.18.GXml.DomSettableTokenList

    get_value(): string | null
    set_value(value: string | null): void

    // Conflicting methods

    contains(token: string | null): boolean

    // Overloads of contains

    contains(item: any): boolean
    contains(item: any): boolean
    add(tokens: string[]): void

    // Overloads of add

    add(item: any): boolean
    add(item: any): boolean
    remove(tokens: string[]): void

    // Overloads of remove

    remove(item: any): boolean
    remove(item: any): boolean
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_contains(token: string | null): boolean

    // Overloads of vfunc_contains

    vfunc_contains(item: any): boolean
    vfunc_contains(item: any): boolean
    vfunc_add(tokens: string[]): void

    // Overloads of vfunc_add

    vfunc_add(item: any): boolean
    vfunc_add(item: any): boolean
    vfunc_remove(tokens: string[]): void

    // Overloads of vfunc_remove

    vfunc_remove(item: any): boolean
    vfunc_remove(item: any): boolean
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Own virtual methods of GXml-0.18.GXml.DomSettableTokenList

    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void

    // Class property signals of GXml-0.18.GXml.DomSettableTokenList

    connect(sigName: "notify::value", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomSettableTokenList extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomSettableTokenList

    static name: string
    static $gtype: GObject.GType<DomSettableTokenList>

    // Constructors of GXml-0.18.GXml.DomSettableTokenList

    constructor(config?: DomSettableTokenList.ConstructorProperties) 
    _init(config?: DomSettableTokenList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module DomDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomNode.ConstructorProperties, DomParentNode.ConstructorProperties, DomNonElementParentNode.ConstructorProperties {
    }

}

export interface DomDocument extends GObject.Object, DomNode, DomParentNode, DomNonElementParentNode {

    // Own properties of GXml-0.18.GXml.DomDocument

    readonly implementation: DomImplementation
    readonly url: string | null
    readonly document_uri: string | null
    readonly documentUri: string | null
    readonly origin: string | null
    readonly compat_mode: string | null
    readonly compatMode: string | null
    readonly character_set: string | null
    readonly characterSet: string | null
    readonly content_type: string | null
    readonly contentType: string | null
    readonly doctype: DomDocumentType
    readonly document_element: DomElement
    readonly documentElement: DomElement

    // Owm methods of GXml-0.18.GXml.DomDocument

    get_elements_by_tag_name(local_name: string | null): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string | null): DomHTMLCollection
    get_elements_by_class_name(classNames: string | null): DomHTMLCollection
    create_element(local_name: string | null): DomElement
    create_element_ns(namespace: string | null, qualified_name: string | null): DomElement
    create_document_fragment(): DomDocumentFragment
    create_text_node(data: string | null): DomText
    create_comment(data: string | null): DomComment
    create_processing_instruction(target: string | null, data: string | null): DomProcessingInstruction
    import_node(node: DomNode, deep: boolean): DomNode
    adopt_node(node: DomNode): DomNode
    create_event(interface: string | null): DomEvent
    create_range(): DomRange
    create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    get_implementation(): DomImplementation
    get_url(): string | null
    get_document_uri(): string | null
    get_origin(): string | null
    get_compat_mode(): string | null
    get_character_set(): string | null
    get_content_type(): string | null
    get_doctype(): DomDocumentType | null
    get_document_element(): DomElement | null

    // Own virtual methods of GXml-0.18.GXml.DomDocument

    vfunc_get_elements_by_tag_name(local_name: string | null): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string | null): DomHTMLCollection
    vfunc_get_elements_by_class_name(classNames: string | null): DomHTMLCollection
    vfunc_create_element(local_name: string | null): DomElement
    vfunc_create_element_ns(namespace: string | null, qualified_name: string | null): DomElement
    vfunc_create_document_fragment(): DomDocumentFragment
    vfunc_create_text_node(data: string | null): DomText
    vfunc_create_comment(data: string | null): DomComment
    vfunc_create_processing_instruction(target: string | null, data: string | null): DomProcessingInstruction
    vfunc_import_node(node: DomNode, deep: boolean): DomNode
    vfunc_adopt_node(node: DomNode): DomNode
    vfunc_create_event(interface: string | null): DomEvent
    vfunc_create_range(): DomRange
    vfunc_create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    vfunc_create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    vfunc_get_implementation(): DomImplementation
    vfunc_get_url(): string | null
    vfunc_get_document_uri(): string | null
    vfunc_get_origin(): string | null
    vfunc_get_compat_mode(): string | null
    vfunc_get_character_set(): string | null
    vfunc_get_content_type(): string | null
    vfunc_get_doctype(): DomDocumentType | null
    vfunc_get_document_element(): DomElement | null

    // Class property signals of GXml-0.18.GXml.DomDocument

    connect(sigName: "notify::implementation", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomDocument {

    // Own properties of GXml-0.18.GXml.DomDocument

    static name: string
    static $gtype: GObject.GType<DomDocument>

    // Constructors of GXml-0.18.GXml.DomDocument

    constructor(config?: DomDocument.ConstructorProperties) 
    _init(config?: DomDocument.ConstructorProperties): void
}

export module DomXMLDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomDocument.ConstructorProperties {
    }

}

export interface DomXMLDocument extends GObject.Object, DomDocument {

    // Class property signals of GXml-0.18.GXml.DomXMLDocument

    connect(sigName: "notify::implementation", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomXMLDocument {

    // Own properties of GXml-0.18.GXml.DomXMLDocument

    static name: string
    static $gtype: GObject.GType<DomXMLDocument>

    // Constructors of GXml-0.18.GXml.DomXMLDocument

    constructor(config?: DomXMLDocument.ConstructorProperties) 
    _init(config?: DomXMLDocument.ConstructorProperties): void
}

export module DomImplementation {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomImplementation extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.DomImplementation

    create_document_type(qualified_name: string | null, public_id: string | null, system_id: string | null): DomDocumentType
    create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    create_html_document(title: string | null): Document
    has_feature(): boolean

    // Own virtual methods of GXml-0.18.GXml.DomImplementation

    vfunc_create_document_type(qualified_name: string | null, public_id: string | null, system_id: string | null): DomDocumentType
    vfunc_create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    vfunc_create_html_document(title: string | null): Document
    vfunc_has_feature(): boolean

    // Class property signals of GXml-0.18.GXml.DomImplementation

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomImplementation {

    // Own properties of GXml-0.18.GXml.DomImplementation

    static name: string
    static $gtype: GObject.GType<DomImplementation>

    // Constructors of GXml-0.18.GXml.DomImplementation

    constructor(config?: DomImplementation.ConstructorProperties) 
    _init(config?: DomImplementation.ConstructorProperties): void
}

export module DomDocumentFragment {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomNode.ConstructorProperties, DomParentNode.ConstructorProperties, DomNonElementParentNode.ConstructorProperties {
    }

}

export interface DomDocumentFragment extends GObject.Object, DomNode, DomParentNode, DomNonElementParentNode {

    // Class property signals of GXml-0.18.GXml.DomDocumentFragment

    connect(sigName: "notify::node-type", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomDocumentFragment {

    // Own properties of GXml-0.18.GXml.DomDocumentFragment

    static name: string
    static $gtype: GObject.GType<DomDocumentFragment>

    // Constructors of GXml-0.18.GXml.DomDocumentFragment

    constructor(config?: DomDocumentFragment.ConstructorProperties) 
    _init(config?: DomDocumentFragment.ConstructorProperties): void
}

export module DomDocumentType {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomNode.ConstructorProperties, DomChildNode.ConstructorProperties {
    }

}

export interface DomDocumentType extends GObject.Object, DomNode, DomChildNode {

    // Own properties of GXml-0.18.GXml.DomDocumentType

    readonly name: string | null
    readonly public_id: string | null
    readonly publicId: string | null
    readonly system_id: string | null
    readonly systemId: string | null

    // Owm methods of GXml-0.18.GXml.DomDocumentType

    get_name(): string | null
    get_public_id(): string | null
    get_system_id(): string | null

    // Own virtual methods of GXml-0.18.GXml.DomDocumentType

    vfunc_get_name(): string | null
    vfunc_get_public_id(): string | null
    vfunc_get_system_id(): string | null

    // Class property signals of GXml-0.18.GXml.DomDocumentType

    connect(sigName: "notify::name", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::public-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::public-id", ...args: any[]): void
    connect(sigName: "notify::system-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::system-id", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomDocumentType {

    // Own properties of GXml-0.18.GXml.DomDocumentType

    static name: string
    static $gtype: GObject.GType<DomDocumentType>

    // Constructors of GXml-0.18.GXml.DomDocumentType

    constructor(config?: DomDocumentType.ConstructorProperties) 
    _init(config?: DomDocumentType.ConstructorProperties): void
}

export module DomHtmlDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomDocument.ConstructorProperties {
    }

}

export interface DomHtmlDocument extends GObject.Object, DomDocument {

    // Owm methods of GXml-0.18.GXml.DomHtmlDocument

    read_from_string(str: string | null): void
    read_from_string_tolerant(str: string | null): void
    to_html(): string | null

    // Own virtual methods of GXml-0.18.GXml.DomHtmlDocument

    vfunc_read_from_string(str: string | null): void
    vfunc_read_from_string_tolerant(str: string | null): void
    vfunc_to_html(): string | null

    // Class property signals of GXml-0.18.GXml.DomHtmlDocument

    connect(sigName: "notify::implementation", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomHtmlDocument {

    // Own properties of GXml-0.18.GXml.DomHtmlDocument

    static name: string
    static $gtype: GObject.GType<DomHtmlDocument>

    // Constructors of GXml-0.18.GXml.DomHtmlDocument

    constructor(config?: DomHtmlDocument.ConstructorProperties) 
    _init(config?: DomHtmlDocument.ConstructorProperties): void
}

export module DomElement {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomNode.ConstructorProperties, DomChildNode.ConstructorProperties, DomNonDocumentTypeChildNode.ConstructorProperties, DomParentNode.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomElement

        id?: string | null
        class_name?: string | null
        className?: string | null
    }

}

export interface DomElement extends GObject.Object, DomNode, DomChildNode, DomNonDocumentTypeChildNode, DomParentNode {

    // Own properties of GXml-0.18.GXml.DomElement

    readonly namespace_uri: string | null
    readonly namespaceUri: string | null
    readonly prefix: string | null
    readonly local_name: string | null
    readonly localName: string | null
    readonly tag_name: string | null
    readonly tagName: string | null
    id: string | null
    class_name: string | null
    className: string | null
    readonly class_list: DomTokenList
    readonly classList: DomTokenList
    readonly attributes: DomNamedNodeMap

    // Owm methods of GXml-0.18.GXml.DomElement

    get_attribute(name: string | null): string | null
    get_attribute_ns(namespace: string | null, local_name: string | null): string | null
    set_attribute(name: string | null, value: string | null): void
    set_attribute_ns(namespace: string | null, name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute_ns(namespace: string | null, local_name: string | null): void
    has_attribute(name: string | null): boolean
    has_attribute_ns(namespace: string | null, local_name: string | null): boolean
    get_elements_by_tag_name(local_name: string | null): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string | null): DomHTMLCollection
    get_elements_by_class_name(class_names: string | null): DomHTMLCollection
    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string | null
    get_tag_name(): string | null
    get_id(): string | null
    set_id(value?: string | null): void
    get_class_name(): string | null
    set_class_name(value?: string | null): void
    get_class_list(): DomTokenList
    get_attributes(): DomNamedNodeMap

    // Own virtual methods of GXml-0.18.GXml.DomElement

    vfunc_get_attribute(name: string | null): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string | null): string | null
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute_ns(namespace: string | null, name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string | null): void
    vfunc_has_attribute(name: string | null): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string | null): boolean
    vfunc_get_elements_by_tag_name(local_name: string | null): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string | null): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string | null): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string | null
    vfunc_get_tag_name(): string | null
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap

    // Class property signals of GXml-0.18.GXml.DomElement

    connect(sigName: "notify::namespace-uri", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomElement {

    // Own properties of GXml-0.18.GXml.DomElement

    static name: string
    static $gtype: GObject.GType<DomElement>

    // Constructors of GXml-0.18.GXml.DomElement

    constructor(config?: DomElement.ConstructorProperties) 
    _init(config?: DomElement.ConstructorProperties): void
}

export module DomEventTarget {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomEventTarget extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.DomEventTarget

    add_event_listener(type: string | null, callback: DomEventListener | null, capture: boolean): void
    remove_event_listener(type: string | null, callback: DomEventListener | null, capture: boolean): void
    dispatch_event(event: DomEvent): boolean

    // Own virtual methods of GXml-0.18.GXml.DomEventTarget

    vfunc_add_event_listener(type: string | null, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string | null, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean

    // Class property signals of GXml-0.18.GXml.DomEventTarget

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomEventTarget {

    // Own properties of GXml-0.18.GXml.DomEventTarget

    static name: string
    static $gtype: GObject.GType<DomEventTarget>

    // Constructors of GXml-0.18.GXml.DomEventTarget

    constructor(config?: DomEventTarget.ConstructorProperties) 
    _init(config?: DomEventTarget.ConstructorProperties): void
}

export module DomEventListener {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomEventListener extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.DomEventListener

    handle_event(event: DomEvent): void

    // Own virtual methods of GXml-0.18.GXml.DomEventListener

    vfunc_handle_event(event: DomEvent): void

    // Class property signals of GXml-0.18.GXml.DomEventListener

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomEventListener {

    // Own properties of GXml-0.18.GXml.DomEventListener

    static name: string
    static $gtype: GObject.GType<DomEventListener>

    // Constructors of GXml-0.18.GXml.DomEventListener

    constructor(config?: DomEventListener.ConstructorProperties) 
    _init(config?: DomEventListener.ConstructorProperties): void
}

export module DomEvent {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomEvent extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomEvent

    readonly etype: string | null
    readonly event_target: DomEventTarget
    readonly eventTarget: DomEventTarget
    readonly current_target: DomEventTarget
    readonly currentTarget: DomEventTarget
    readonly bubbles: boolean
    readonly cancelable: boolean
    readonly is_trusted: boolean
    readonly isTrusted: boolean
    readonly time_stamp: DomTimeStamp
    readonly timeStamp: DomTimeStamp
    readonly default_prevented: boolean
    readonly defaultPrevented: boolean
    readonly event_phase: DomEventPhase
    readonly eventPhase: DomEventPhase

    // Owm methods of GXml-0.18.GXml.DomEvent

    stop_propagation(): void
    stop_immediate_propagation(): void
    prevent_default(): void
    init_event(type: string | null, bubbles: boolean, cancelable: boolean): void
    get_etype(): string | null
    get_event_target(): DomEventTarget | null
    get_current_target(): DomEventTarget | null
    get_bubbles(): boolean
    get_cancelable(): boolean
    get_is_trusted(): boolean
    get_time_stamp(): DomTimeStamp
    get_default_prevented(): boolean
    get_event_phase(): DomEventPhase

    // Own virtual methods of GXml-0.18.GXml.DomEvent

    vfunc_stop_propagation(): void
    vfunc_stop_immediate_propagation(): void
    vfunc_prevent_default(): void
    vfunc_init_event(type: string | null, bubbles: boolean, cancelable: boolean): void
    vfunc_get_etype(): string | null
    vfunc_get_event_target(): DomEventTarget | null
    vfunc_get_current_target(): DomEventTarget | null
    vfunc_get_bubbles(): boolean
    vfunc_get_cancelable(): boolean
    vfunc_get_is_trusted(): boolean
    vfunc_get_time_stamp(): DomTimeStamp
    vfunc_get_default_prevented(): boolean
    vfunc_get_event_phase(): DomEventPhase

    // Class property signals of GXml-0.18.GXml.DomEvent

    connect(sigName: "notify::etype", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::etype", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::etype", ...args: any[]): void
    connect(sigName: "notify::event-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-target", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::is-trusted", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-trusted", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-trusted", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::default-prevented", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-prevented", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-prevented", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomEvent {

    // Own properties of GXml-0.18.GXml.DomEvent

    static name: string
    static $gtype: GObject.GType<DomEvent>

    // Constructors of GXml-0.18.GXml.DomEvent

    constructor(config?: DomEvent.ConstructorProperties) 
    _init(config?: DomEvent.ConstructorProperties): void
}

export module DomCustomEvent {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomEvent.ConstructorProperties {
    }

}

export interface DomCustomEvent extends GObject.Object, DomEvent {

    // Own properties of GXml-0.18.GXml.DomCustomEvent

    readonly detail: any

    // Owm methods of GXml-0.18.GXml.DomCustomEvent

    init_custom_event(type: string | null, bubbles: boolean, cancelable: boolean, detail: any): void
    get_detail(): /* result */ any

    // Own virtual methods of GXml-0.18.GXml.DomCustomEvent

    vfunc_init_custom_event(type: string | null, bubbles: boolean, cancelable: boolean, detail: any): void
    vfunc_get_detail(): /* result */ any

    // Class property signals of GXml-0.18.GXml.DomCustomEvent

    connect(sigName: "notify::detail", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: "notify::etype", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::etype", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::etype", ...args: any[]): void
    connect(sigName: "notify::event-target", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-target", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-target", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::is-trusted", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-trusted", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-trusted", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::default-prevented", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-prevented", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-prevented", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomCustomEvent {

    // Own properties of GXml-0.18.GXml.DomCustomEvent

    static name: string
    static $gtype: GObject.GType<DomCustomEvent>

    // Constructors of GXml-0.18.GXml.DomCustomEvent

    constructor(config?: DomCustomEvent.ConstructorProperties) 
    _init(config?: DomCustomEvent.ConstructorProperties): void
}

export module DomMutationObserver {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomMutationObserver extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.DomMutationObserver

    observe(target: Node, options: DomMutationObserverInit): void
    disconnect(): void
    take_records(): Gee.List

    // Own virtual methods of GXml-0.18.GXml.DomMutationObserver

    vfunc_observe(target: Node, options: DomMutationObserverInit): void
    vfunc_disconnect(): void
    vfunc_take_records(): Gee.List

    // Class property signals of GXml-0.18.GXml.DomMutationObserver

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomMutationObserver {

    // Own properties of GXml-0.18.GXml.DomMutationObserver

    static name: string
    static $gtype: GObject.GType<DomMutationObserver>

    // Constructors of GXml-0.18.GXml.DomMutationObserver

    constructor(config?: DomMutationObserver.ConstructorProperties) 
    _init(config?: DomMutationObserver.ConstructorProperties): void
}

export module DomMutationRecord {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomMutationRecord

        added_nodes?: DomNodeList | null
        removed_nodes?: DomNodeList | null
        addedNodes?: DomNodeList | null
        removedNodes?: DomNodeList | null
    }

}

export interface DomMutationRecord extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomMutationRecord

    readonly mtype: string | null
    readonly target: DomNode
    added_nodes: DomNodeList
    addedNodes: DomNodeList
    removed_nodes: DomNodeList
    removedNodes: DomNodeList
    readonly previous_sibling: DomNode
    readonly previousSibling: DomNode
    readonly next_sibling: DomNode
    readonly nextSibling: DomNode
    readonly attribute_name: string | null
    readonly attributeName: string | null
    readonly attribute_namespace: string | null
    readonly attributeNamespace: string | null
    readonly old_value: string | null
    readonly oldValue: string | null

    // Owm methods of GXml-0.18.GXml.DomMutationRecord

    get_mtype(): string | null
    get_target(): DomNode
    get_added_nodes(): DomNodeList
    set_added_nodes(value: DomNodeList): void
    get_removed_nodes(): DomNodeList
    set_removed_nodes(value: DomNodeList): void
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_attribute_name(): string | null
    get_attribute_namespace(): string | null
    get_old_value(): string | null

    // Own virtual methods of GXml-0.18.GXml.DomMutationRecord

    vfunc_get_mtype(): string | null
    vfunc_get_target(): DomNode
    vfunc_get_added_nodes(): DomNodeList
    vfunc_set_added_nodes(value: DomNodeList): void
    vfunc_get_removed_nodes(): DomNodeList
    vfunc_set_removed_nodes(value: DomNodeList): void
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_attribute_name(): string | null
    vfunc_get_attribute_namespace(): string | null
    vfunc_get_old_value(): string | null

    // Class property signals of GXml-0.18.GXml.DomMutationRecord

    connect(sigName: "notify::mtype", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mtype", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::mtype", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::added-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::added-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::added-nodes", ...args: any[]): void
    connect(sigName: "notify::removed-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::removed-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::removed-nodes", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::attribute-name", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-name", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-name", ...args: any[]): void
    connect(sigName: "notify::attribute-namespace", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-namespace", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-namespace", ...args: any[]): void
    connect(sigName: "notify::old-value", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::old-value", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::old-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomMutationRecord {

    // Own properties of GXml-0.18.GXml.DomMutationRecord

    static name: string
    static $gtype: GObject.GType<DomMutationRecord>

    // Constructors of GXml-0.18.GXml.DomMutationRecord

    constructor(config?: DomMutationRecord.ConstructorProperties) 
    _init(config?: DomMutationRecord.ConstructorProperties): void
}

export module DomNode {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomEventTarget.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomNode

        owner_document?: DomDocument | null
        node_value?: string | null
        text_content?: string | null
        ownerDocument?: DomDocument | null
        nodeValue?: string | null
        textContent?: string | null
    }

}

export interface DomNode extends GObject.Object, DomEventTarget {

    // Own properties of GXml-0.18.GXml.DomNode

    readonly node_type: DomNodeNodeType
    readonly nodeType: DomNodeNodeType
    readonly node_name: string | null
    readonly nodeName: string | null
    readonly base_uri: string | null
    readonly baseUri: string | null
    owner_document: DomDocument
    ownerDocument: DomDocument
    readonly parent_node: DomNode
    readonly parentNode: DomNode
    readonly parent_element: DomElement
    readonly parentElement: DomElement
    readonly child_nodes: DomNodeList
    readonly childNodes: DomNodeList
    readonly first_child: DomNode
    readonly firstChild: DomNode
    readonly last_child: DomNode
    readonly lastChild: DomNode
    readonly previous_sibling: DomNode
    readonly previousSibling: DomNode
    readonly next_sibling: DomNode
    readonly nextSibling: DomNode
    node_value: string | null
    nodeValue: string | null
    text_content: string | null
    textContent: string | null

    // Owm methods of GXml-0.18.GXml.DomNode

    has_child_nodes(): boolean
    normalize(): void
    is_equal_node(node?: DomNode | null): boolean
    compare_document_position(other: DomNode): DomNodeDocumentPosition
    contains(other?: DomNode | null): boolean
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    is_default_namespace(nspace?: string | null): boolean
    insert_before(node: DomNode, child?: DomNode | null): DomNode
    append_child(node: DomNode): DomNode
    replace_child(node: DomNode, child: DomNode): DomNode
    remove_child(child: DomNode): DomNode
    clone_node(deep: boolean): DomNode
    get_node_type(): DomNodeNodeType
    get_node_name(): string | null
    get_base_uri(): string | null
    get_owner_document(): DomDocument | null
    set_owner_document(value?: DomDocument | null): void
    get_parent_node(): DomNode | null
    get_parent_element(): DomElement | null
    get_child_nodes(): DomNodeList
    get_first_child(): DomNode | null
    get_last_child(): DomNode | null
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_node_value(): string | null
    set_node_value(value?: string | null): void
    get_text_content(): string | null
    set_text_content(value?: string | null): void

    // Own virtual methods of GXml-0.18.GXml.DomNode

    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string | null
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void

    // Class property signals of GXml-0.18.GXml.DomNode

    connect(sigName: "notify::node-type", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNode {

    // Own properties of GXml-0.18.GXml.DomNode

    static name: string
    static $gtype: GObject.GType<DomNode>

    // Constructors of GXml-0.18.GXml.DomNode

    constructor(config?: DomNode.ConstructorProperties) 
    _init(config?: DomNode.ConstructorProperties): void
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module DomRange {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomRange extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomRange

    readonly start_container: DomNode
    readonly startContainer: DomNode
    readonly start_offset: number
    readonly startOffset: number
    readonly end_container: DomNode
    readonly endContainer: DomNode
    readonly end_offset: number
    readonly endOffset: number
    readonly collapsed: boolean
    readonly common_ancestor_container: DomNode
    readonly commonAncestorContainer: DomNode

    // Owm methods of GXml-0.18.GXml.DomRange

    set_start(node: DomNode, offset: number): void
    set_end(node: DomNode, offset: number): void
    set_start_before(node: DomNode): void
    set_start_after(node: DomNode): void
    set_end_before(node: DomNode): void
    set_end_after(node: DomNode): void
    collapse(to_start: boolean): void
    select_node(node: DomNode): void
    select_node_contents(node: DomNode): void
    compare_boundary_points(how: DomRangeBoundaryPoints, sourceRange: DomRange): number
    delete_contents(): void
    extract_contents(): DomDocumentFragment | null
    clone_contents(): DomDocumentFragment | null
    insert_node(node: DomNode): void
    surround_contents(newParent: DomNode): void
    clone_range(): DomRange
    detach(): void
    is_point_in_range(node: DomNode, offset: number): boolean
    compare_point(node: DomNode, offset: number): number
    intersects_node(node: DomNode): boolean
    to_string(): string | null
    get_start_container(): DomNode
    get_start_offset(): number
    get_end_container(): DomNode
    get_end_offset(): number
    get_collapsed(): boolean
    get_common_ancestor_container(): DomNode

    // Own virtual methods of GXml-0.18.GXml.DomRange

    vfunc_set_start(node: DomNode, offset: number): void
    vfunc_set_end(node: DomNode, offset: number): void
    vfunc_set_start_before(node: DomNode): void
    vfunc_set_start_after(node: DomNode): void
    vfunc_set_end_before(node: DomNode): void
    vfunc_set_end_after(node: DomNode): void
    vfunc_collapse(to_start: boolean): void
    vfunc_select_node(node: DomNode): void
    vfunc_select_node_contents(node: DomNode): void
    vfunc_compare_boundary_points(how: DomRangeBoundaryPoints, sourceRange: DomRange): number
    vfunc_delete_contents(): void
    vfunc_extract_contents(): DomDocumentFragment | null
    vfunc_clone_contents(): DomDocumentFragment | null
    vfunc_insert_node(node: DomNode): void
    vfunc_surround_contents(newParent: DomNode): void
    vfunc_clone_range(): DomRange
    vfunc_detach(): void
    vfunc_is_point_in_range(node: DomNode, offset: number): boolean
    vfunc_compare_point(node: DomNode, offset: number): number
    vfunc_intersects_node(node: DomNode): boolean
    vfunc_to_string(): string | null
    vfunc_get_start_container(): DomNode
    vfunc_get_start_offset(): number
    vfunc_get_end_container(): DomNode
    vfunc_get_end_offset(): number
    vfunc_get_collapsed(): boolean
    vfunc_get_common_ancestor_container(): DomNode

    // Class property signals of GXml-0.18.GXml.DomRange

    connect(sigName: "notify::start-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start-container", ...args: any[]): void
    connect(sigName: "notify::start-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start-offset", ...args: any[]): void
    connect(sigName: "notify::end-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::end-container", ...args: any[]): void
    connect(sigName: "notify::end-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::end-offset", ...args: any[]): void
    connect(sigName: "notify::collapsed", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::collapsed", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::collapsed", ...args: any[]): void
    connect(sigName: "notify::common-ancestor-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::common-ancestor-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::common-ancestor-container", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomRange {

    // Own properties of GXml-0.18.GXml.DomRange

    static name: string
    static $gtype: GObject.GType<DomRange>

    // Constructors of GXml-0.18.GXml.DomRange

    constructor(config?: DomRange.ConstructorProperties) 
    _init(config?: DomRange.ConstructorProperties): void
}

export module Element {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Element

        content?: string | null
    }

}

export interface Element extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Element

    readonly tag_name: string | null
    readonly tagName: string | null
    content: string | null

    // Owm methods of GXml-0.18.GXml.Element

    normalize(): void
    set_attr(name: string | null, value: string | null): void
    get_attr(name: string | null): Node | null
    remove_attr(name: string | null): void
    remove_ns_attr(name: string | null, uri: string | null): void
    set_ns_attr(ns: string | null, name: string | null, value: string | null): void
    get_ns_attr(name: string | null, uri: string | null): Node | null
    get_tag_name(): string | null
    get_content(): string | null
    set_content(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.Element

    vfunc_normalize(): void
    vfunc_set_attr(name: string | null, value: string | null): void
    vfunc_get_attr(name: string | null): Node | null
    vfunc_remove_attr(name: string | null): void
    vfunc_remove_ns_attr(name: string | null, uri: string | null): void
    vfunc_set_ns_attr(ns: string | null, name: string | null, value: string | null): void
    vfunc_get_ns_attr(name: string | null, uri: string | null): Node | null
    vfunc_get_tag_name(): string | null
    vfunc_get_content(): string | null
    vfunc_set_content(value: string | null): void

    // Class property signals of GXml-0.18.GXml.Element

    connect(sigName: "notify::tag-name", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::content", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Element {

    // Own properties of GXml-0.18.GXml.Element

    static name: string
    static $gtype: GObject.GType<Element>

    // Constructors of GXml-0.18.GXml.Element

    constructor(config?: Element.ConstructorProperties) 
    _init(config?: Element.ConstructorProperties): void
}

export module GomObject {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomNode.ConstructorProperties, DomElement.ConstructorProperties {
    }

}

export interface GomObject extends GObject.Object, DomNode, DomElement {

    // Owm methods of GXml-0.18.GXml.GomObject

    get_properties_list(): GObject.ParamSpec[]
    find_property_name(pname: string | null): GObject.ParamSpec | null
    find_object_property_name(pname: string | null): GObject.ParamSpec | null
    get_property_element_list(): GObject.ParamSpec[]
    get_property_string(prop: GObject.ParamSpec): string | null
    get_attribute(name: string | null): string | null
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    get_child(name: string | null): DomElement | null
    find_elements(name: string | null): DomElementList
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    set_instance_property(name: string | null): boolean
    clean_property_elements(name: string | null): void

    // Own virtual methods of GXml-0.18.GXml.GomObject

    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string | null): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string | null): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_attribute(name: string | null): string | null
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_get_child(name: string | null): DomElement | null
    vfunc_find_elements(name: string | null): DomElementList
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void
    vfunc_set_instance_property(name: string | null): boolean
    vfunc_clean_property_elements(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomObject

    connect(sigName: "notify::node-type", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomObject {

    // Own properties of GXml-0.18.GXml.GomObject

    static name: string
    static $gtype: GObject.GType<GomObject>

    // Constructors of GXml-0.18.GXml.GomObject

    constructor(config?: GomObject.ConstructorProperties) 
    _init(config?: GomObject.ConstructorProperties): void
}

export module GomProperty {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomProperty

        value?: string | null
    }

}

export interface GomProperty extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GomProperty

    value: string | null

    // Owm methods of GXml-0.18.GXml.GomProperty

    validate_value(val: string | null): boolean
    get_value(): string | null
    set_value(value?: string | null): void

    // Own virtual methods of GXml-0.18.GXml.GomProperty

    vfunc_validate_value(val: string | null): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void

    // Class property signals of GXml-0.18.GXml.GomProperty

    connect(sigName: "notify::value", callback: (($obj: GomProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomProperty, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomProperty {

    // Own properties of GXml-0.18.GXml.GomProperty

    static name: string
    static $gtype: GObject.GType<GomProperty>

    // Constructors of GXml-0.18.GXml.GomProperty

    constructor(config?: GomProperty.ConstructorProperties) 
    _init(config?: GomProperty.ConstructorProperties): void
}

export module Namespace {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface Namespace extends GObject.Object {

    // Own properties of GXml-0.18.GXml.Namespace

    readonly uri: string | null
    readonly prefix: string | null

    // Owm methods of GXml-0.18.GXml.Namespace

    get_uri(): string | null
    get_prefix(): string | null

    // Own virtual methods of GXml-0.18.GXml.Namespace

    vfunc_get_uri(): string | null
    vfunc_get_prefix(): string | null

    // Class property signals of GXml-0.18.GXml.Namespace

    connect(sigName: "notify::uri", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Namespace {

    // Own properties of GXml-0.18.GXml.Namespace

    static name: string
    static $gtype: GObject.GType<Namespace>

    // Constructors of GXml-0.18.GXml.Namespace

    constructor(config?: Namespace.ConstructorProperties) 
    _init(config?: Namespace.ConstructorProperties): void
}

export module Node {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Node

        value?: string | null
    }

}

export interface Node extends GObject.Object {

    // Own properties of GXml-0.18.GXml.Node

    readonly namespaces: Gee.List
    readonly children_nodes: Gee.BidirList
    readonly childrenNodes: Gee.BidirList
    readonly attrs: Gee.Map
    readonly name: string | null
    value: string | null
    readonly type_node: NodeType
    readonly typeNode: NodeType
    readonly document: Document
    readonly parent: Node

    // Owm methods of GXml-0.18.GXml.Node

    get(key: string | null): Node | null
    get_elements_by_property_value(property: string | null, value: string | null): ElementList
    get_elements_by_name(name: string | null): ElementList
    get_elements_by_name_ns(name: string | null, ns?: string | null): ElementList
    to_string(): string | null
    set_namespace(uri: string | null, prefix?: string | null): boolean
    ns_prefix(): string | null
    ns_uri(): string | null
    get_namespaces(): Gee.List
    get_children_nodes(): Gee.BidirList
    get_attrs(): Gee.Map
    get_name(): string | null
    get_value(): string | null
    set_value(value: string | null): void
    get_type_node(): NodeType
    get_document(): Document
    get_parent(): Node

    // Own virtual methods of GXml-0.18.GXml.Node

    vfunc_get(key: string | null): Node | null
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): ElementList
    vfunc_get_elements_by_name(name: string | null): ElementList
    vfunc_get_elements_by_name_ns(name: string | null, ns?: string | null): ElementList
    vfunc_to_string(): string | null
    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_ns_prefix(): string | null
    vfunc_ns_uri(): string | null
    vfunc_get_namespaces(): Gee.List
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_attrs(): Gee.Map
    vfunc_get_name(): string | null
    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void
    vfunc_get_type_node(): NodeType
    vfunc_get_document(): Document
    vfunc_get_parent(): Node

    // Class property signals of GXml-0.18.GXml.Node

    connect(sigName: "notify::namespaces", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Node {

    // Own properties of GXml-0.18.GXml.Node

    static name: string
    static $gtype: GObject.GType<Node>

    // Constructors of GXml-0.18.GXml.Node

    constructor(config?: Node.ConstructorProperties) 
    _init(config?: Node.ConstructorProperties): void
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module Notation {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {
    }

}

export interface Notation extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Notation

    readonly public_id: string | null
    readonly publicId: string | null
    readonly external_id: string | null
    readonly externalId: string | null

    // Owm methods of GXml-0.18.GXml.Notation

    get_public_id(): string | null
    get_external_id(): string | null

    // Own virtual methods of GXml-0.18.GXml.Notation

    vfunc_get_public_id(): string | null
    vfunc_get_external_id(): string | null

    // Class property signals of GXml-0.18.GXml.Notation

    connect(sigName: "notify::public-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::public-id", ...args: any[]): void
    connect(sigName: "notify::external-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::external-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::external-id", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Notation {

    // Own properties of GXml-0.18.GXml.Notation

    static name: string
    static $gtype: GObject.GType<Notation>

    // Constructors of GXml-0.18.GXml.Notation

    constructor(config?: Notation.ConstructorProperties) 
    _init(config?: Notation.ConstructorProperties): void
}

export module Entity {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {
    }

}

export interface Entity extends GObject.Object, Node {

    // Class property signals of GXml-0.18.GXml.Entity

    connect(sigName: "notify::namespaces", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Entity {

    // Own properties of GXml-0.18.GXml.Entity

    static name: string
    static $gtype: GObject.GType<Entity>

    // Constructors of GXml-0.18.GXml.Entity

    constructor(config?: Entity.ConstructorProperties) 
    _init(config?: Entity.ConstructorProperties): void
}

export module Parser {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Parser

        backup?: boolean | null
        indent?: boolean | null
    }

}

export interface Parser extends GObject.Object {

    // Own properties of GXml-0.18.GXml.Parser

    backup: boolean
    indent: boolean
    readonly node: DomNode

    // Owm methods of GXml-0.18.GXml.Parser

    write_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_file_async

    /**
     * Promisified version of {@link write_file_async}
     * 
     * 
     * @param file 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_file_async}
     */
    write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    write_file_finish(_res_: Gio.AsyncResult): void
    write_string(): string | null
    write_string_async(_callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_string_async

    /**
     * Promisified version of {@link write_string_async}
     * 
     * 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_string_async}
     */
    write_string_async(): globalThis.Promise<string | null>
    write_string_finish(_res_: Gio.AsyncResult): string | null
    write_stream(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): void
    write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_stream_async

    /**
     * Promisified version of {@link write_stream_async}
     * 
     * 
     * @param stream 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_stream_async}
     */
    write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    write_stream_finish(_res_: Gio.AsyncResult): void
    read_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_file_async

    /**
     * Promisified version of {@link read_file_async}
     * 
     * 
     * @param file 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_file_async}
     */
    read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    read_file_finish(_res_: Gio.AsyncResult): void
    read_stream(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_stream_async

    /**
     * Promisified version of {@link read_stream_async}
     * 
     * 
     * @param stream 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_stream_async}
     */
    read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    read_stream_finish(_res_: Gio.AsyncResult): void
    read_string(str: string | null, cancellable?: Gio.Cancellable | null): void
    read_string_async(str: string | null, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_string_async

    /**
     * Promisified version of {@link read_string_async}
     * 
     * 
     * @param str 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_string_async}
     */
    read_string_async(str: string | null, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    read_string_finish(_res_: Gio.AsyncResult): void
    create_stream(cancellable?: Gio.Cancellable | null): Gio.InputStream
    create_stream_async(cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of create_stream_async

    /**
     * Promisified version of {@link create_stream_async}
     * 
     * 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link create_stream_async}
     */
    create_stream_async(cancellable?: Gio.Cancellable | null): globalThis.Promise<Gio.InputStream>
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    read_child_nodes(parent: DomNode): void
    read_child_nodes_async(parent: DomNode, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_child_nodes_async

    /**
     * Promisified version of {@link read_child_nodes_async}
     * 
     * 
     * @param parent 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_child_nodes_async}
     */
    read_child_nodes_async(parent: DomNode): globalThis.Promise<void>
    read_child_nodes_finish(_res_: Gio.AsyncResult): void
    read_child_node(parent: DomNode): boolean
    read_child_element(parent: DomNode): boolean
    read_element_property(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    add_element_collection(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    read_child_nodes_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_child_nodes_string(str: string | null, cancellable?: Gio.Cancellable | null): void
    read_unparsed(): string | null
    move_next_node(): boolean
    current_is_empty_element(): boolean
    current_is_element(): boolean
    current_is_document(): boolean
    current_node_name(): string | null
    create_element(parent: DomNode): DomElement | null
    read_element(element: DomElement): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_indent(): boolean
    set_indent(value: boolean): void
    get_node(): DomNode

    // Own virtual methods of GXml-0.18.GXml.Parser

    vfunc_write_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    vfunc_write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_write_file_finish(_res_: Gio.AsyncResult): void
    vfunc_write_string(): string | null
    vfunc_write_string_async(_callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_write_string_finish(_res_: Gio.AsyncResult): string | null
    vfunc_write_stream(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_write_stream_finish(_res_: Gio.AsyncResult): void
    vfunc_read_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    vfunc_read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_read_file_finish(_res_: Gio.AsyncResult): void
    vfunc_read_stream(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_read_stream_finish(_res_: Gio.AsyncResult): void
    vfunc_read_string(str: string | null, cancellable?: Gio.Cancellable | null): void
    vfunc_read_string_async(str: string | null, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_read_string_finish(_res_: Gio.AsyncResult): void
    vfunc_create_stream(cancellable?: Gio.Cancellable | null): Gio.InputStream
    vfunc_create_stream_async(cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    vfunc_read_child_nodes(parent: DomNode): void
    vfunc_read_child_nodes_async(parent: DomNode, _callback_?: Gio.AsyncReadyCallback<this> | null): void
    vfunc_read_child_nodes_finish(_res_: Gio.AsyncResult): void
    vfunc_read_child_node(parent: DomNode): boolean
    vfunc_read_child_element(parent: DomNode): boolean
    vfunc_read_element_property(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    vfunc_add_element_collection(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    vfunc_read_child_nodes_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_read_child_nodes_string(str: string | null, cancellable?: Gio.Cancellable | null): void
    vfunc_read_unparsed(): string | null
    vfunc_move_next_node(): boolean
    vfunc_current_is_empty_element(): boolean
    vfunc_current_is_element(): boolean
    vfunc_current_is_document(): boolean
    vfunc_current_node_name(): string | null
    vfunc_create_element(parent: DomNode): DomElement | null
    vfunc_read_element(element: DomElement): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_node(): DomNode

    // Class property signals of GXml-0.18.GXml.Parser

    connect(sigName: "notify::backup", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::backup", ...args: any[]): void
    connect(sigName: "notify::indent", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::indent", ...args: any[]): void
    connect(sigName: "notify::node", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Parser {

    // Own properties of GXml-0.18.GXml.Parser

    static name: string
    static $gtype: GObject.GType<Parser>

    // Constructors of GXml-0.18.GXml.Parser

    constructor(config?: Parser.ConstructorProperties) 
    _init(config?: Parser.ConstructorProperties): void
}

export module ProcessingInstruction {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.ProcessingInstruction

        data?: string | null
    }

}

export interface ProcessingInstruction extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.ProcessingInstruction

    readonly target: string | null
    data: string | null

    // Owm methods of GXml-0.18.GXml.ProcessingInstruction

    get_target(): string | null
    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Own virtual methods of GXml-0.18.GXml.ProcessingInstruction

    vfunc_get_target(): string | null
    vfunc_get_data(): string | null
    vfunc_set_data(value: string | null): void

    // Class property signals of GXml-0.18.GXml.ProcessingInstruction

    connect(sigName: "notify::target", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class ProcessingInstruction {

    // Own properties of GXml-0.18.GXml.ProcessingInstruction

    static name: string
    static $gtype: GObject.GType<ProcessingInstruction>

    // Constructors of GXml-0.18.GXml.ProcessingInstruction

    constructor(config?: ProcessingInstruction.ConstructorProperties) 
    _init(config?: ProcessingInstruction.ConstructorProperties): void
}

export module IXsdSchema {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdSchema

        element_definitions?: IXsdListElements | null
        simple_type_definitions?: IXsdListSimpleTypes | null
        complex_type_definitions?: IXsdListComplexTypes | null
        elementDefinitions?: IXsdListElements | null
        simpleTypeDefinitions?: IXsdListSimpleTypes | null
        complexTypeDefinitions?: IXsdListComplexTypes | null
    }

}

export interface IXsdSchema extends GObject.Object, DomElement {

    // Own properties of GXml-0.18.GXml.IXsdSchema

    element_definitions: IXsdListElements
    elementDefinitions: IXsdListElements
    simple_type_definitions: IXsdListSimpleTypes
    simpleTypeDefinitions: IXsdListSimpleTypes
    complex_type_definitions: IXsdListComplexTypes
    complexTypeDefinitions: IXsdListComplexTypes

    // Owm methods of GXml-0.18.GXml.IXsdSchema

    get_element_definitions(): IXsdListElements
    set_element_definitions(value: IXsdListElements): void
    get_simple_type_definitions(): IXsdListSimpleTypes
    set_simple_type_definitions(value: IXsdListSimpleTypes): void
    get_complex_type_definitions(): IXsdListComplexTypes
    set_complex_type_definitions(value: IXsdListComplexTypes): void

    // Own virtual methods of GXml-0.18.GXml.IXsdSchema

    vfunc_get_element_definitions(): IXsdListElements
    vfunc_set_element_definitions(value: IXsdListElements): void
    vfunc_get_simple_type_definitions(): IXsdListSimpleTypes
    vfunc_set_simple_type_definitions(value: IXsdListSimpleTypes): void
    vfunc_get_complex_type_definitions(): IXsdListComplexTypes
    vfunc_set_complex_type_definitions(value: IXsdListComplexTypes): void

    // Class property signals of GXml-0.18.GXml.IXsdSchema

    connect(sigName: "notify::element-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element-definitions", ...args: any[]): void
    connect(sigName: "notify::simple-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type-definitions", ...args: any[]): void
    connect(sigName: "notify::complex-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::complex-type-definitions", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdSchema {

    // Own properties of GXml-0.18.GXml.IXsdSchema

    static name: string
    static $gtype: GObject.GType<IXsdSchema>

    // Constructors of GXml-0.18.GXml.IXsdSchema

    constructor(config?: IXsdSchema.ConstructorProperties) 
    _init(config?: IXsdSchema.ConstructorProperties): void
}

export module IXsdBaseType {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdBaseType

        anotation?: IXsdAnnotation | null
    }

}

export interface IXsdBaseType extends GObject.Object {

    // Own properties of GXml-0.18.GXml.IXsdBaseType

    anotation: IXsdAnnotation

    // Owm methods of GXml-0.18.GXml.IXsdBaseType

    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void

    // Own virtual methods of GXml-0.18.GXml.IXsdBaseType

    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void

    // Class property signals of GXml-0.18.GXml.IXsdBaseType

    connect(sigName: "notify::anotation", callback: (($obj: IXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdBaseType {

    // Own properties of GXml-0.18.GXml.IXsdBaseType

    static name: string
    static $gtype: GObject.GType<IXsdBaseType>

    // Constructors of GXml-0.18.GXml.IXsdBaseType

    constructor(config?: IXsdBaseType.ConstructorProperties) 
    _init(config?: IXsdBaseType.ConstructorProperties): void
}

export module IXsdSimpleType {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties, IXsdBaseType.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdSimpleType

        final?: string | null
        id?: string | null
        name?: string | null
        annotation?: IXsdAnnotation | null
        list?: IXsdTypeList | null
        union?: IXsdTypeUnion | null
        restriction?: IXsdTypeRestriction | null
    }

}

export interface IXsdSimpleType extends GObject.Object, DomElement, IXsdBaseType {

    // Own properties of GXml-0.18.GXml.IXsdSimpleType

    final: string | null
    id: string | null
    name: string | null
    annotation: IXsdAnnotation
    list: IXsdTypeList
    union: IXsdTypeUnion
    restriction: IXsdTypeRestriction

    // Owm methods of GXml-0.18.GXml.IXsdSimpleType

    get_final(): string | null
    set_final(value: string | null): void
    get_id(): string | null

    // Overloads of get_id

    get_id(): string | null
    set_id(value: string | null): void

    // Overloads of set_id

    set_id(value?: string | null): void
    get_name(): string | null
    set_name(value: string | null): void
    get_annotation(): IXsdAnnotation
    set_annotation(value: IXsdAnnotation): void
    get_list(): IXsdTypeList
    set_list(value: IXsdTypeList): void
    get_union(): IXsdTypeUnion
    set_union(value: IXsdTypeUnion): void
    get_restriction(): IXsdTypeRestriction
    set_restriction(value: IXsdTypeRestriction): void

    // Own virtual methods of GXml-0.18.GXml.IXsdSimpleType

    vfunc_get_final(): string | null
    vfunc_set_final(value: string | null): void
    vfunc_get_id(): string | null

    // Overloads of vfunc_get_id

    vfunc_get_id(): string | null
    vfunc_set_id(value: string | null): void

    // Overloads of vfunc_set_id

    vfunc_set_id(value?: string | null): void
    vfunc_get_name(): string | null
    vfunc_set_name(value: string | null): void
    vfunc_get_annotation(): IXsdAnnotation
    vfunc_set_annotation(value: IXsdAnnotation): void
    vfunc_get_list(): IXsdTypeList
    vfunc_set_list(value: IXsdTypeList): void
    vfunc_get_union(): IXsdTypeUnion
    vfunc_set_union(value: IXsdTypeUnion): void
    vfunc_get_restriction(): IXsdTypeRestriction
    vfunc_set_restriction(value: IXsdTypeRestriction): void

    // Class property signals of GXml-0.18.GXml.IXsdSimpleType

    connect(sigName: "notify::final", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::final", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::list", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::list", ...args: any[]): void
    connect(sigName: "notify::union", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::union", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::union", ...args: any[]): void
    connect(sigName: "notify::restriction", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::restriction", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::restriction", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::anotation", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdSimpleType {

    // Own properties of GXml-0.18.GXml.IXsdSimpleType

    static name: string
    static $gtype: GObject.GType<IXsdSimpleType>

    // Constructors of GXml-0.18.GXml.IXsdSimpleType

    constructor(config?: IXsdSimpleType.ConstructorProperties) 
    _init(config?: IXsdSimpleType.ConstructorProperties): void
}

export module IXsdTypeDef {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface IXsdTypeDef extends GObject.Object {

    // Class property signals of GXml-0.18.GXml.IXsdTypeDef

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeDef {

    // Own properties of GXml-0.18.GXml.IXsdTypeDef

    static name: string
    static $gtype: GObject.GType<IXsdTypeDef>

    // Constructors of GXml-0.18.GXml.IXsdTypeDef

    constructor(config?: IXsdTypeDef.ConstructorProperties) 
    _init(config?: IXsdTypeDef.ConstructorProperties): void
}

export module IXsdTypeRestriction {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeDef.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdTypeRestriction

        base?: string | null
        id?: string | null
        simple_type?: IXsdSimpleType | null
        enumerations?: IXsdListTypeRestrictionEnumerations | null
        white_spaces?: IXsdListTypeRestrictionWhiteSpaces | null
        simpleType?: IXsdSimpleType | null
        whiteSpaces?: IXsdListTypeRestrictionWhiteSpaces | null
    }

}

export interface IXsdTypeRestriction extends GObject.Object, IXsdTypeDef {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestriction

    base: string | null
    id: string | null
    simple_type: IXsdSimpleType
    simpleType: IXsdSimpleType
    enumerations: IXsdListTypeRestrictionEnumerations
    white_spaces: IXsdListTypeRestrictionWhiteSpaces
    whiteSpaces: IXsdListTypeRestrictionWhiteSpaces

    // Owm methods of GXml-0.18.GXml.IXsdTypeRestriction

    get_base(): string | null
    set_base(value: string | null): void
    get_id(): string | null
    set_id(value: string | null): void
    get_simple_type(): IXsdSimpleType
    set_simple_type(value: IXsdSimpleType): void
    get_enumerations(): IXsdListTypeRestrictionEnumerations
    set_enumerations(value: IXsdListTypeRestrictionEnumerations): void
    get_white_spaces(): IXsdListTypeRestrictionWhiteSpaces
    set_white_spaces(value: IXsdListTypeRestrictionWhiteSpaces): void

    // Own virtual methods of GXml-0.18.GXml.IXsdTypeRestriction

    vfunc_get_base(): string | null
    vfunc_set_base(value: string | null): void
    vfunc_get_id(): string | null
    vfunc_set_id(value: string | null): void
    vfunc_get_simple_type(): IXsdSimpleType
    vfunc_set_simple_type(value: IXsdSimpleType): void
    vfunc_get_enumerations(): IXsdListTypeRestrictionEnumerations
    vfunc_set_enumerations(value: IXsdListTypeRestrictionEnumerations): void
    vfunc_get_white_spaces(): IXsdListTypeRestrictionWhiteSpaces
    vfunc_set_white_spaces(value: IXsdListTypeRestrictionWhiteSpaces): void

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestriction

    connect(sigName: "notify::base", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::simple-type", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type", ...args: any[]): void
    connect(sigName: "notify::enumerations", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enumerations", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::enumerations", ...args: any[]): void
    connect(sigName: "notify::white-spaces", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::white-spaces", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::white-spaces", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestriction {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestriction

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestriction>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestriction

    constructor(config?: IXsdTypeRestriction.ConstructorProperties) 
    _init(config?: IXsdTypeRestriction.ConstructorProperties): void
}

export module IXsdTypeList {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeDef.ConstructorProperties {
    }

}

export interface IXsdTypeList extends GObject.Object, IXsdTypeDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeList

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeList {

    // Own properties of GXml-0.18.GXml.IXsdTypeList

    static name: string
    static $gtype: GObject.GType<IXsdTypeList>

    // Constructors of GXml-0.18.GXml.IXsdTypeList

    constructor(config?: IXsdTypeList.ConstructorProperties) 
    _init(config?: IXsdTypeList.ConstructorProperties): void
}

export module IXsdTypeUnion {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeDef.ConstructorProperties {
    }

}

export interface IXsdTypeUnion extends GObject.Object, IXsdTypeDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeUnion

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeUnion {

    // Own properties of GXml-0.18.GXml.IXsdTypeUnion

    static name: string
    static $gtype: GObject.GType<IXsdTypeUnion>

    // Constructors of GXml-0.18.GXml.IXsdTypeUnion

    constructor(config?: IXsdTypeUnion.ConstructorProperties) 
    _init(config?: IXsdTypeUnion.ConstructorProperties): void
}

export module IXsdTypeRestrictionDef {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdTypeRestrictionDef

        annotation?: IXsdAnnotation | null
    }

}

export interface IXsdTypeRestrictionDef extends GObject.Object {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionDef

    annotation: IXsdAnnotation

    // Owm methods of GXml-0.18.GXml.IXsdTypeRestrictionDef

    get_annotation(): IXsdAnnotation
    set_annotation(value: IXsdAnnotation): void

    // Own virtual methods of GXml-0.18.GXml.IXsdTypeRestrictionDef

    vfunc_get_annotation(): IXsdAnnotation
    vfunc_set_annotation(value: IXsdAnnotation): void

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionDef

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionDef

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionDef>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionDef

    constructor(config?: IXsdTypeRestrictionDef.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionDef.ConstructorProperties): void
}

export module IXsdTypeRestrictionMinExclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionMinExclusive extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionMinExclusive

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionMinExclusive {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMinExclusive

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionMinExclusive>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionMinExclusive

    constructor(config?: IXsdTypeRestrictionMinExclusive.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionMinExclusive.ConstructorProperties): void
}

export module IXsdTypeRestrictionMinInclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionMinInclusive extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionMinInclusive

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionMinInclusive {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMinInclusive

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionMinInclusive>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionMinInclusive

    constructor(config?: IXsdTypeRestrictionMinInclusive.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionMinInclusive.ConstructorProperties): void
}

export module IXsdTypeRestrictionMaxExclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionMaxExclusive extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionMaxExclusive

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionMaxExclusive {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMaxExclusive

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionMaxExclusive>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionMaxExclusive

    constructor(config?: IXsdTypeRestrictionMaxExclusive.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionMaxExclusive.ConstructorProperties): void
}

export module IXsdTypeRestrictionMaxInclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionMaxInclusive extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionMaxInclusive

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionMaxInclusive {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMaxInclusive

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionMaxInclusive>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionMaxInclusive

    constructor(config?: IXsdTypeRestrictionMaxInclusive.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionMaxInclusive.ConstructorProperties): void
}

export module IXsdTypeRestrictionTotalDigits {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionTotalDigits extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionTotalDigits

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionTotalDigits {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionTotalDigits

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionTotalDigits>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionTotalDigits

    constructor(config?: IXsdTypeRestrictionTotalDigits.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionTotalDigits.ConstructorProperties): void
}

export module IXsdTypeRestrictionFractionDigits {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionFractionDigits extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionFractionDigits

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionFractionDigits {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionFractionDigits

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionFractionDigits>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionFractionDigits

    constructor(config?: IXsdTypeRestrictionFractionDigits.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionFractionDigits.ConstructorProperties): void
}

export module IXsdTypeRestrictionLength {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionLength extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionLength

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionLength {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionLength

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionLength>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionLength

    constructor(config?: IXsdTypeRestrictionLength.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionLength.ConstructorProperties): void
}

export module IXsdTypeRestrictionMinLength {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionMinLength extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionMinLength

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionMinLength {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMinLength

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionMinLength>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionMinLength

    constructor(config?: IXsdTypeRestrictionMinLength.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionMinLength.ConstructorProperties): void
}

export module IXsdTypeRestrictionMaxLength {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionMaxLength extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionMaxLength

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionMaxLength {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMaxLength

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionMaxLength>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionMaxLength

    constructor(config?: IXsdTypeRestrictionMaxLength.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionMaxLength.ConstructorProperties): void
}

export module IXsdTypeRestrictionEnumeration {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

        id?: string | null
        value?: string | null
    }

}

export interface IXsdTypeRestrictionEnumeration extends GObject.Object, IXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

    id: string | null
    value: string | null

    // Owm methods of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

    get_id(): string | null
    set_id(value: string | null): void
    get_value(): string | null
    set_value(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

    vfunc_get_id(): string | null
    vfunc_set_id(value: string | null): void
    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

    connect(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionEnumeration {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionEnumeration>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionEnumeration

    constructor(config?: IXsdTypeRestrictionEnumeration.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionEnumeration.ConstructorProperties): void
}

export module IXsdTypeRestrictionWhiteSpace {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

        fixed?: boolean | null
        id?: string | null
        value?: string | null
    }

}

export interface IXsdTypeRestrictionWhiteSpace extends GObject.Object, IXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

    fixed: boolean
    id: string | null
    value: string | null

    // Owm methods of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

    get_fixed(): boolean
    set_fixed(value: boolean): void
    get_id(): string | null
    set_id(value: string | null): void
    get_value(): string | null
    set_value(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

    vfunc_get_fixed(): boolean
    vfunc_set_fixed(value: boolean): void
    vfunc_get_id(): string | null
    vfunc_set_id(value: string | null): void
    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

    connect(sigName: "notify::fixed", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::fixed", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionWhiteSpace {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionWhiteSpace>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpace

    constructor(config?: IXsdTypeRestrictionWhiteSpace.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionWhiteSpace.ConstructorProperties): void
}

export module IXsdTypeRestrictionPattern {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionPattern extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionPattern

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionPattern {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionPattern

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionPattern>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionPattern

    constructor(config?: IXsdTypeRestrictionPattern.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionPattern.ConstructorProperties): void
}

export module IXsdTypeRestrictionAssertion {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionAssertion extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionAssertion

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionAssertion {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionAssertion

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionAssertion>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionAssertion

    constructor(config?: IXsdTypeRestrictionAssertion.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionAssertion.ConstructorProperties): void
}

export module IXsdTypeRestrictionExplicitTimezone {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface IXsdTypeRestrictionExplicitTimezone extends GObject.Object, IXsdTypeRestrictionDef {

    // Class property signals of GXml-0.18.GXml.IXsdTypeRestrictionExplicitTimezone

    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdTypeRestrictionExplicitTimezone {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionExplicitTimezone

    static name: string
    static $gtype: GObject.GType<IXsdTypeRestrictionExplicitTimezone>

    // Constructors of GXml-0.18.GXml.IXsdTypeRestrictionExplicitTimezone

    constructor(config?: IXsdTypeRestrictionExplicitTimezone.ConstructorProperties) 
    _init(config?: IXsdTypeRestrictionExplicitTimezone.ConstructorProperties): void
}

export module IXsdComplexType {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties, IXsdBaseType.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdComplexType

        abstract?: boolean | null
        block?: string | null
        final?: string | null
        mixed?: boolean | null
        name?: string | null
        default_attributes_apply?: boolean | null
        content_type?: IXsdBaseContent | null
        defaultAttributesApply?: boolean | null
        contentType?: IXsdBaseContent | null
    }

}

export interface IXsdComplexType extends GObject.Object, DomElement, IXsdBaseType {

    // Own properties of GXml-0.18.GXml.IXsdComplexType

    abstract: boolean
    block: string | null
    final: string | null
    mixed: boolean
    name: string | null
    default_attributes_apply: boolean
    defaultAttributesApply: boolean
    content_type: IXsdBaseContent
    contentType: IXsdBaseContent
    readonly type_attributes: IXsdListAttributes
    readonly typeAttributes: IXsdListAttributes
    readonly group_attributes: IXsdListAttributesGroup
    readonly groupAttributes: IXsdListAttributesGroup

    // Owm methods of GXml-0.18.GXml.IXsdComplexType

    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string | null
    set_block(value: string | null): void
    get_final(): string | null
    set_final(value: string | null): void
    get_mixed(): boolean
    set_mixed(value: boolean): void
    get_name(): string | null
    set_name(value: string | null): void
    get_default_attributes_apply(): boolean
    set_default_attributes_apply(value: boolean): void
    get_content_type(): IXsdBaseContent
    set_content_type(value: IXsdBaseContent): void
    get_type_attributes(): IXsdListAttributes
    get_group_attributes(): IXsdListAttributesGroup

    // Own virtual methods of GXml-0.18.GXml.IXsdComplexType

    vfunc_get_abstract(): boolean
    vfunc_set_abstract(value: boolean): void
    vfunc_get_block(): string | null
    vfunc_set_block(value: string | null): void
    vfunc_get_final(): string | null
    vfunc_set_final(value: string | null): void
    vfunc_get_mixed(): boolean
    vfunc_set_mixed(value: boolean): void
    vfunc_get_name(): string | null
    vfunc_set_name(value: string | null): void
    vfunc_get_default_attributes_apply(): boolean
    vfunc_set_default_attributes_apply(value: boolean): void
    vfunc_get_content_type(): IXsdBaseContent
    vfunc_set_content_type(value: IXsdBaseContent): void
    vfunc_get_type_attributes(): IXsdListAttributes
    vfunc_get_group_attributes(): IXsdListAttributesGroup

    // Class property signals of GXml-0.18.GXml.IXsdComplexType

    connect(sigName: "notify::abstract", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::abstract", ...args: any[]): void
    connect(sigName: "notify::block", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::block", ...args: any[]): void
    connect(sigName: "notify::final", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::final", ...args: any[]): void
    connect(sigName: "notify::mixed", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mixed", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::mixed", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::default-attributes-apply", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-attributes-apply", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-attributes-apply", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::type-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-attributes", ...args: any[]): void
    connect(sigName: "notify::group-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::group-attributes", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::anotation", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdComplexType {

    // Own properties of GXml-0.18.GXml.IXsdComplexType

    static name: string
    static $gtype: GObject.GType<IXsdComplexType>

    // Constructors of GXml-0.18.GXml.IXsdComplexType

    constructor(config?: IXsdComplexType.ConstructorProperties) 
    _init(config?: IXsdComplexType.ConstructorProperties): void
}

export module IXsdExtension {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdExtension

        base?: string | null
    }

}

export interface IXsdExtension extends GObject.Object, DomElement {

    // Own properties of GXml-0.18.GXml.IXsdExtension

    base: string | null

    // Owm methods of GXml-0.18.GXml.IXsdExtension

    get_base(): string | null
    set_base(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.IXsdExtension

    vfunc_get_base(): string | null
    vfunc_set_base(value: string | null): void

    // Class property signals of GXml-0.18.GXml.IXsdExtension

    connect(sigName: "notify::base", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdExtension {

    // Own properties of GXml-0.18.GXml.IXsdExtension

    static name: string
    static $gtype: GObject.GType<IXsdExtension>

    // Constructors of GXml-0.18.GXml.IXsdExtension

    constructor(config?: IXsdExtension.ConstructorProperties) 
    _init(config?: IXsdExtension.ConstructorProperties): void
}

export module IXsdElement {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, DomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdElement

        abstract?: boolean | null
        block?: string | null
        "default"?: string | null
        final?: string | null
        fixed?: string | null
        form?: string | null
        id?: string | null
        maxOccurs?: string | null
        minOccurs?: string | null
        name?: string | null
        nillable?: boolean | null
        ref?: string | null
        substitution_group?: DomTokenList | null
        target_namespace?: string | null
        object_type?: string | null
        anotation?: IXsdAnnotation | null
        simple_type?: IXsdSimpleType | null
        complex_type?: IXsdComplexType | null
        substitutionGroup?: DomTokenList | null
        targetNamespace?: string | null
        objectType?: string | null
        simpleType?: IXsdSimpleType | null
        complexType?: IXsdComplexType | null
    }

}

export interface IXsdElement extends GObject.Object, DomElement {

    // Own properties of GXml-0.18.GXml.IXsdElement

    abstract: boolean
    block: string | null
    "default": string | null
    final: string | null
    fixed: string | null
    form: string | null
    id: string | null
    maxOccurs: string | null
    minOccurs: string | null
    name: string | null
    nillable: boolean
    // Has conflict: ref: string | null
    substitution_group: DomTokenList
    substitutionGroup: DomTokenList
    target_namespace: string | null
    targetNamespace: string | null
    object_type: string | null
    objectType: string | null
    anotation: IXsdAnnotation
    simple_type: IXsdSimpleType
    simpleType: IXsdSimpleType
    complex_type: IXsdComplexType
    complexType: IXsdComplexType

    // Owm methods of GXml-0.18.GXml.IXsdElement

    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string | null
    set_block(value: string | null): void
    get_default(): string | null
    set_default(value: string | null): void
    get_final(): string | null
    set_final(value: string | null): void
    get_fixed(): string | null
    set_fixed(value: string | null): void
    get_form(): string | null
    set_form(value: string | null): void
    get_id(): string | null
    set_id(value?: string | null): void
    get_maxOccurs(): string | null
    set_maxOccurs(value: string | null): void
    get_minOccurs(): string | null
    set_minOccurs(value: string | null): void
    get_name(): string | null
    set_name(value: string | null): void
    get_nillable(): boolean
    set_nillable(value: boolean): void
    get_ref(): string | null
    set_ref(value: string | null): void
    get_substitution_group(): DomTokenList
    set_substitution_group(value: DomTokenList): void
    get_target_namespace(): string | null
    set_target_namespace(value: string | null): void
    get_object_type(): string | null
    set_object_type(value: string | null): void
    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void
    get_simple_type(): IXsdSimpleType
    set_simple_type(value: IXsdSimpleType): void
    get_complex_type(): IXsdComplexType
    set_complex_type(value: IXsdComplexType): void

    // Own virtual methods of GXml-0.18.GXml.IXsdElement

    vfunc_get_abstract(): boolean
    vfunc_set_abstract(value: boolean): void
    vfunc_get_block(): string | null
    vfunc_set_block(value: string | null): void
    vfunc_get_default(): string | null
    vfunc_set_default(value: string | null): void
    vfunc_get_final(): string | null
    vfunc_set_final(value: string | null): void
    vfunc_get_fixed(): string | null
    vfunc_set_fixed(value: string | null): void
    vfunc_get_form(): string | null
    vfunc_set_form(value: string | null): void
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_maxOccurs(): string | null
    vfunc_set_maxOccurs(value: string | null): void
    vfunc_get_minOccurs(): string | null
    vfunc_set_minOccurs(value: string | null): void
    vfunc_get_name(): string | null
    vfunc_set_name(value: string | null): void
    vfunc_get_nillable(): boolean
    vfunc_set_nillable(value: boolean): void
    vfunc_get_ref(): string | null
    vfunc_set_ref(value: string | null): void
    vfunc_get_substitution_group(): DomTokenList
    vfunc_set_substitution_group(value: DomTokenList): void
    vfunc_get_target_namespace(): string | null
    vfunc_set_target_namespace(value: string | null): void
    vfunc_get_object_type(): string | null
    vfunc_set_object_type(value: string | null): void
    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void
    vfunc_get_simple_type(): IXsdSimpleType
    vfunc_set_simple_type(value: IXsdSimpleType): void
    vfunc_get_complex_type(): IXsdComplexType
    vfunc_set_complex_type(value: IXsdComplexType): void

    // Class property signals of GXml-0.18.GXml.IXsdElement

    connect(sigName: "notify::abstract", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::abstract", ...args: any[]): void
    connect(sigName: "notify::block", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::block", ...args: any[]): void
    connect(sigName: "notify::default", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default", ...args: any[]): void
    connect(sigName: "notify::final", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::final", ...args: any[]): void
    connect(sigName: "notify::fixed", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::fixed", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::maxOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maxOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::maxOccurs", ...args: any[]): void
    connect(sigName: "notify::minOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::minOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::minOccurs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::nillable", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nillable", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nillable", ...args: any[]): void
    connect(sigName: "notify::ref", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ref", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ref", ...args: any[]): void
    connect(sigName: "notify::substitution-group", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::substitution-group", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::substitution-group", ...args: any[]): void
    connect(sigName: "notify::target-namespace", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target-namespace", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target-namespace", ...args: any[]): void
    connect(sigName: "notify::object-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::object-type", ...args: any[]): void
    connect(sigName: "notify::anotation", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::simple-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type", ...args: any[]): void
    connect(sigName: "notify::complex-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::complex-type", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdElement {

    // Own properties of GXml-0.18.GXml.IXsdElement

    static name: string
    static $gtype: GObject.GType<IXsdElement>

    // Constructors of GXml-0.18.GXml.IXsdElement

    constructor(config?: IXsdElement.ConstructorProperties) 
    _init(config?: IXsdElement.ConstructorProperties): void
}

export module IXsdAnnotation {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface IXsdAnnotation extends GObject.Object {

    // Class property signals of GXml-0.18.GXml.IXsdAnnotation

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdAnnotation {

    // Own properties of GXml-0.18.GXml.IXsdAnnotation

    static name: string
    static $gtype: GObject.GType<IXsdAnnotation>

    // Constructors of GXml-0.18.GXml.IXsdAnnotation

    constructor(config?: IXsdAnnotation.ConstructorProperties) 
    _init(config?: IXsdAnnotation.ConstructorProperties): void
}

export module IXsdBaseContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdBaseContent

        anotation?: IXsdAnnotation | null
    }

}

export interface IXsdBaseContent extends GObject.Object {

    // Own properties of GXml-0.18.GXml.IXsdBaseContent

    anotation: IXsdAnnotation

    // Owm methods of GXml-0.18.GXml.IXsdBaseContent

    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void

    // Own virtual methods of GXml-0.18.GXml.IXsdBaseContent

    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void

    // Class property signals of GXml-0.18.GXml.IXsdBaseContent

    connect(sigName: "notify::anotation", callback: (($obj: IXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdBaseContent {

    // Own properties of GXml-0.18.GXml.IXsdBaseContent

    static name: string
    static $gtype: GObject.GType<IXsdBaseContent>

    // Constructors of GXml-0.18.GXml.IXsdBaseContent

    constructor(config?: IXsdBaseContent.ConstructorProperties) 
    _init(config?: IXsdBaseContent.ConstructorProperties): void
}

export module IXsdSimpleContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdBaseContent.ConstructorProperties {
    }

}

export interface IXsdSimpleContent extends GObject.Object, IXsdBaseContent {

    // Class property signals of GXml-0.18.GXml.IXsdSimpleContent

    connect(sigName: "notify::anotation", callback: (($obj: IXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdSimpleContent {

    // Own properties of GXml-0.18.GXml.IXsdSimpleContent

    static name: string
    static $gtype: GObject.GType<IXsdSimpleContent>

    // Constructors of GXml-0.18.GXml.IXsdSimpleContent

    constructor(config?: IXsdSimpleContent.ConstructorProperties) 
    _init(config?: IXsdSimpleContent.ConstructorProperties): void
}

export module IXsdComplexContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdBaseContent.ConstructorProperties {
    }

}

export interface IXsdComplexContent extends GObject.Object, IXsdBaseContent {

    // Class property signals of GXml-0.18.GXml.IXsdComplexContent

    connect(sigName: "notify::anotation", callback: (($obj: IXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdComplexContent {

    // Own properties of GXml-0.18.GXml.IXsdComplexContent

    static name: string
    static $gtype: GObject.GType<IXsdComplexContent>

    // Constructors of GXml-0.18.GXml.IXsdComplexContent

    constructor(config?: IXsdComplexContent.ConstructorProperties) 
    _init(config?: IXsdComplexContent.ConstructorProperties): void
}

export module IXsdOpenContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdBaseContent.ConstructorProperties {
    }

}

export interface IXsdOpenContent extends GObject.Object, IXsdBaseContent {

    // Class property signals of GXml-0.18.GXml.IXsdOpenContent

    connect(sigName: "notify::anotation", callback: (($obj: IXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdOpenContent {

    // Own properties of GXml-0.18.GXml.IXsdOpenContent

    static name: string
    static $gtype: GObject.GType<IXsdOpenContent>

    // Constructors of GXml-0.18.GXml.IXsdOpenContent

    constructor(config?: IXsdOpenContent.ConstructorProperties) 
    _init(config?: IXsdOpenContent.ConstructorProperties): void
}

export module IXsdBaseAttribute {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdBaseAttribute

        anotation?: IXsdAnnotation | null
    }

}

export interface IXsdBaseAttribute extends GObject.Object {

    // Own properties of GXml-0.18.GXml.IXsdBaseAttribute

    anotation: IXsdAnnotation

    // Owm methods of GXml-0.18.GXml.IXsdBaseAttribute

    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void

    // Own virtual methods of GXml-0.18.GXml.IXsdBaseAttribute

    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void

    // Class property signals of GXml-0.18.GXml.IXsdBaseAttribute

    connect(sigName: "notify::anotation", callback: (($obj: IXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdBaseAttribute {

    // Own properties of GXml-0.18.GXml.IXsdBaseAttribute

    static name: string
    static $gtype: GObject.GType<IXsdBaseAttribute>

    // Constructors of GXml-0.18.GXml.IXsdBaseAttribute

    constructor(config?: IXsdBaseAttribute.ConstructorProperties) 
    _init(config?: IXsdBaseAttribute.ConstructorProperties): void
}

export module IXsdAttribute {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface IXsdAttribute extends GObject.Object {

    // Class property signals of GXml-0.18.GXml.IXsdAttribute

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdAttribute {

    // Own properties of GXml-0.18.GXml.IXsdAttribute

    static name: string
    static $gtype: GObject.GType<IXsdAttribute>

    // Constructors of GXml-0.18.GXml.IXsdAttribute

    constructor(config?: IXsdAttribute.ConstructorProperties) 
    _init(config?: IXsdAttribute.ConstructorProperties): void
}

export module IXsdAttributeGroup {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface IXsdAttributeGroup extends GObject.Object {

    // Class property signals of GXml-0.18.GXml.IXsdAttributeGroup

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdAttributeGroup {

    // Own properties of GXml-0.18.GXml.IXsdAttributeGroup

    static name: string
    static $gtype: GObject.GType<IXsdAttributeGroup>

    // Constructors of GXml-0.18.GXml.IXsdAttributeGroup

    constructor(config?: IXsdAttributeGroup.ConstructorProperties) 
    _init(config?: IXsdAttributeGroup.ConstructorProperties): void
}

export module IXsdList {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Collection.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.IXsdList

        element?: DomElement | null
        items_type?: GObject.GType | null
        items_name?: GObject.GType | null
        itemsType?: GObject.GType | null
        itemsName?: GObject.GType | null
    }

}

export interface IXsdList extends GObject.Object, Collection {

    // Own properties of GXml-0.18.GXml.IXsdList

    element: DomElement
    items_type: GObject.GType
    itemsType: GObject.GType
    items_name: any
    itemsName: any
    readonly length: number

    // Owm methods of GXml-0.18.GXml.IXsdList

    get_item(index: number): DomElement | null
    append(element: DomElement): void
    remove(index: number): void
    index_of(element: DomElement): number
    get_element(): DomElement
    set_element(value: DomElement): void
    get_items_type(): GObject.GType
    set_items_type(value: GObject.GType): void
    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    set_items_name(value: GObject.GType): void
    get_length(): number

    // Own virtual methods of GXml-0.18.GXml.IXsdList

    vfunc_get_item(index: number): DomElement | null
    vfunc_append(element: DomElement): void
    vfunc_remove(index: number): void
    vfunc_index_of(element: DomElement): number
    vfunc_get_element(): DomElement
    vfunc_set_element(value: DomElement): void
    vfunc_get_items_type(): GObject.GType
    vfunc_set_items_type(value: GObject.GType): void
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_set_items_name(value: GObject.GType): void
    vfunc_get_length(): number

    // Class property signals of GXml-0.18.GXml.IXsdList

    connect(sigName: "notify::element", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdList {

    // Own properties of GXml-0.18.GXml.IXsdList

    static name: string
    static $gtype: GObject.GType<IXsdList>

    // Constructors of GXml-0.18.GXml.IXsdList

    constructor(config?: IXsdList.ConstructorProperties) 
    _init(config?: IXsdList.ConstructorProperties): void
}

export module IXsdListElements {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListElements extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListElements

    connect(sigName: "notify::element", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListElements {

    // Own properties of GXml-0.18.GXml.IXsdListElements

    static name: string
    static $gtype: GObject.GType<IXsdListElements>

    // Constructors of GXml-0.18.GXml.IXsdListElements

    constructor(config?: IXsdListElements.ConstructorProperties) 
    _init(config?: IXsdListElements.ConstructorProperties): void
}

export module IXsdListSimpleTypes {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListSimpleTypes extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListSimpleTypes

    connect(sigName: "notify::element", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListSimpleTypes {

    // Own properties of GXml-0.18.GXml.IXsdListSimpleTypes

    static name: string
    static $gtype: GObject.GType<IXsdListSimpleTypes>

    // Constructors of GXml-0.18.GXml.IXsdListSimpleTypes

    constructor(config?: IXsdListSimpleTypes.ConstructorProperties) 
    _init(config?: IXsdListSimpleTypes.ConstructorProperties): void
}

export module IXsdListComplexTypes {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListComplexTypes extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListComplexTypes

    connect(sigName: "notify::element", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListComplexTypes {

    // Own properties of GXml-0.18.GXml.IXsdListComplexTypes

    static name: string
    static $gtype: GObject.GType<IXsdListComplexTypes>

    // Constructors of GXml-0.18.GXml.IXsdListComplexTypes

    constructor(config?: IXsdListComplexTypes.ConstructorProperties) 
    _init(config?: IXsdListComplexTypes.ConstructorProperties): void
}

export module IXsdListAttributes {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListAttributes extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListAttributes

    connect(sigName: "notify::element", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListAttributes {

    // Own properties of GXml-0.18.GXml.IXsdListAttributes

    static name: string
    static $gtype: GObject.GType<IXsdListAttributes>

    // Constructors of GXml-0.18.GXml.IXsdListAttributes

    constructor(config?: IXsdListAttributes.ConstructorProperties) 
    _init(config?: IXsdListAttributes.ConstructorProperties): void
}

export module IXsdListAttributesGroup {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListAttributesGroup extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListAttributesGroup

    connect(sigName: "notify::element", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListAttributesGroup {

    // Own properties of GXml-0.18.GXml.IXsdListAttributesGroup

    static name: string
    static $gtype: GObject.GType<IXsdListAttributesGroup>

    // Constructors of GXml-0.18.GXml.IXsdListAttributesGroup

    constructor(config?: IXsdListAttributesGroup.ConstructorProperties) 
    _init(config?: IXsdListAttributesGroup.ConstructorProperties): void
}

export module IXsdListTypeRestrictionEnumerations {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListTypeRestrictionEnumerations extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListTypeRestrictionEnumerations

    connect(sigName: "notify::element", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListTypeRestrictionEnumerations {

    // Own properties of GXml-0.18.GXml.IXsdListTypeRestrictionEnumerations

    static name: string
    static $gtype: GObject.GType<IXsdListTypeRestrictionEnumerations>

    // Constructors of GXml-0.18.GXml.IXsdListTypeRestrictionEnumerations

    constructor(config?: IXsdListTypeRestrictionEnumerations.ConstructorProperties) 
    _init(config?: IXsdListTypeRestrictionEnumerations.ConstructorProperties): void
}

export module IXsdListTypeRestrictionWhiteSpaces {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, IXsdList.ConstructorProperties {
    }

}

export interface IXsdListTypeRestrictionWhiteSpaces extends GObject.Object, IXsdList {

    // Conflicting properties

    items_name: any
    itemsName: any

    // Conflicting methods

    get_items_name(): GObject.GType

    // Overloads of get_items_name

    get_items_name(): string | null
    get_items_name(): string | null
    vfunc_get_items_name(): GObject.GType

    // Overloads of vfunc_get_items_name

    vfunc_get_items_name(): string | null
    vfunc_get_items_name(): string | null

    // Class property signals of GXml-0.18.GXml.IXsdListTypeRestrictionWhiteSpaces

    connect(sigName: "notify::element", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class IXsdListTypeRestrictionWhiteSpaces {

    // Own properties of GXml-0.18.GXml.IXsdListTypeRestrictionWhiteSpaces

    static name: string
    static $gtype: GObject.GType<IXsdListTypeRestrictionWhiteSpaces>

    // Constructors of GXml-0.18.GXml.IXsdListTypeRestrictionWhiteSpaces

    constructor(config?: IXsdListTypeRestrictionWhiteSpaces.ConstructorProperties) 
    _init(config?: IXsdListTypeRestrictionWhiteSpaces.ConstructorProperties): void
}

export module Serializable {

    // Signal callback interfaces

    /**
     * Signal callback interface for `serialize-unknown-property`
     */
    export interface SerializeUnknownPropertySignalCallback {
        ($obj: Serializable, element: Node, prop: GObject.ParamSpec): void
    }

    /**
     * Signal callback interface for `serialize-unknown-property-type`
     */
    export interface SerializeUnknownPropertyTypeSignalCallback {
        ($obj: Serializable, element: Node, prop: GObject.ParamSpec): void
    }

    /**
     * Signal callback interface for `deserialize-unknown-property`
     */
    export interface DeserializeUnknownPropertySignalCallback {
        ($obj: Serializable, node: Node, prop: GObject.ParamSpec): void
    }

    /**
     * Signal callback interface for `deserialize-unknown-property-type`
     */
    export interface DeserializeUnknownPropertyTypeSignalCallback {
        ($obj: Serializable, node: Node, prop: GObject.ParamSpec): void
    }


    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Serializable

        serialized_xml_node_value?: string | null
        serializedXmlNodeValue?: string | null
    }

}

export interface Serializable extends GObject.Object {

    // Own properties of GXml-0.18.GXml.Serializable

    readonly unknown_serializable_properties: Gee.Map
    readonly unknownSerializableProperties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    readonly unknownSerializableNodes: Gee.Collection
    serialized_xml_node_value: string | null
    serializedXmlNodeValue: string | null

    // Owm methods of GXml-0.18.GXml.Serializable

    get_enable_unknown_serializable_property(): boolean
    set_default_namespace(node: Node): boolean
    serialize_use_xml_node_value(): boolean
    node_name(): string | null
    property_use_nick(): boolean
    serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    find_property_spec(property_name: string | null): GObject.ParamSpec | null
    default_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void

    // Own virtual methods of GXml-0.18.GXml.Serializable

    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_node_name(): string | null
    vfunc_property_use_nick(): boolean
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_default_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void

    // Own signals of GXml-0.18.GXml.Serializable

    connect(sigName: "serialize-unknown-property", callback: Serializable.SerializeUnknownPropertySignalCallback): number
    connect_after(sigName: "serialize-unknown-property", callback: Serializable.SerializeUnknownPropertySignalCallback): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec, ...args: any[]): void
    connect(sigName: "serialize-unknown-property-type", callback: Serializable.SerializeUnknownPropertyTypeSignalCallback): number
    connect_after(sigName: "serialize-unknown-property-type", callback: Serializable.SerializeUnknownPropertyTypeSignalCallback): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec, ...args: any[]): void
    connect(sigName: "deserialize-unknown-property", callback: Serializable.DeserializeUnknownPropertySignalCallback): number
    connect_after(sigName: "deserialize-unknown-property", callback: Serializable.DeserializeUnknownPropertySignalCallback): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec, ...args: any[]): void
    connect(sigName: "deserialize-unknown-property-type", callback: Serializable.DeserializeUnknownPropertyTypeSignalCallback): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: Serializable.DeserializeUnknownPropertyTypeSignalCallback): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec, ...args: any[]): void

    // Class property signals of GXml-0.18.GXml.Serializable

    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Serializable {

    // Own properties of GXml-0.18.GXml.Serializable

    static name: string
    static $gtype: GObject.GType<Serializable>

    // Constructors of GXml-0.18.GXml.Serializable

    constructor(config?: Serializable.ConstructorProperties) 
    _init(config?: Serializable.ConstructorProperties): void
    static string_to_gvalue(str: string | null, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string | null
}

export module SerializableCollection {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Gee.Traversable.ConstructorProperties, Serializable.ConstructorProperties {
    }

}

export interface SerializableCollection extends GObject.Object, Gee.Traversable, Serializable {

    // Owm methods of GXml-0.18.GXml.SerializableCollection

    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    is_collection(): boolean

    // Own virtual methods of GXml-0.18.GXml.SerializableCollection

    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_is_collection(): boolean

    // Class property signals of GXml-0.18.GXml.SerializableCollection

    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableCollection {

    // Own properties of GXml-0.18.GXml.SerializableCollection

    static name: string
    static $gtype: GObject.GType<SerializableCollection>

    // Constructors of GXml-0.18.GXml.SerializableCollection

    constructor(config?: SerializableCollection.ConstructorProperties) 
    _init(config?: SerializableCollection.ConstructorProperties): void
}

export module SerializableMapDualKey {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface SerializableMapDualKey extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.SerializableMapDualKey

    get_map_primary_key(): any | null
    get_map_secondary_key(): any | null

    // Own virtual methods of GXml-0.18.GXml.SerializableMapDualKey

    vfunc_get_map_primary_key(): any | null
    vfunc_get_map_secondary_key(): any | null

    // Class property signals of GXml-0.18.GXml.SerializableMapDualKey

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableMapDualKey {

    // Own properties of GXml-0.18.GXml.SerializableMapDualKey

    static name: string
    static $gtype: GObject.GType<SerializableMapDualKey>

    // Constructors of GXml-0.18.GXml.SerializableMapDualKey

    constructor(config?: SerializableMapDualKey.ConstructorProperties) 
    _init(config?: SerializableMapDualKey.ConstructorProperties): void
}

export module SerializableMapKey {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface SerializableMapKey extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.SerializableMapKey

    get_map_key(): any | null

    // Own virtual methods of GXml-0.18.GXml.SerializableMapKey

    vfunc_get_map_key(): any | null

    // Class property signals of GXml-0.18.GXml.SerializableMapKey

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableMapKey {

    // Own properties of GXml-0.18.GXml.SerializableMapKey

    static name: string
    static $gtype: GObject.GType<SerializableMapKey>

    // Constructors of GXml-0.18.GXml.SerializableMapKey

    constructor(config?: SerializableMapKey.ConstructorProperties) 
    _init(config?: SerializableMapKey.ConstructorProperties): void
}

export module SerializableProperty {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface SerializableProperty extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.SerializableProperty

    get_serializable_property_value(): string | null
    set_serializable_property_value(val?: string | null): void
    deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_serialize_property(element: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean

    // Own virtual methods of GXml-0.18.GXml.SerializableProperty

    vfunc_get_serializable_property_value(): string | null
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null

    // Class property signals of GXml-0.18.GXml.SerializableProperty

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableProperty {

    // Own properties of GXml-0.18.GXml.SerializableProperty

    static name: string
    static $gtype: GObject.GType<SerializableProperty>

    // Constructors of GXml-0.18.GXml.SerializableProperty

    constructor(config?: SerializableProperty.ConstructorProperties) 
    _init(config?: SerializableProperty.ConstructorProperties): void
}

export module Text {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties, Node.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.Text

        str?: string | null
    }

}

export interface Text extends GObject.Object, Node {

    // Own properties of GXml-0.18.GXml.Text

    str: string | null

    // Owm methods of GXml-0.18.GXml.Text

    get_str(): string | null
    set_str(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.Text

    vfunc_get_str(): string | null
    vfunc_set_str(value: string | null): void

    // Class property signals of GXml-0.18.GXml.Text

    connect(sigName: "notify::str", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class Text {

    // Own properties of GXml-0.18.GXml.Text

    static name: string
    static $gtype: GObject.GType<Text>

    // Constructors of GXml-0.18.GXml.Text

    constructor(config?: Text.ConstructorProperties) 
    _init(config?: Text.ConstructorProperties): void
}

export module XPathContext {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface XPathContext extends GObject.Object {

    // Owm methods of GXml-0.18.GXml.XPathContext

    evaluate(expression: string | null, resolver?: Gee.List | null): XPathObject

    // Own virtual methods of GXml-0.18.GXml.XPathContext

    vfunc_evaluate(expression: string | null, resolver?: Gee.List | null): XPathObject

    // Class property signals of GXml-0.18.GXml.XPathContext

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class XPathContext {

    // Own properties of GXml-0.18.GXml.XPathContext

    static name: string
    static $gtype: GObject.GType<XPathContext>

    // Constructors of GXml-0.18.GXml.XPathContext

    constructor(config?: XPathContext.ConstructorProperties) 
    _init(config?: XPathContext.ConstructorProperties): void
}

export module XPathObject {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface XPathObject extends GObject.Object {

    // Own properties of GXml-0.18.GXml.XPathObject

    readonly object_type: XPathObjectType
    readonly objectType: XPathObjectType
    readonly boolean_value: boolean
    readonly booleanValue: boolean
    readonly string_value: string | null
    readonly stringValue: string | null
    readonly number_value: number
    readonly numberValue: number
    readonly nodeset: DomHTMLCollection

    // Owm methods of GXml-0.18.GXml.XPathObject

    get_object_type(): XPathObjectType
    get_boolean_value(): boolean
    get_string_value(): string | null
    get_number_value(): number
    get_nodeset(): DomHTMLCollection

    // Own virtual methods of GXml-0.18.GXml.XPathObject

    vfunc_get_object_type(): XPathObjectType
    vfunc_get_boolean_value(): boolean
    vfunc_get_string_value(): string | null
    vfunc_get_number_value(): number
    vfunc_get_nodeset(): DomHTMLCollection

    // Class property signals of GXml-0.18.GXml.XPathObject

    connect(sigName: "notify::object-type", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::object-type", ...args: any[]): void
    connect(sigName: "notify::boolean-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::boolean-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::boolean-value", ...args: any[]): void
    connect(sigName: "notify::string-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::string-value", ...args: any[]): void
    connect(sigName: "notify::number-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::number-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::number-value", ...args: any[]): void
    connect(sigName: "notify::nodeset", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodeset", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodeset", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class XPathObject {

    // Own properties of GXml-0.18.GXml.XPathObject

    static name: string
    static $gtype: GObject.GType<XPathObject>

    // Constructors of GXml-0.18.GXml.XPathObject

    constructor(config?: XPathObject.ConstructorProperties) 
    _init(config?: XPathObject.ConstructorProperties): void
}

export module CssSelectorData {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.CssSelectorData

        selector_type?: CssSelectorType | null
        data?: string | null
        value?: string | null
        selectorType?: CssSelectorType | null
    }

}

export interface CssSelectorData {

    // Own properties of GXml-0.18.GXml.CssSelectorData

    selector_type: CssSelectorType
    selectorType: CssSelectorType
    data: string | null
    value: string | null

    // Own fields of GXml-0.18.GXml.CssSelectorData

    parent_instance: GObject.Object
    priv: CssSelectorDataPrivate

    // Owm methods of GXml-0.18.GXml.CssSelectorData

    get_selector_type(): CssSelectorType
    set_selector_type(value: CssSelectorType): void
    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    get_value(): string | null
    set_value(value: string | null): void

    // Class property signals of GXml-0.18.GXml.CssSelectorData

    connect(sigName: "notify::selector-type", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selector-type", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selector-type", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class CssSelectorData extends GObject.Object {

    // Own properties of GXml-0.18.GXml.CssSelectorData

    static name: string
    static $gtype: GObject.GType<CssSelectorData>

    // Constructors of GXml-0.18.GXml.CssSelectorData

    constructor(config?: CssSelectorData.ConstructorProperties) 
    static with_values(t: CssSelectorType, data: string | null, val: string | null): CssSelectorData
    constructor() 
    static new(): CssSelectorData
    _init(config?: CssSelectorData.ConstructorProperties): void
}

export module CssSelectorParser {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface CssSelectorParser {

    // Own properties of GXml-0.18.GXml.CssSelectorParser

    readonly selectors: Gee.List

    // Own fields of GXml-0.18.GXml.CssSelectorParser

    parent_instance: GObject.Object
    priv: CssSelectorParserPrivate

    // Owm methods of GXml-0.18.GXml.CssSelectorParser

    parse(query: string | null): void
    match(element: DomElement): boolean
    get_selectors(): Gee.List

    // Class property signals of GXml-0.18.GXml.CssSelectorParser

    connect(sigName: "notify::selectors", callback: (($obj: CssSelectorParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selectors", callback: (($obj: CssSelectorParser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selectors", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class CssSelectorParser extends GObject.Object {

    // Own properties of GXml-0.18.GXml.CssSelectorParser

    static name: string
    static $gtype: GObject.GType<CssSelectorParser>

    // Constructors of GXml-0.18.GXml.CssSelectorParser

    constructor(config?: CssSelectorParser.ConstructorProperties) 
    constructor() 
    static new(): CssSelectorParser
    _init(config?: CssSelectorParser.ConstructorProperties): void
}

export module DomNodeFilter {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomNodeFilter {

    // Own fields of GXml-0.18.GXml.DomNodeFilter

    parent_instance: GObject.Object
    priv: DomNodeFilterPrivate

    // Class property signals of GXml-0.18.GXml.DomNodeFilter

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomNodeFilter extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomNodeFilter

    static name: string
    static $gtype: GObject.GType<DomNodeFilter>

    // Constructors of GXml-0.18.GXml.DomNodeFilter

    constructor(config?: DomNodeFilter.ConstructorProperties) 
    constructor() 
    static new(): DomNodeFilter
    _init(config?: DomNodeFilter.ConstructorProperties): void
}

export module DomElementList {

    // Constructor properties interface

    export interface ConstructorProperties extends DomHTMLCollection.ConstructorProperties, Gee.ArrayList.ConstructorProperties {
    }

}

export interface DomElementList extends DomHTMLCollection {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.DomElementList

    parent_instance: Gee.ArrayList
    priv: DomElementListPrivate

    // Conflicting methods

    to_array(): DomElement[]

    // Overloads of to_array

    to_array(): any[]
    to_array(): any[]
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_to_array(): DomElement[]

    // Overloads of vfunc_to_array

    vfunc_to_array(): any[]
    vfunc_to_array(): any[]
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.DomElementList

    connect(sigName: "notify::g-type", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomElementList extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.DomElementList

    static name: string
    static $gtype: GObject.GType<DomElementList>

    // Constructors of GXml-0.18.GXml.DomElementList

    constructor(config?: DomElementList.ConstructorProperties) 
    constructor() 
    static new(): DomElementList

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: DomElementList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module DomEventInit {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomEventInit

        bubbles?: boolean | null
        cancelable?: boolean | null
    }

}

export interface DomEventInit {

    // Own properties of GXml-0.18.GXml.DomEventInit

    bubbles: boolean
    cancelable: boolean

    // Own fields of GXml-0.18.GXml.DomEventInit

    parent_instance: GObject.Object
    priv: DomEventInitPrivate

    // Owm methods of GXml-0.18.GXml.DomEventInit

    get_bubbles(): boolean
    set_bubbles(value: boolean): void
    get_cancelable(): boolean
    set_cancelable(value: boolean): void

    // Class property signals of GXml-0.18.GXml.DomEventInit

    connect(sigName: "notify::bubbles", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomEventInit extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomEventInit

    static name: string
    static $gtype: GObject.GType<DomEventInit>

    // Constructors of GXml-0.18.GXml.DomEventInit

    constructor(config?: DomEventInit.ConstructorProperties) 
    constructor() 
    static new(): DomEventInit
    _init(config?: DomEventInit.ConstructorProperties): void
}

export module DomCustomEventInit {

    // Constructor properties interface

    export interface ConstructorProperties extends DomEventInit.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomCustomEventInit

        detail?: any | null
    }

}

export interface DomCustomEventInit {

    // Own properties of GXml-0.18.GXml.DomCustomEventInit

    detail: any

    // Own fields of GXml-0.18.GXml.DomCustomEventInit

    parent_instance: DomEventInit & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.DomCustomEventInit

    get_detail(): /* result */ any
    set_detail(value: any): void

    // Class property signals of GXml-0.18.GXml.DomCustomEventInit

    connect(sigName: "notify::detail", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomCustomEventInit extends DomEventInit {

    // Own properties of GXml-0.18.GXml.DomCustomEventInit

    static name: string
    static $gtype: GObject.GType<DomCustomEventInit>

    // Constructors of GXml-0.18.GXml.DomCustomEventInit

    constructor(config?: DomCustomEventInit.ConstructorProperties) 
    constructor() 
    static new(): DomCustomEventInit

    // Overloads of new

    static new(): DomEventInit
    _init(config?: DomCustomEventInit.ConstructorProperties): void
}

export module DomTimeStamp {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomTimeStamp

        time?: GLib.DateTime | null
    }

}

export interface DomTimeStamp {

    // Own properties of GXml-0.18.GXml.DomTimeStamp

    time: GLib.DateTime

    // Own fields of GXml-0.18.GXml.DomTimeStamp

    parent_instance: GObject.Object
    priv: DomTimeStampPrivate

    // Owm methods of GXml-0.18.GXml.DomTimeStamp

    to_string(): string | null
    get_time(): GLib.DateTime
    set_time(value: GLib.DateTime): void

    // Class property signals of GXml-0.18.GXml.DomTimeStamp

    connect(sigName: "notify::time", callback: (($obj: DomTimeStamp, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time", callback: (($obj: DomTimeStamp, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomTimeStamp extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomTimeStamp

    static name: string
    static $gtype: GObject.GType<DomTimeStamp>

    // Constructors of GXml-0.18.GXml.DomTimeStamp

    constructor(config?: DomTimeStamp.ConstructorProperties) 
    constructor() 
    static new(): DomTimeStamp
    _init(config?: DomTimeStamp.ConstructorProperties): void
}

export module DomMutationObserverInit {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.DomMutationObserverInit

        child_list?: boolean | null
        attributes?: boolean | null
        character_data?: boolean | null
        subtree?: boolean | null
        attribute_old_value?: boolean | null
        character_data_old_value?: boolean | null
        attribute_filter?: Gee.List | null
        childList?: boolean | null
        characterData?: boolean | null
        attributeOldValue?: boolean | null
        characterDataOldValue?: boolean | null
        attributeFilter?: Gee.List | null
    }

}

export interface DomMutationObserverInit {

    // Own properties of GXml-0.18.GXml.DomMutationObserverInit

    child_list: boolean
    childList: boolean
    attributes: boolean
    character_data: boolean
    characterData: boolean
    subtree: boolean
    attribute_old_value: boolean
    attributeOldValue: boolean
    character_data_old_value: boolean
    characterDataOldValue: boolean
    attribute_filter: Gee.List
    attributeFilter: Gee.List

    // Own fields of GXml-0.18.GXml.DomMutationObserverInit

    parent_instance: GObject.Object
    priv: DomMutationObserverInitPrivate

    // Owm methods of GXml-0.18.GXml.DomMutationObserverInit

    get_child_list(): boolean
    set_child_list(value: boolean): void
    get_attributes(): boolean
    set_attributes(value: boolean): void
    get_character_data(): boolean
    set_character_data(value: boolean): void
    get_subtree(): boolean
    set_subtree(value: boolean): void
    get_attribute_old_value(): boolean
    set_attribute_old_value(value: boolean): void
    get_character_data_old_value(): boolean
    set_character_data_old_value(value: boolean): void
    get_attribute_filter(): Gee.List
    set_attribute_filter(value: Gee.List): void

    // Class property signals of GXml-0.18.GXml.DomMutationObserverInit

    connect(sigName: "notify::child-list", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-list", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::character-data", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-data", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-data", ...args: any[]): void
    connect(sigName: "notify::subtree", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::subtree", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::subtree", ...args: any[]): void
    connect(sigName: "notify::attribute-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-old-value", ...args: any[]): void
    connect(sigName: "notify::character-data-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-data-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-data-old-value", ...args: any[]): void
    connect(sigName: "notify::attribute-filter", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-filter", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-filter", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomMutationObserverInit extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomMutationObserverInit

    static name: string
    static $gtype: GObject.GType<DomMutationObserverInit>

    // Constructors of GXml-0.18.GXml.DomMutationObserverInit

    constructor(config?: DomMutationObserverInit.ConstructorProperties) 
    constructor() 
    static new(): DomMutationObserverInit
    _init(config?: DomMutationObserverInit.ConstructorProperties): void
}

export module DomErrorName {

    // Constructor properties interface

    export interface ConstructorProperties extends GObject.Object.ConstructorProperties {
    }

}

export interface DomErrorName {

    // Own fields of GXml-0.18.GXml.DomErrorName

    parent_instance: GObject.Object
    priv: DomErrorNamePrivate

    // Owm methods of GXml-0.18.GXml.DomErrorName

    get_name(error_code: number): string | null
    get_code(error_name: string | null): number

    // Class property signals of GXml-0.18.GXml.DomErrorName

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class DomErrorName extends GObject.Object {

    // Own properties of GXml-0.18.GXml.DomErrorName

    static name: string
    static $gtype: GObject.GType<DomErrorName>

    // Constructors of GXml-0.18.GXml.DomErrorName

    constructor(config?: DomErrorName.ConstructorProperties) 
    constructor() 
    static new(): DomErrorName
    _init(config?: DomErrorName.ConstructorProperties): void
}

export module ElementList {

    // Constructor properties interface

    export interface ConstructorProperties extends DomHTMLCollection.ConstructorProperties, Gee.ArrayList.ConstructorProperties {
    }

}

export interface ElementList extends DomHTMLCollection {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.ElementList

    parent_instance: Gee.ArrayList
    priv: ElementListPrivate

    // Conflicting methods

    to_array(): DomElement[]

    // Overloads of to_array

    to_array(): any[]
    to_array(): any[]
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_to_array(): DomElement[]

    // Overloads of vfunc_to_array

    vfunc_to_array(): any[]
    vfunc_to_array(): any[]
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.ElementList

    connect(sigName: "notify::g-type", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class ElementList extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.ElementList

    static name: string
    static $gtype: GObject.GType<ElementList>

    // Constructors of GXml-0.18.GXml.ElementList

    constructor(config?: ElementList.ConstructorProperties) 
    constructor() 
    static new(): ElementList

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: ElementList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GHtmlDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends DomHtmlDocument.ConstructorProperties, GDocument.ConstructorProperties {
    }

}

export interface GHtmlDocument extends DomHtmlDocument {

    // Own properties of GXml-0.18.GXml.GHtmlDocument

    readonly default_options: number
    readonly defaultOptions: number

    // Own fields of GXml-0.18.GXml.GHtmlDocument

    parent_instance: GDocument & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    create_element(local_name: string | null): DomElement
    create_element(name: string | null): Node
    create_comment(data: string | null): DomComment
    create_comment(text: string | null): Node
    get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    get_elements_by_property_value(property: string | null, value: string | null): ElementList
    vfunc_create_element(local_name: string | null): DomElement
    vfunc_create_element(name: string | null): Node
    vfunc_create_comment(data: string | null): DomComment
    vfunc_create_comment(text: string | null): Node
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): ElementList

    // Class property signals of GXml-0.18.GXml.GHtmlDocument

    connect(sigName: "notify::default-options", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-options", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-options", ...args: any[]): void
    connect(sigName: "notify::attrs", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::implementation", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GHtmlDocument extends GDocument {

    // Own properties of GXml-0.18.GXml.GHtmlDocument

    static name: string
    static $gtype: GObject.GType<GHtmlDocument>

    // Constructors of GXml-0.18.GXml.GHtmlDocument

    constructor(config?: GHtmlDocument.ConstructorProperties) 
    static from_path(path: string | null, options: number): GHtmlDocument

    // Overloads of from_path

    static from_path(path: string | null, options: number): GDocument
    static from_uri(uri: string | null, options: number): GHtmlDocument

    // Overloads of from_uri

    static from_uri(uri: string | null, options: number): GDocument
    static from_file(file: Gio.File, options: number, cancel?: Gio.Cancellable | null): GHtmlDocument

    // Overloads of from_file

    static from_file(file: Gio.File, options: number, cancel?: Gio.Cancellable | null): GDocument
    static from_string(html: string | null, options: number): GHtmlDocument

    // Overloads of from_string

    static from_string(str: string | null, options: number): GDocument
    static from_string_context(html: string | null, options: number): GHtmlDocument
    static from_string_doc(html: string | null, options: number): GHtmlDocument
    constructor() 
    static new(): GHtmlDocument

    // Overloads of new

    static new(): GDocument
    _init(config?: GHtmlDocument.ConstructorProperties): void
    static get_default_options(): number

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GomAttr {

    // Constructor properties interface

    export interface ConstructorProperties extends DomAttr.ConstructorProperties, GomNode.ConstructorProperties {
    }

}

export interface GomAttr extends DomAttr {

    // Own fields of GXml-0.18.GXml.GomAttr

    parent_instance: GomNode & GObject.Object
    priv: any
    _namespace_uri: string | null

    // Class property signals of GXml-0.18.GXml.GomAttr

    connect(sigName: "notify::namespace-uri", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::specified", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::specified", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomAttr extends GomNode {

    // Own properties of GXml-0.18.GXml.GomAttr

    static name: string
    static $gtype: GObject.GType<GomAttr>

    // Constructors of GXml-0.18.GXml.GomAttr

    constructor(config?: GomAttr.ConstructorProperties) 
    constructor(element: DomElement, name: string | null, value: string | null) 
    static new(element: DomElement, name: string | null, value: string | null): GomAttr

    // Overloads of new

    static new(): GomNode
    static namespace(element: DomElement, namespace_uri: string | null, prefix: string | null, name: string | null, value: string | null): GomAttr
    _init(config?: GomAttr.ConstructorProperties): void
}

export module BaseCollection {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.Traversable.ConstructorProperties, Gee.Iterable.ConstructorProperties, Collection.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface BaseCollection extends Gee.Traversable, Gee.Iterable, Collection {

    // Own fields of GXml-0.18.GXml.BaseCollection

    parent_instance: GObject.Object
    priv: BaseCollectionPrivate
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string | null
    _items_type: GObject.GType

    // Owm methods of GXml-0.18.GXml.BaseCollection

    initialize_element(e: GomElement): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void

    // Own virtual methods of GXml-0.18.GXml.BaseCollection

    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void

    // Class property signals of GXml-0.18.GXml.BaseCollection

    connect(sigName: "notify::nodes-index", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class BaseCollection extends GObject.Object {

    // Own properties of GXml-0.18.GXml.BaseCollection

    static name: string
    static $gtype: GObject.GType<BaseCollection>

    // Constructors of GXml-0.18.GXml.BaseCollection

    constructor(config?: BaseCollection.ConstructorProperties) 
    _init(config?: BaseCollection.ConstructorProperties): void
}

export module GomArrayList {

    // Constructor properties interface

    export interface ConstructorProperties extends List.ConstructorProperties, BaseCollection.ConstructorProperties {
    }

}

export interface GomArrayList extends List {

    // Own fields of GXml-0.18.GXml.GomArrayList

    parent_instance: BaseCollection & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomArrayList

    connect(sigName: "notify::nodes-index", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomArrayList extends BaseCollection {

    // Own properties of GXml-0.18.GXml.GomArrayList

    static name: string
    static $gtype: GObject.GType<GomArrayList>

    // Constructors of GXml-0.18.GXml.GomArrayList

    constructor(config?: GomArrayList.ConstructorProperties) 
    constructor() 
    static new(): GomArrayList
    _init(config?: GomArrayList.ConstructorProperties): void
}

export module GomHashMap {

    // Constructor properties interface

    export interface ConstructorProperties extends Map.ConstructorProperties, BaseCollection.ConstructorProperties {
    }

}

export interface GomHashMap extends Map {

    // Own fields of GXml-0.18.GXml.GomHashMap

    parent_instance: BaseCollection & GObject.Object
    priv: any
    _hashtable: Gee.HashMap
    _attribute_key: string | null

    // Owm methods of GXml-0.18.GXml.GomHashMap

    initialize_element_with_key(element: GomElement, items_type: GObject.GType, attribute_key: string | null): void
    initialize_with_key(items_type: GObject.GType, attribute_key: string | null): void
    get(key: string | null): DomElement | null
    get_keys(): string[]

    // Class property signals of GXml-0.18.GXml.GomHashMap

    connect(sigName: "notify::attribute-key", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-key", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-key", ...args: any[]): void
    connect(sigName: "notify::keys-set", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys-set", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys-set", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomHashMap extends BaseCollection {

    // Own properties of GXml-0.18.GXml.GomHashMap

    static name: string
    static $gtype: GObject.GType<GomHashMap>

    // Constructors of GXml-0.18.GXml.GomHashMap

    constructor(config?: GomHashMap.ConstructorProperties) 
    constructor() 
    static new(): GomHashMap
    _init(config?: GomHashMap.ConstructorProperties): void
}

export module GomHashPairedMap {

    // Constructor properties interface

    export interface ConstructorProperties extends PairedMap.ConstructorProperties, BaseCollection.ConstructorProperties {
    }

}

export interface GomHashPairedMap extends PairedMap {

    // Own fields of GXml-0.18.GXml.GomHashPairedMap

    parent_instance: BaseCollection & GObject.Object
    priv: any
    _hashtable: Gee.HashMap
    _attribute_primary_key: string | null
    _attribute_secondary_key: string | null

    // Owm methods of GXml-0.18.GXml.GomHashPairedMap

    initialize_element_with_keys(element: GomElement, items_type: GObject.GType, attribute_primary_key: string | null, attribute_secondary_key: string | null): void
    initialize_with_keys(items_type: GObject.GType, attribute_primary_key: string | null, attribute_secondary_key: string | null): void
    get(primary_key: string | null, secondary_key: string | null): DomElement | null
    get_primary_keys(): string[]
    get_secondary_keys(pkey: string | null): string[]

    // Class property signals of GXml-0.18.GXml.GomHashPairedMap

    connect(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-primary-key", ...args: any[]): void
    connect(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-secondary-key", ...args: any[]): void
    connect(sigName: "notify::primary-keys-set", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-keys-set", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::primary-keys-set", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomHashPairedMap extends BaseCollection {

    // Own properties of GXml-0.18.GXml.GomHashPairedMap

    static name: string
    static $gtype: GObject.GType<GomHashPairedMap>

    // Constructors of GXml-0.18.GXml.GomHashPairedMap

    constructor(config?: GomHashPairedMap.ConstructorProperties) 
    constructor() 
    static new(): GomHashPairedMap
    _init(config?: GomHashPairedMap.ConstructorProperties): void
}

export module GomHashThreeMap {

    // Constructor properties interface

    export interface ConstructorProperties extends ThreeMap.ConstructorProperties, BaseCollection.ConstructorProperties {
    }

}

export interface GomHashThreeMap extends ThreeMap {

    // Own fields of GXml-0.18.GXml.GomHashThreeMap

    parent_instance: BaseCollection & GObject.Object
    priv: any
    _hashtable: Gee.HashMap
    _attribute_primary_key: string | null
    _attribute_secondary_key: string | null
    _attribute_third_key: string | null

    // Owm methods of GXml-0.18.GXml.GomHashThreeMap

    initialize_element_with_keys(element: GomElement, items_type: GObject.GType, attribute_primary_key: string | null, attribute_secondary_key: string | null, attribute_third_key: string | null): void
    initialize_with_keys(items_type: GObject.GType, attribute_primary_key: string | null, attribute_secondary_key: string | null, attribute_third_key: string | null): void
    get(primary_key: string | null, secondary_key: string | null, third_key: string | null): DomElement | null
    get_primary_keys(): string[]
    get_secondary_keys(pkey: string | null): string[]
    get_third_keys(pkey: string | null, skey: string | null): string[]

    // Class property signals of GXml-0.18.GXml.GomHashThreeMap

    connect(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-primary-key", ...args: any[]): void
    connect(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-secondary-key", ...args: any[]): void
    connect(sigName: "notify::attribute-third-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-third-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attribute-third-key", ...args: any[]): void
    connect(sigName: "notify::primary-keys-set", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-keys-set", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::primary-keys-set", ...args: any[]): void
    connect(sigName: "notify::nodes-index", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodes-index", ...args: any[]): void
    connect(sigName: "notify::element", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element", ...args: any[]): void
    connect(sigName: "notify::items-name", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-name", ...args: any[]): void
    connect(sigName: "notify::items-type", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::items-type", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomHashThreeMap extends BaseCollection {

    // Own properties of GXml-0.18.GXml.GomHashThreeMap

    static name: string
    static $gtype: GObject.GType<GomHashThreeMap>

    // Constructors of GXml-0.18.GXml.GomHashThreeMap

    constructor(config?: GomHashThreeMap.ConstructorProperties) 
    constructor() 
    static new(): GomHashThreeMap
    _init(config?: GomHashThreeMap.ConstructorProperties): void
}

export module GomDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends DomParentNode.ConstructorProperties, DomNonElementParentNode.ConstructorProperties, DomDocument.ConstructorProperties, DomXMLDocument.ConstructorProperties, GomNode.ConstructorProperties {
    }

}

export interface GomDocument extends DomParentNode, DomNonElementParentNode, DomDocument, DomXMLDocument {

    // Own fields of GXml-0.18.GXml.GomDocument

    parent_instance: GomNode & GObject.Object
    priv: any
    _implementation: DomImplementation
    _url: string | null
    _origin: string | null
    _compat_mode: string | null
    _character_set: string | null
    _content_type: string | null
    _constructor: DomEvent

    // Owm methods of GXml-0.18.GXml.GomDocument

    write_file(file: Gio.File): void
    write_file_async(file: Gio.File, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_file_async

    /**
     * Promisified version of {@link write_file_async}
     * 
     * 
     * @param file 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_file_async}
     */
    write_file_async(file: Gio.File): globalThis.Promise<void>
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_stream_async

    /**
     * Promisified version of {@link write_stream_async}
     * 
     * 
     * @param stream 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_stream_async}
     */
    write_stream_async(stream: Gio.OutputStream): globalThis.Promise<void>
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of create_stream_async

    /**
     * Promisified version of {@link create_stream_async}
     * 
     * 
     * @param _callback_ 
     * @returns A Promise of the result of {@link create_stream_async}
     */
    create_stream_async(): globalThis.Promise<Gio.InputStream>
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    write_string(): string | null
    write_string_async(_callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_string_async

    /**
     * Promisified version of {@link write_string_async}
     * 
     * 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_string_async}
     */
    write_string_async(): globalThis.Promise<string | null>
    write_string_finish(_res_: Gio.AsyncResult): string | null
    read_from_file(file: Gio.File): void
    read_from_file_async(file: Gio.File, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_from_file_async

    /**
     * Promisified version of {@link read_from_file_async}
     * 
     * 
     * @param file 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_from_file_async}
     */
    read_from_file_async(file: Gio.File): globalThis.Promise<void>
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string | null): void
    read_from_string_async(str: string | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_from_string_async

    /**
     * Promisified version of {@link read_from_string_async}
     * 
     * 
     * @param str 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_from_string_async}
     */
    read_from_string_async(str: string | null): globalThis.Promise<void>
    read_from_string_finish(_res_: Gio.AsyncResult): void

    // Class property signals of GXml-0.18.GXml.GomDocument

    connect(sigName: "notify::children", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::implementation", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomDocument extends GomNode {

    // Own properties of GXml-0.18.GXml.GomDocument

    static name: string
    static $gtype: GObject.GType<GomDocument>

    // Constructors of GXml-0.18.GXml.GomDocument

    constructor(config?: GomDocument.ConstructorProperties) 
    constructor() 
    static new(): GomDocument

    // Overloads of new

    static new(): GomNode
    static from_path(path: string | null): GomDocument
    static from_uri(uri: string | null): GomDocument
    static from_file(file: Gio.File): GomDocument
    static from_stream(stream: Gio.InputStream): GomDocument
    static from_string(str: string | null): GomDocument
    _init(config?: GomDocument.ConstructorProperties): void
}

export module GomImplementation {

    // Constructor properties interface

    export interface ConstructorProperties extends DomImplementation.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GomImplementation extends DomImplementation {

    // Own fields of GXml-0.18.GXml.GomImplementation

    parent_instance: GObject.Object
    priv: GomImplementationPrivate

    // Class property signals of GXml-0.18.GXml.GomImplementation

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomImplementation extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GomImplementation

    static name: string
    static $gtype: GObject.GType<GomImplementation>

    // Constructors of GXml-0.18.GXml.GomImplementation

    constructor(config?: GomImplementation.ConstructorProperties) 
    constructor() 
    static new(): GomImplementation
    _init(config?: GomImplementation.ConstructorProperties): void
}

export module GomDocumentType {

    // Constructor properties interface

    export interface ConstructorProperties extends DomChildNode.ConstructorProperties, DomDocumentType.ConstructorProperties, GomNode.ConstructorProperties {
    }

}

export interface GomDocumentType extends DomChildNode, DomDocumentType {

    // Own fields of GXml-0.18.GXml.GomDocumentType

    parent_instance: GomNode & GObject.Object
    priv: any
    _name: string | null
    _public_id: string | null
    _system_id: string | null

    // Class property signals of GXml-0.18.GXml.GomDocumentType

    connect(sigName: "notify::name", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::public-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::public-id", ...args: any[]): void
    connect(sigName: "notify::system-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::system-id", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomDocumentType extends GomNode {

    // Own properties of GXml-0.18.GXml.GomDocumentType

    static name: string
    static $gtype: GObject.GType<GomDocumentType>

    // Constructors of GXml-0.18.GXml.GomDocumentType

    constructor(config?: GomDocumentType.ConstructorProperties) 
    constructor(doc: DomDocument, name: string | null, public_id?: string | null, system_id?: string | null) 
    static new(doc: DomDocument, name: string | null, public_id?: string | null, system_id?: string | null): GomDocumentType

    // Overloads of new

    static new(): GomNode
    static with_name(doc: DomDocument, name: string | null): GomDocumentType
    static with_ids(doc: DomDocument, name: string | null, public_id: string | null, system_id: string | null): GomDocumentType
    _init(config?: GomDocumentType.ConstructorProperties): void
}

export module GomDocumentFragment {

    // Constructor properties interface

    export interface ConstructorProperties extends DomParentNode.ConstructorProperties, DomNonElementParentNode.ConstructorProperties, DomDocumentFragment.ConstructorProperties, GomNode.ConstructorProperties {
    }

}

export interface GomDocumentFragment extends DomParentNode, DomNonElementParentNode, DomDocumentFragment {

    // Own fields of GXml-0.18.GXml.GomDocumentFragment

    parent_instance: GomNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomDocumentFragment

    connect(sigName: "notify::children", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomDocumentFragment extends GomNode {

    // Own properties of GXml-0.18.GXml.GomDocumentFragment

    static name: string
    static $gtype: GObject.GType<GomDocumentFragment>

    // Constructors of GXml-0.18.GXml.GomDocumentFragment

    constructor(config?: GomDocumentFragment.ConstructorProperties) 
    constructor(doc: DomDocument) 
    static new(doc: DomDocument): GomDocumentFragment

    // Overloads of new

    static new(): GomNode
    _init(config?: GomDocumentFragment.ConstructorProperties): void
}

export module GomElement {

    // Constructor properties interface

    export interface ConstructorProperties extends DomChildNode.ConstructorProperties, DomNonDocumentTypeChildNode.ConstructorProperties, DomParentNode.ConstructorProperties, DomElement.ConstructorProperties, GomObject.ConstructorProperties, GomNode.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomElement

        parse_children?: boolean | null
        unparsed?: string | null
        parseChildren?: boolean | null
    }

}

export interface GomElement extends DomChildNode, DomNonDocumentTypeChildNode, DomParentNode, DomElement, GomObject {

    // Own properties of GXml-0.18.GXml.GomElement

    parse_children: boolean
    parseChildren: boolean
    unparsed: string | null

    // Own fields of GXml-0.18.GXml.GomElement

    parent_instance: GomNode & GObject.Object
    priv: any
    _attributes: GomElementAttributes
    _namespace_uri: string | null

    // Owm methods of GXml-0.18.GXml.GomElement

    read_from_uri(uri: string | null): void
    read_from_uri_async(uri: string | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_from_uri_async

    /**
     * Promisified version of {@link read_from_uri_async}
     * 
     * 
     * @param uri 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_from_uri_async}
     */
    read_from_uri_async(uri: string | null): globalThis.Promise<void>
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_from_file_async

    /**
     * Promisified version of {@link read_from_file_async}
     * 
     * 
     * @param f 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_from_file_async}
     */
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_from_stream_async

    /**
     * Promisified version of {@link read_from_stream_async}
     * 
     * 
     * @param istream 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_from_stream_async}
     */
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string | null): void
    read_from_string_async(str: string | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_from_string_async

    /**
     * Promisified version of {@link read_from_string_async}
     * 
     * 
     * @param str 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_from_string_async}
     */
    read_from_string_async(str: string | null): globalThis.Promise<void>
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string | null
    write_string_async(_callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_string_async

    /**
     * Promisified version of {@link write_string_async}
     * 
     * 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_string_async}
     */
    write_string_async(): globalThis.Promise<string | null>
    write_string_finish(_res_: Gio.AsyncResult): string | null
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_file_async

    /**
     * Promisified version of {@link write_file_async}
     * 
     * 
     * @param f 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_file_async}
     */
    write_file_async(f: Gio.File): globalThis.Promise<void>
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of write_stream_async

    /**
     * Promisified version of {@link write_stream_async}
     * 
     * 
     * @param stream 
     * @param _callback_ 
     * @returns A Promise of the result of {@link write_stream_async}
     */
    write_stream_async(stream: Gio.OutputStream): globalThis.Promise<void>
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of create_stream_async

    /**
     * Promisified version of {@link create_stream_async}
     * 
     * 
     * @param _callback_ 
     * @returns A Promise of the result of {@link create_stream_async}
     */
    create_stream_async(): globalThis.Promise<Gio.InputStream>
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string | null): void
    initialize_document(doc: DomDocument, local_name: string | null): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string | null): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string | null): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string | null
    set_unparsed(value: string | null): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomElement

    connect(sigName: "notify::parse-children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomElement extends GomNode {

    // Own properties of GXml-0.18.GXml.GomElement

    static name: string
    static $gtype: GObject.GType<GomElement>

    // Constructors of GXml-0.18.GXml.GomElement

    constructor(config?: GomElement.ConstructorProperties) 
    constructor() 
    static new(): GomElement

    // Overloads of new

    static new(): GomNode
    _init(config?: GomElement.ConstructorProperties): void
}

export module GomElementAttributes {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNamedNodeMap.ConstructorProperties, Gee.HashMap.ConstructorProperties {
    }

}

export interface GomElementAttributes extends DomNamedNodeMap {

    // Own fields of GXml-0.18.GXml.GomElementAttributes

    parent_instance: Gee.HashMap
    priv: GomElementAttributesPrivate
    _element: GomElement

    // Class property signals of GXml-0.18.GXml.GomElementAttributes

    connect(sigName: "notify::k-type", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-type", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-type", ...args: any[]): void
    connect(sigName: "notify::k-dup-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-dup-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-dup-func", ...args: any[]): void
    connect(sigName: "notify::k-destroy-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-destroy-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-destroy-func", ...args: any[]): void
    connect(sigName: "notify::v-type", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-type", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-type", ...args: any[]): void
    connect(sigName: "notify::v-dup-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-dup-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-dup-func", ...args: any[]): void
    connect(sigName: "notify::v-destroy-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-destroy-func", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-destroy-func", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::keys", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys", ...args: any[]): void
    connect(sigName: "notify::values", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::values", ...args: any[]): void
    connect(sigName: "notify::entries", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::entries", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomElementAttributes extends Gee.HashMap {

    // Own properties of GXml-0.18.GXml.GomElementAttributes

    static name: string
    static $gtype: GObject.GType<GomElementAttributes>

    // Constructors of GXml-0.18.GXml.GomElementAttributes

    constructor(config?: GomElementAttributes.ConstructorProperties) 
    constructor(element: GomElement) 
    static new(element: GomElement): GomElementAttributes

    // Overloads of new

    static new(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify, key_hash_func: Gee.HashDataFunc | null, key_equal_func: Gee.EqualDataFunc | null, value_equal_func: Gee.EqualDataFunc | null): Gee.HashMap
    _init(config?: GomElementAttributes.ConstructorProperties): void
}

export module GomNode {

    // Constructor properties interface

    export interface ConstructorProperties extends DomEventTarget.ConstructorProperties, DomNode.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GomNode extends DomEventTarget, DomNode {

    // Own fields of GXml-0.18.GXml.GomNode

    parent_instance: GObject.Object
    priv: GomNodePrivate
    _local_name: string | null
    _prefix: string | null
    _base_uri: string | null
    _node_value: string | null
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument

    // Class property signals of GXml-0.18.GXml.GomNode

    connect(sigName: "notify::node-type", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomNode extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GomNode

    static name: string
    static $gtype: GObject.GType<GomNode>

    // Constructors of GXml-0.18.GXml.GomNode

    constructor(config?: GomNode.ConstructorProperties) 
    constructor() 
    static new(): GomNode
    _init(config?: GomNode.ConstructorProperties): void
}

export module GomNodeList {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNodeList.ConstructorProperties, Gee.ArrayList.ConstructorProperties {
    }

}

export interface GomNodeList extends DomNodeList {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.GomNodeList

    parent_instance: Gee.ArrayList
    priv: GomNodeListPrivate

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.GomNodeList

    connect(sigName: "notify::g-type", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomNodeList extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.GomNodeList

    static name: string
    static $gtype: GObject.GType<GomNodeList>

    // Constructors of GXml-0.18.GXml.GomNodeList

    constructor(config?: GomNodeList.ConstructorProperties) 
    constructor() 
    static new(): GomNodeList

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: GomNodeList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GomBaseProperty {

    // Constructor properties interface

    export interface ConstructorProperties extends GomProperty.ConstructorProperties, GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomBaseProperty

        value?: string | null
    }

}

export interface GomBaseProperty extends GomProperty {

    // Own properties of GXml-0.18.GXml.GomBaseProperty

    value: string | null

    // Own fields of GXml-0.18.GXml.GomBaseProperty

    parent_instance: GObject.Object
    priv: GomBasePropertyPrivate

    // Owm methods of GXml-0.18.GXml.GomBaseProperty

    validate_value(val: string | null): boolean
    get_value(): string | null
    set_value(value?: string | null): void

    // Own virtual methods of GXml-0.18.GXml.GomBaseProperty

    vfunc_validate_value(val: string | null): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void

    // Class property signals of GXml-0.18.GXml.GomBaseProperty

    connect(sigName: "notify::value", callback: (($obj: GomBaseProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomBaseProperty, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomBaseProperty extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GomBaseProperty

    static name: string
    static $gtype: GObject.GType<GomBaseProperty>

    // Constructors of GXml-0.18.GXml.GomBaseProperty

    constructor(config?: GomBaseProperty.ConstructorProperties) 
    _init(config?: GomBaseProperty.ConstructorProperties): void
}

export module GomString {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {
    }

}

export interface GomString {

    // Own fields of GXml-0.18.GXml.GomString

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: string | null

    // Class property signals of GXml-0.18.GXml.GomString

    connect(sigName: "notify::value", callback: (($obj: GomString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomString extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomString

    static name: string
    static $gtype: GObject.GType<GomString>

    // Constructors of GXml-0.18.GXml.GomString

    constructor(config?: GomString.ConstructorProperties) 
    constructor() 
    static new(): GomString
    _init(config?: GomString.ConstructorProperties): void
}

export module GomArrayString {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {
    }

}

export interface GomArrayString {

    // Own fields of GXml-0.18.GXml.GomArrayString

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: string | null
    _values: string[]

    // Owm methods of GXml-0.18.GXml.GomArrayString

    get_values(): string[]
    initialize_strings(strs: string[]): void
    is_valid_value(): boolean
    select(index: number): void
    search(str: string | null): boolean

    // Class property signals of GXml-0.18.GXml.GomArrayString

    connect(sigName: "notify::value", callback: (($obj: GomArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomArrayString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomArrayString extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomArrayString

    static name: string
    static $gtype: GObject.GType<GomArrayString>

    // Constructors of GXml-0.18.GXml.GomArrayString

    constructor(config?: GomArrayString.ConstructorProperties) 
    constructor() 
    static new(): GomArrayString
    _init(config?: GomArrayString.ConstructorProperties): void
}

export module GomXsdArrayString {

    // Constructor properties interface

    export interface ConstructorProperties extends GomArrayString.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdArrayString

        simple_type?: string | null
        source?: Gio.File | null
        simpleType?: string | null
    }

}

export interface GomXsdArrayString {

    // Own properties of GXml-0.18.GXml.GomXsdArrayString

    simple_type: string | null
    simpleType: string | null
    source: Gio.File

    // Own fields of GXml-0.18.GXml.GomXsdArrayString

    parent_instance: GomArrayString & GomBaseProperty & GObject.Object & GObject.Object
    priv: any
    _source: Gio.File
    _simple_type: string | null

    // Owm methods of GXml-0.18.GXml.GomXsdArrayString

    load(): void
    get_simple_type(): string | null
    set_simple_type(value: string | null): void
    get_source(): Gio.File
    set_source(value: Gio.File): void

    // Class property signals of GXml-0.18.GXml.GomXsdArrayString

    connect(sigName: "notify::simple-type", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type", ...args: any[]): void
    connect(sigName: "notify::source", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::source", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::source", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdArrayString extends GomArrayString {

    // Own properties of GXml-0.18.GXml.GomXsdArrayString

    static name: string
    static $gtype: GObject.GType<GomXsdArrayString>

    // Constructors of GXml-0.18.GXml.GomXsdArrayString

    constructor(config?: GomXsdArrayString.ConstructorProperties) 
    constructor() 
    static new(): GomXsdArrayString

    // Overloads of new

    static new(): GomArrayString
    _init(config?: GomXsdArrayString.ConstructorProperties): void
}

export module GomDouble {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomDouble

        decimals?: number | null
    }

}

export interface GomDouble {

    // Own properties of GXml-0.18.GXml.GomDouble

    decimals: number

    // Own fields of GXml-0.18.GXml.GomDouble

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: number

    // Owm methods of GXml-0.18.GXml.GomDouble

    get_double(): number
    set_double(value: number): void
    get_decimals(): number
    set_decimals(value: number): void

    // Class property signals of GXml-0.18.GXml.GomDouble

    connect(sigName: "notify::decimals", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decimals", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::decimals", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomDouble extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomDouble

    static name: string
    static $gtype: GObject.GType<GomDouble>

    // Constructors of GXml-0.18.GXml.GomDouble

    constructor(config?: GomDouble.ConstructorProperties) 
    constructor() 
    static new(): GomDouble
    _init(config?: GomDouble.ConstructorProperties): void
}

export module GomFloat {

    // Constructor properties interface

    export interface ConstructorProperties extends GomDouble.ConstructorProperties {
    }

}

export interface GomFloat {

    // Own fields of GXml-0.18.GXml.GomFloat

    parent_instance: GomDouble & GomBaseProperty & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomFloat

    get_float(): number
    set_float(value: number): void

    // Class property signals of GXml-0.18.GXml.GomFloat

    connect(sigName: "notify::decimals", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decimals", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::decimals", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomFloat extends GomDouble {

    // Own properties of GXml-0.18.GXml.GomFloat

    static name: string
    static $gtype: GObject.GType<GomFloat>

    // Constructors of GXml-0.18.GXml.GomFloat

    constructor(config?: GomFloat.ConstructorProperties) 
    constructor() 
    static new(): GomFloat

    // Overloads of new

    static new(): GomDouble
    _init(config?: GomFloat.ConstructorProperties): void
}

export module GomInt {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {
    }

}

export interface GomInt {

    // Own fields of GXml-0.18.GXml.GomInt

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: number

    // Owm methods of GXml-0.18.GXml.GomInt

    get_integer(): number
    set_integer(value: number): void

    // Class property signals of GXml-0.18.GXml.GomInt

    connect(sigName: "notify::value", callback: (($obj: GomInt, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomInt, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomInt extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomInt

    static name: string
    static $gtype: GObject.GType<GomInt>

    // Constructors of GXml-0.18.GXml.GomInt

    constructor(config?: GomInt.ConstructorProperties) 
    constructor() 
    static new(): GomInt
    _init(config?: GomInt.ConstructorProperties): void
}

export module GomBoolean {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {
    }

}

export interface GomBoolean {

    // Own fields of GXml-0.18.GXml.GomBoolean

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: boolean

    // Owm methods of GXml-0.18.GXml.GomBoolean

    get_boolean(): boolean
    set_boolean(value: boolean): void

    // Class property signals of GXml-0.18.GXml.GomBoolean

    connect(sigName: "notify::value", callback: (($obj: GomBoolean, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomBoolean, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomBoolean extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomBoolean

    static name: string
    static $gtype: GObject.GType<GomBoolean>

    // Constructors of GXml-0.18.GXml.GomBoolean

    constructor(config?: GomBoolean.ConstructorProperties) 
    constructor() 
    static new(): GomBoolean
    _init(config?: GomBoolean.ConstructorProperties): void
}

export module GomEnum {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomEnum

        enum_type?: GObject.GType | null
        enumType?: GObject.GType | null
    }

}

export interface GomEnum {

    // Own properties of GXml-0.18.GXml.GomEnum

    enum_type: GObject.GType
    enumType: GObject.GType

    // Own fields of GXml-0.18.GXml.GomEnum

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: number
    _enum_type: GObject.GType

    // Owm methods of GXml-0.18.GXml.GomEnum

    initialize_enum(enum_type: GObject.GType): void
    get_enum(): number
    set_enum(value: number): void
    get_enum_type(): GObject.GType
    set_enum_type(value: GObject.GType): void

    // Class property signals of GXml-0.18.GXml.GomEnum

    connect(sigName: "notify::enum-type", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enum-type", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::enum-type", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomEnum extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomEnum

    static name: string
    static $gtype: GObject.GType<GomEnum>

    // Constructors of GXml-0.18.GXml.GomEnum

    constructor(config?: GomEnum.ConstructorProperties) 
    constructor() 
    static new(): GomEnum
    _init(config?: GomEnum.ConstructorProperties): void
}

export module GomDate {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {
    }

}

export interface GomDate {

    // Own fields of GXml-0.18.GXml.GomDate

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: GLib.Date

    // Owm methods of GXml-0.18.GXml.GomDate

    get_date(): /* result */ GLib.Date
    set_date(date: GLib.Date): void

    // Class property signals of GXml-0.18.GXml.GomDate

    connect(sigName: "notify::value", callback: (($obj: GomDate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomDate, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomDate extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomDate

    static name: string
    static $gtype: GObject.GType<GomDate>

    // Constructors of GXml-0.18.GXml.GomDate

    constructor(config?: GomDate.ConstructorProperties) 
    constructor() 
    static new(): GomDate
    _init(config?: GomDate.ConstructorProperties): void
}

export module GomDateTime {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBaseProperty.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomDateTime

        format?: string | null
    }

}

export interface GomDateTime {

    // Own properties of GXml-0.18.GXml.GomDateTime

    format: string | null

    // Own fields of GXml-0.18.GXml.GomDateTime

    parent_instance: GomBaseProperty & GObject.Object
    priv: any
    _value: GLib.DateTime

    // Owm methods of GXml-0.18.GXml.GomDateTime

    get_datetime(): GLib.DateTime
    set_datetime(dt: GLib.DateTime): void
    get_format(): string | null
    set_format(value: string | null): void

    // Class property signals of GXml-0.18.GXml.GomDateTime

    connect(sigName: "notify::format", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::format", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::format", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomDateTime extends GomBaseProperty {

    // Own properties of GXml-0.18.GXml.GomDateTime

    static name: string
    static $gtype: GObject.GType<GomDateTime>

    // Constructors of GXml-0.18.GXml.GomDateTime

    constructor(config?: GomDateTime.ConstructorProperties) 
    constructor() 
    static new(): GomDateTime
    _init(config?: GomDateTime.ConstructorProperties): void
}

export module GomXsdSchema {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdSchema

        element_definitions?: GomXsdListElements | null
        simple_type_definitions?: GomXsdListSimpleTypes | null
        complex_type_definitions?: GomXsdListComplexTypes | null
        elementDefinitions?: GomXsdListElements | null
        simpleTypeDefinitions?: GomXsdListSimpleTypes | null
        complexTypeDefinitions?: GomXsdListComplexTypes | null
    }

}

export interface GomXsdSchema {

    // Own properties of GXml-0.18.GXml.GomXsdSchema

    element_definitions: GomXsdListElements
    elementDefinitions: GomXsdListElements
    simple_type_definitions: GomXsdListSimpleTypes
    simpleTypeDefinitions: GomXsdListSimpleTypes
    complex_type_definitions: GomXsdListComplexTypes
    complexTypeDefinitions: GomXsdListComplexTypes

    // Own fields of GXml-0.18.GXml.GomXsdSchema

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdSchema

    get_element_definitions(): GomXsdListElements
    set_element_definitions(value: GomXsdListElements): void
    get_simple_type_definitions(): GomXsdListSimpleTypes
    set_simple_type_definitions(value: GomXsdListSimpleTypes): void
    get_complex_type_definitions(): GomXsdListComplexTypes
    set_complex_type_definitions(value: GomXsdListComplexTypes): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdSchema

    connect(sigName: "notify::element-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::element-definitions", ...args: any[]): void
    connect(sigName: "notify::simple-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type-definitions", ...args: any[]): void
    connect(sigName: "notify::complex-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::complex-type-definitions", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdSchema extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdSchema

    static name: string
    static $gtype: GObject.GType<GomXsdSchema>

    // Constructors of GXml-0.18.GXml.GomXsdSchema

    constructor(config?: GomXsdSchema.ConstructorProperties) 
    constructor() 
    static new(): GomXsdSchema

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdSchema.ConstructorProperties): void
}

export module GomXsdSimpleType {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdSimpleType

        final?: string | null
        name?: string | null
        annotation?: GomXsdAnnotation | null
        list?: GomXsdTypeList | null
        union?: GomXsdTypeUnion | null
        restriction?: GomXsdTypeRestriction | null
    }

}

export interface GomXsdSimpleType {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleType

    final: string | null
    name: string | null
    annotation: GomXsdAnnotation
    list: GomXsdTypeList
    union: GomXsdTypeUnion
    restriction: GomXsdTypeRestriction

    // Own fields of GXml-0.18.GXml.GomXsdSimpleType

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdSimpleType

    get_final(): string | null
    set_final(value: string | null): void
    get_name(): string | null
    set_name(value: string | null): void
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    get_list(): GomXsdTypeList
    set_list(value: GomXsdTypeList): void
    get_union(): GomXsdTypeUnion
    set_union(value: GomXsdTypeUnion): void
    get_restriction(): GomXsdTypeRestriction
    set_restriction(value: GomXsdTypeRestriction): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdSimpleType

    connect(sigName: "notify::final", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::final", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::list", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::list", ...args: any[]): void
    connect(sigName: "notify::union", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::union", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::union", ...args: any[]): void
    connect(sigName: "notify::restriction", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::restriction", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::restriction", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdSimpleType extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleType

    static name: string
    static $gtype: GObject.GType<GomXsdSimpleType>

    // Constructors of GXml-0.18.GXml.GomXsdSimpleType

    constructor(config?: GomXsdSimpleType.ConstructorProperties) 
    constructor() 
    static new(): GomXsdSimpleType

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdSimpleType.ConstructorProperties): void
}

export module GomXsdTypeDefinition {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdTypeDefinition

        annotation?: GomXsdAnnotation | null
    }

}

export interface GomXsdTypeDefinition {

    // Own properties of GXml-0.18.GXml.GomXsdTypeDefinition

    annotation: GomXsdAnnotation

    // Own fields of GXml-0.18.GXml.GomXsdTypeDefinition

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdTypeDefinition

    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeDefinition

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeDefinition extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdTypeDefinition

    static name: string
    static $gtype: GObject.GType<GomXsdTypeDefinition>

    // Constructors of GXml-0.18.GXml.GomXsdTypeDefinition

    constructor(config?: GomXsdTypeDefinition.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeDefinition

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeDefinition.ConstructorProperties): void
}

export module GomXsdTypeList {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeDefinition.ConstructorProperties {
    }

}

export interface GomXsdTypeList {

    // Own fields of GXml-0.18.GXml.GomXsdTypeList

    parent_instance: GomXsdTypeDefinition & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeList

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeList extends GomXsdTypeDefinition {

    // Own properties of GXml-0.18.GXml.GomXsdTypeList

    static name: string
    static $gtype: GObject.GType<GomXsdTypeList>

    // Constructors of GXml-0.18.GXml.GomXsdTypeList

    constructor(config?: GomXsdTypeList.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeList

    // Overloads of new

    static new(): GomXsdTypeDefinition
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeList.ConstructorProperties): void
}

export module GomXsdTypeUnion {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeDefinition.ConstructorProperties {
    }

}

export interface GomXsdTypeUnion {

    // Own fields of GXml-0.18.GXml.GomXsdTypeUnion

    parent_instance: GomXsdTypeDefinition & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeUnion

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeUnion extends GomXsdTypeDefinition {

    // Own properties of GXml-0.18.GXml.GomXsdTypeUnion

    static name: string
    static $gtype: GObject.GType<GomXsdTypeUnion>

    // Constructors of GXml-0.18.GXml.GomXsdTypeUnion

    constructor(config?: GomXsdTypeUnion.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeUnion

    // Overloads of new

    static new(): GomXsdTypeDefinition
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeUnion.ConstructorProperties): void
}

export module GomXsdTypeRestriction {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeDefinition.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdTypeRestriction

        base?: string | null
        simple_type?: GomXsdSimpleType | null
        enumerations?: GomXsdListTypeRestrictionEnumerations | null
        white_spaces?: GomXsdListTypeRestrictionWhiteSpaces | null
        simpleType?: GomXsdSimpleType | null
        whiteSpaces?: GomXsdListTypeRestrictionWhiteSpaces | null
    }

}

export interface GomXsdTypeRestriction {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestriction

    base: string | null
    simple_type: GomXsdSimpleType
    simpleType: GomXsdSimpleType
    enumerations: GomXsdListTypeRestrictionEnumerations
    white_spaces: GomXsdListTypeRestrictionWhiteSpaces
    whiteSpaces: GomXsdListTypeRestrictionWhiteSpaces

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestriction

    parent_instance: GomXsdTypeDefinition & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdTypeRestriction

    get_base(): string | null
    set_base(value: string | null): void
    get_simple_type(): GomXsdSimpleType
    set_simple_type(value: GomXsdSimpleType): void
    get_enumerations(): GomXsdListTypeRestrictionEnumerations
    set_enumerations(value: GomXsdListTypeRestrictionEnumerations): void
    get_white_spaces(): GomXsdListTypeRestrictionWhiteSpaces
    set_white_spaces(value: GomXsdListTypeRestrictionWhiteSpaces): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestriction

    connect(sigName: "notify::base", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base", ...args: any[]): void
    connect(sigName: "notify::simple-type", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type", ...args: any[]): void
    connect(sigName: "notify::enumerations", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enumerations", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::enumerations", ...args: any[]): void
    connect(sigName: "notify::white-spaces", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::white-spaces", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::white-spaces", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestriction extends GomXsdTypeDefinition {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestriction

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestriction>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestriction

    constructor(config?: GomXsdTypeRestriction.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestriction

    // Overloads of new

    static new(): GomXsdTypeDefinition
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestriction.ConstructorProperties): void
}

export module GomXsdTypeRestrictionDef {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdTypeRestrictionDef

        annotation?: GomXsdAnnotation | null
    }

}

export interface GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionDef

    annotation: GomXsdAnnotation

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionDef

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdTypeRestrictionDef

    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionDef

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionDef extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionDef

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionDef>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionDef

    constructor(config?: GomXsdTypeRestrictionDef.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionDef

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionDef.ConstructorProperties): void
}

export module GomXsdTypeRestrictionMinExclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionMinExclusive {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusive

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusive

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionMinExclusive extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusive

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionMinExclusive>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusive

    constructor(config?: GomXsdTypeRestrictionMinExclusive.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionMinExclusive

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionMinExclusive.ConstructorProperties): void
}

export module GomXsdTypeRestrictionMinInclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionMinInclusive {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusive

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusive

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionMinInclusive extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusive

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionMinInclusive>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusive

    constructor(config?: GomXsdTypeRestrictionMinInclusive.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionMinInclusive

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionMinInclusive.ConstructorProperties): void
}

export module GomXsdTypeRestrictionMaxExclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionMaxExclusive {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusive

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusive

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionMaxExclusive extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusive

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionMaxExclusive>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusive

    constructor(config?: GomXsdTypeRestrictionMaxExclusive.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionMaxExclusive

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionMaxExclusive.ConstructorProperties): void
}

export module GomXsdTypeRestrictionMaxInclusive {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionMaxInclusive {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusive

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusive

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionMaxInclusive extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusive

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionMaxInclusive>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusive

    constructor(config?: GomXsdTypeRestrictionMaxInclusive.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionMaxInclusive

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionMaxInclusive.ConstructorProperties): void
}

export module GomXsdTypeRestrictionTotalDigits {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionTotalDigits {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigits

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigits

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionTotalDigits extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigits

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionTotalDigits>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigits

    constructor(config?: GomXsdTypeRestrictionTotalDigits.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionTotalDigits

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionTotalDigits.ConstructorProperties): void
}

export module GomXsdTypeRestrictionFractionDigits {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionFractionDigits {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigits

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigits

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionFractionDigits extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigits

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionFractionDigits>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigits

    constructor(config?: GomXsdTypeRestrictionFractionDigits.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionFractionDigits

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionFractionDigits.ConstructorProperties): void
}

export module GomXsdTypeRestrictionLength {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionLength {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionLength

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionLength

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionLength extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionLength

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionLength>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionLength

    constructor(config?: GomXsdTypeRestrictionLength.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionLength

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionLength.ConstructorProperties): void
}

export module GomXsdTypeRestrictionMinLength {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionMinLength {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMinLength

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionMinLength

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionMinLength extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinLength

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionMinLength>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionMinLength

    constructor(config?: GomXsdTypeRestrictionMinLength.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionMinLength

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionMinLength.ConstructorProperties): void
}

export module GomXsdTypeRestrictionMaxLength {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionMaxLength {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLength

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLength

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionMaxLength extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLength

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionMaxLength>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLength

    constructor(config?: GomXsdTypeRestrictionMaxLength.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionMaxLength

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionMaxLength.ConstructorProperties): void
}

export module GomXsdTypeRestrictionEnumeration {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

        value?: string | null
    }

}

export interface GomXsdTypeRestrictionEnumeration {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

    value: string | null

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

    get_value(): string | null
    set_value(value: string | null): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

    connect(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionEnumeration extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionEnumeration>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionEnumeration

    constructor(config?: GomXsdTypeRestrictionEnumeration.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionEnumeration

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionEnumeration.ConstructorProperties): void
}

export module GomXsdTypeRestrictionWhiteSpace {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

        fixed?: GomXsdTypeRestrictionWhiteSpaceFixed | null
        value?: string | null
    }

}

export interface GomXsdTypeRestrictionWhiteSpace {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

    fixed: GomXsdTypeRestrictionWhiteSpaceFixed
    value: string | null

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

    get_fixed(): GomXsdTypeRestrictionWhiteSpaceFixed
    set_fixed(value: GomXsdTypeRestrictionWhiteSpaceFixed): void
    get_value(): string | null
    set_value(value: string | null): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

    connect(sigName: "notify::fixed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::fixed", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionWhiteSpace extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionWhiteSpace>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpace

    constructor(config?: GomXsdTypeRestrictionWhiteSpace.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionWhiteSpace

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionWhiteSpace.ConstructorProperties): void
}

export module GomXsdTypeRestrictionWhiteSpaceFixed {

    // Constructor properties interface

    export interface ConstructorProperties extends GomBoolean.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionWhiteSpaceFixed {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixed

    parent_instance: GomBoolean & GomBaseProperty & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixed

    connect(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpaceFixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpaceFixed, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionWhiteSpaceFixed extends GomBoolean {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixed

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionWhiteSpaceFixed>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixed

    constructor(config?: GomXsdTypeRestrictionWhiteSpaceFixed.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionWhiteSpaceFixed

    // Overloads of new

    static new(): GomBoolean
    _init(config?: GomXsdTypeRestrictionWhiteSpaceFixed.ConstructorProperties): void
}

export module GomXsdTypeRestrictionPattern {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionPattern {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionPattern

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionPattern

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionPattern extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionPattern

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionPattern>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionPattern

    constructor(config?: GomXsdTypeRestrictionPattern.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionPattern

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionPattern.ConstructorProperties): void
}

export module GomXsdTypeRestrictionAssertion {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionAssertion {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionAssertion

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionAssertion

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionAssertion extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionAssertion

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionAssertion>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionAssertion

    constructor(config?: GomXsdTypeRestrictionAssertion.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionAssertion

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionAssertion.ConstructorProperties): void
}

export module GomXsdTypeRestrictionExplicitTimezone {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdTypeRestrictionDef.ConstructorProperties {
    }

}

export interface GomXsdTypeRestrictionExplicitTimezone {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezone

    parent_instance: GomXsdTypeRestrictionDef & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezone

    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::annotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdTypeRestrictionExplicitTimezone extends GomXsdTypeRestrictionDef {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezone

    static name: string
    static $gtype: GObject.GType<GomXsdTypeRestrictionExplicitTimezone>

    // Constructors of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezone

    constructor(config?: GomXsdTypeRestrictionExplicitTimezone.ConstructorProperties) 
    constructor() 
    static new(): GomXsdTypeRestrictionExplicitTimezone

    // Overloads of new

    static new(): GomXsdTypeRestrictionDef
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdTypeRestrictionExplicitTimezone.ConstructorProperties): void
}

export module GomXsdComplexType {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdBaseType.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdComplexType

        abstract?: boolean | null
        block?: string | null
        final?: string | null
        mixed?: boolean | null
        name?: string | null
        default_attributes_apply?: boolean | null
        content_type?: GomXsdBaseContent | null
        defaultAttributesApply?: boolean | null
        contentType?: GomXsdBaseContent | null
    }

}

export interface GomXsdComplexType {

    // Own properties of GXml-0.18.GXml.GomXsdComplexType

    abstract: boolean
    block: string | null
    final: string | null
    mixed: boolean
    name: string | null
    default_attributes_apply: boolean
    defaultAttributesApply: boolean
    content_type: GomXsdBaseContent
    contentType: GomXsdBaseContent
    readonly type_attributes: GomXsdList
    readonly typeAttributes: GomXsdList
    readonly group_attributes: GomXsdList
    readonly groupAttributes: GomXsdList

    // Own fields of GXml-0.18.GXml.GomXsdComplexType

    parent_instance: GomXsdBaseType & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any
    _type_attributes: GomXsdList
    _group_attributes: GomXsdList

    // Owm methods of GXml-0.18.GXml.GomXsdComplexType

    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string | null
    set_block(value: string | null): void
    get_final(): string | null
    set_final(value: string | null): void
    get_mixed(): boolean
    set_mixed(value: boolean): void
    get_name(): string | null
    set_name(value: string | null): void
    get_default_attributes_apply(): boolean
    set_default_attributes_apply(value: boolean): void
    get_content_type(): GomXsdBaseContent
    set_content_type(value: GomXsdBaseContent): void
    get_type_attributes(): GomXsdList
    get_group_attributes(): GomXsdList

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdComplexType

    connect(sigName: "notify::abstract", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::abstract", ...args: any[]): void
    connect(sigName: "notify::block", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::block", ...args: any[]): void
    connect(sigName: "notify::final", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::final", ...args: any[]): void
    connect(sigName: "notify::mixed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mixed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::mixed", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::default-attributes-apply", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-attributes-apply", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-attributes-apply", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::type-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-attributes", ...args: any[]): void
    connect(sigName: "notify::group-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::group-attributes", ...args: any[]): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdComplexType extends GomXsdBaseType {

    // Own properties of GXml-0.18.GXml.GomXsdComplexType

    static name: string
    static $gtype: GObject.GType<GomXsdComplexType>

    // Constructors of GXml-0.18.GXml.GomXsdComplexType

    constructor(config?: GomXsdComplexType.ConstructorProperties) 
    constructor() 
    static new(): GomXsdComplexType

    // Overloads of new

    static new(): GomXsdBaseType
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdComplexType.ConstructorProperties): void
}

export module GomXsdExtension {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdExtension

        base?: string | null
    }

}

export interface GomXsdExtension {

    // Own properties of GXml-0.18.GXml.GomXsdExtension

    base: string | null

    // Own fields of GXml-0.18.GXml.GomXsdExtension

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdExtension

    get_base(): string | null
    set_base(value: string | null): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdExtension

    connect(sigName: "notify::base", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdExtension extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdExtension

    static name: string
    static $gtype: GObject.GType<GomXsdExtension>

    // Constructors of GXml-0.18.GXml.GomXsdExtension

    constructor(config?: GomXsdExtension.ConstructorProperties) 
    constructor() 
    static new(): GomXsdExtension

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdExtension.ConstructorProperties): void
}

export module GomXsdElement {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdElement

        abstract?: boolean | null
        block?: string | null
        "default"?: string | null
        final?: string | null
        fixed?: string | null
        form?: string | null
        max_occurs?: string | null
        min_occurs?: string | null
        name?: string | null
        nillable?: boolean | null
        ref?: string | null
        substitution_group?: DomTokenList | null
        target_namespace?: string | null
        object_type?: string | null
        anotation?: GomXsdAnnotation | null
        simple_type?: GomXsdSimpleType | null
        complex_type?: GomXsdComplexType | null
        maxOccurs?: string | null
        minOccurs?: string | null
        substitutionGroup?: DomTokenList | null
        targetNamespace?: string | null
        objectType?: string | null
        simpleType?: GomXsdSimpleType | null
        complexType?: GomXsdComplexType | null
    }

}

export interface GomXsdElement {

    // Own properties of GXml-0.18.GXml.GomXsdElement

    abstract: boolean
    block: string | null
    "default": string | null
    final: string | null
    fixed: string | null
    form: string | null
    max_occurs: string | null
    maxOccurs: string | null
    min_occurs: string | null
    minOccurs: string | null
    name: string | null
    nillable: boolean
    // Has conflict: ref: string | null
    substitution_group: DomTokenList
    substitutionGroup: DomTokenList
    target_namespace: string | null
    targetNamespace: string | null
    object_type: string | null
    objectType: string | null
    anotation: GomXsdAnnotation
    simple_type: GomXsdSimpleType
    simpleType: GomXsdSimpleType
    complex_type: GomXsdComplexType
    complexType: GomXsdComplexType

    // Own fields of GXml-0.18.GXml.GomXsdElement

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdElement

    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string | null
    set_block(value: string | null): void
    get_default(): string | null
    set_default(value: string | null): void
    get_final(): string | null
    set_final(value: string | null): void
    get_fixed(): string | null
    set_fixed(value: string | null): void
    get_form(): string | null
    set_form(value: string | null): void
    get_max_occurs(): string | null
    set_max_occurs(value: string | null): void
    get_min_occurs(): string | null
    set_min_occurs(value: string | null): void
    get_name(): string | null
    set_name(value: string | null): void
    get_nillable(): boolean
    set_nillable(value: boolean): void
    get_ref(): string | null
    set_ref(value: string | null): void
    get_substitution_group(): DomTokenList
    set_substitution_group(value: DomTokenList): void
    get_target_namespace(): string | null
    set_target_namespace(value: string | null): void
    get_object_type(): string | null
    set_object_type(value: string | null): void
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    get_simple_type(): GomXsdSimpleType
    set_simple_type(value: GomXsdSimpleType): void
    get_complex_type(): GomXsdComplexType
    set_complex_type(value: GomXsdComplexType): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdElement

    connect(sigName: "notify::abstract", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::abstract", ...args: any[]): void
    connect(sigName: "notify::block", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::block", ...args: any[]): void
    connect(sigName: "notify::default", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default", ...args: any[]): void
    connect(sigName: "notify::final", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::final", ...args: any[]): void
    connect(sigName: "notify::fixed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::fixed", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::max-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::max-occurs", ...args: any[]): void
    connect(sigName: "notify::min-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::min-occurs", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::nillable", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nillable", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nillable", ...args: any[]): void
    connect(sigName: "notify::ref", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ref", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ref", ...args: any[]): void
    connect(sigName: "notify::substitution-group", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::substitution-group", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::substitution-group", ...args: any[]): void
    connect(sigName: "notify::target-namespace", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target-namespace", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target-namespace", ...args: any[]): void
    connect(sigName: "notify::object-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::object-type", ...args: any[]): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::simple-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::simple-type", ...args: any[]): void
    connect(sigName: "notify::complex-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::complex-type", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdElement extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdElement

    static name: string
    static $gtype: GObject.GType<GomXsdElement>

    // Constructors of GXml-0.18.GXml.GomXsdElement

    constructor(config?: GomXsdElement.ConstructorProperties) 
    constructor() 
    static new(): GomXsdElement

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdElement.ConstructorProperties): void
}

export module GomXsdAnnotation {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {
    }

}

export interface GomXsdAnnotation {

    // Own fields of GXml-0.18.GXml.GomXsdAnnotation

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdAnnotation

    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdAnnotation extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdAnnotation

    static name: string
    static $gtype: GObject.GType<GomXsdAnnotation>

    // Constructors of GXml-0.18.GXml.GomXsdAnnotation

    constructor(config?: GomXsdAnnotation.ConstructorProperties) 
    constructor() 
    static new(): GomXsdAnnotation

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdAnnotation.ConstructorProperties): void
}

export module GomXsdBaseType {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdBaseType

        anotation?: GomXsdAnnotation | null
    }

}

export interface GomXsdBaseType {

    // Own properties of GXml-0.18.GXml.GomXsdBaseType

    anotation: GomXsdAnnotation

    // Own fields of GXml-0.18.GXml.GomXsdBaseType

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdBaseType

    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdBaseType

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdBaseType extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdBaseType

    static name: string
    static $gtype: GObject.GType<GomXsdBaseType>

    // Constructors of GXml-0.18.GXml.GomXsdBaseType

    constructor(config?: GomXsdBaseType.ConstructorProperties) 
    constructor() 
    static new(): GomXsdBaseType

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdBaseType.ConstructorProperties): void
}

export module GomXsdBaseContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdBaseContent

        anotation?: GomXsdAnnotation | null
    }

}

export interface GomXsdBaseContent {

    // Own properties of GXml-0.18.GXml.GomXsdBaseContent

    anotation: GomXsdAnnotation

    // Own fields of GXml-0.18.GXml.GomXsdBaseContent

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdBaseContent

    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdBaseContent

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdBaseContent extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdBaseContent

    static name: string
    static $gtype: GObject.GType<GomXsdBaseContent>

    // Constructors of GXml-0.18.GXml.GomXsdBaseContent

    constructor(config?: GomXsdBaseContent.ConstructorProperties) 
    constructor() 
    static new(): GomXsdBaseContent

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdBaseContent.ConstructorProperties): void
}

export module GomXsdSimpleContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdBaseContent.ConstructorProperties {
    }

}

export interface GomXsdSimpleContent {

    // Own fields of GXml-0.18.GXml.GomXsdSimpleContent

    parent_instance: GomXsdBaseContent & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdSimpleContent

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdSimpleContent extends GomXsdBaseContent {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleContent

    static name: string
    static $gtype: GObject.GType<GomXsdSimpleContent>

    // Constructors of GXml-0.18.GXml.GomXsdSimpleContent

    constructor(config?: GomXsdSimpleContent.ConstructorProperties) 
    constructor() 
    static new(): GomXsdSimpleContent

    // Overloads of new

    static new(): GomXsdBaseContent
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdSimpleContent.ConstructorProperties): void
}

export module GomXsdComplexContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdBaseContent.ConstructorProperties {
    }

}

export interface GomXsdComplexContent {

    // Own fields of GXml-0.18.GXml.GomXsdComplexContent

    parent_instance: GomXsdBaseContent & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdComplexContent

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdComplexContent extends GomXsdBaseContent {

    // Own properties of GXml-0.18.GXml.GomXsdComplexContent

    static name: string
    static $gtype: GObject.GType<GomXsdComplexContent>

    // Constructors of GXml-0.18.GXml.GomXsdComplexContent

    constructor(config?: GomXsdComplexContent.ConstructorProperties) 
    constructor() 
    static new(): GomXsdComplexContent

    // Overloads of new

    static new(): GomXsdBaseContent
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdComplexContent.ConstructorProperties): void
}

export module GomXsdOpenContent {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdBaseContent.ConstructorProperties {
    }

}

export interface GomXsdOpenContent {

    // Own fields of GXml-0.18.GXml.GomXsdOpenContent

    parent_instance: GomXsdBaseContent & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdOpenContent

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdOpenContent extends GomXsdBaseContent {

    // Own properties of GXml-0.18.GXml.GomXsdOpenContent

    static name: string
    static $gtype: GObject.GType<GomXsdOpenContent>

    // Constructors of GXml-0.18.GXml.GomXsdOpenContent

    constructor(config?: GomXsdOpenContent.ConstructorProperties) 
    constructor() 
    static new(): GomXsdOpenContent

    // Overloads of new

    static new(): GomXsdBaseContent
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdOpenContent.ConstructorProperties): void
}

export module GomXsdBaseAttribute {

    // Constructor properties interface

    export interface ConstructorProperties extends GomElement.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GomXsdBaseAttribute

        anotation?: GomXsdAnnotation | null
    }

}

export interface GomXsdBaseAttribute {

    // Own properties of GXml-0.18.GXml.GomXsdBaseAttribute

    anotation: GomXsdAnnotation

    // Own fields of GXml-0.18.GXml.GomXsdBaseAttribute

    parent_instance: GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdBaseAttribute

    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdBaseAttribute

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdBaseAttribute extends GomElement {

    // Own properties of GXml-0.18.GXml.GomXsdBaseAttribute

    static name: string
    static $gtype: GObject.GType<GomXsdBaseAttribute>

    // Constructors of GXml-0.18.GXml.GomXsdBaseAttribute

    constructor(config?: GomXsdBaseAttribute.ConstructorProperties) 
    constructor() 
    static new(): GomXsdBaseAttribute

    // Overloads of new

    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdBaseAttribute.ConstructorProperties): void
}

export module GomXsdAttribute {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdBaseAttribute.ConstructorProperties {
    }

}

export interface GomXsdAttribute {

    // Own fields of GXml-0.18.GXml.GomXsdAttribute

    parent_instance: GomXsdBaseAttribute & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdAttribute

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdAttribute extends GomXsdBaseAttribute {

    // Own properties of GXml-0.18.GXml.GomXsdAttribute

    static name: string
    static $gtype: GObject.GType<GomXsdAttribute>

    // Constructors of GXml-0.18.GXml.GomXsdAttribute

    constructor(config?: GomXsdAttribute.ConstructorProperties) 
    constructor() 
    static new(): GomXsdAttribute

    // Overloads of new

    static new(): GomXsdBaseAttribute
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdAttribute.ConstructorProperties): void
}

export module GomXsdAttributeGroup {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdBaseAttribute.ConstructorProperties {
    }

}

export interface GomXsdAttributeGroup {

    // Own fields of GXml-0.18.GXml.GomXsdAttributeGroup

    parent_instance: GomXsdBaseAttribute & GomElement & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    set_attribute(name: string | null, value: string | null): void
    set_attribute(name: string | null, val: string | null): boolean

    // Overloads of set_attribute

    set_attribute(name: string | null, value: string | null): void
    remove_attribute(name: string | null): void
    remove_attribute(name: string | null): boolean

    // Overloads of remove_attribute

    remove_attribute(name: string | null): void
    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_set_attribute(name: string | null, val: string | null): boolean

    // Overloads of vfunc_set_attribute

    vfunc_set_attribute(name: string | null, value: string | null): void
    vfunc_remove_attribute(name: string | null): void
    vfunc_remove_attribute(name: string | null): boolean

    // Overloads of vfunc_remove_attribute

    vfunc_remove_attribute(name: string | null): void

    // Class property signals of GXml-0.18.GXml.GomXsdAttributeGroup

    connect(sigName: "notify::anotation", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anotation", ...args: any[]): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parse-children", ...args: any[]): void
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unparsed", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdAttributeGroup extends GomXsdBaseAttribute {

    // Own properties of GXml-0.18.GXml.GomXsdAttributeGroup

    static name: string
    static $gtype: GObject.GType<GomXsdAttributeGroup>

    // Constructors of GXml-0.18.GXml.GomXsdAttributeGroup

    constructor(config?: GomXsdAttributeGroup.ConstructorProperties) 
    constructor() 
    static new(): GomXsdAttributeGroup

    // Overloads of new

    static new(): GomXsdBaseAttribute
    static new(): GomElement
    static new(): GomNode
    _init(config?: GomXsdAttributeGroup.ConstructorProperties): void
}

export module GomXsdList {

    // Constructor properties interface

    export interface ConstructorProperties extends GomArrayList.ConstructorProperties {
    }

}

export interface GomXsdList {

    // Own properties of GXml-0.18.GXml.GomXsdList

    readonly length: number

    // Own fields of GXml-0.18.GXml.GomXsdList

    parent_instance: GomArrayList & BaseCollection & GObject.Object & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.GomXsdList

    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number

    // Class property signals of GXml-0.18.GXml.GomXsdList

    connect(sigName: "notify::length", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdList extends GomArrayList {

    // Own properties of GXml-0.18.GXml.GomXsdList

    static name: string
    static $gtype: GObject.GType<GomXsdList>

    // Constructors of GXml-0.18.GXml.GomXsdList

    constructor(config?: GomXsdList.ConstructorProperties) 
    constructor() 
    static new(): GomXsdList

    // Overloads of new

    static new(): GomArrayList
    _init(config?: GomXsdList.ConstructorProperties): void
}

export module GomXsdListElements {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdList.ConstructorProperties {
    }

}

export interface GomXsdListElements {

    // Own fields of GXml-0.18.GXml.GomXsdListElements

    parent_instance: GomXsdList & GomArrayList & BaseCollection & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomXsdListElements

    connect(sigName: "notify::length", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdListElements extends GomXsdList {

    // Own properties of GXml-0.18.GXml.GomXsdListElements

    static name: string
    static $gtype: GObject.GType<GomXsdListElements>

    // Constructors of GXml-0.18.GXml.GomXsdListElements

    constructor(config?: GomXsdListElements.ConstructorProperties) 
    constructor() 
    static new(): GomXsdListElements

    // Overloads of new

    static new(): GomXsdList
    static new(): GomArrayList
    _init(config?: GomXsdListElements.ConstructorProperties): void
}

export module GomXsdListSimpleTypes {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdList.ConstructorProperties {
    }

}

export interface GomXsdListSimpleTypes {

    // Own fields of GXml-0.18.GXml.GomXsdListSimpleTypes

    parent_instance: GomXsdList & GomArrayList & BaseCollection & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomXsdListSimpleTypes

    connect(sigName: "notify::length", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdListSimpleTypes extends GomXsdList {

    // Own properties of GXml-0.18.GXml.GomXsdListSimpleTypes

    static name: string
    static $gtype: GObject.GType<GomXsdListSimpleTypes>

    // Constructors of GXml-0.18.GXml.GomXsdListSimpleTypes

    constructor(config?: GomXsdListSimpleTypes.ConstructorProperties) 
    constructor() 
    static new(): GomXsdListSimpleTypes

    // Overloads of new

    static new(): GomXsdList
    static new(): GomArrayList
    _init(config?: GomXsdListSimpleTypes.ConstructorProperties): void
}

export module GomXsdListComplexTypes {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdList.ConstructorProperties {
    }

}

export interface GomXsdListComplexTypes {

    // Own fields of GXml-0.18.GXml.GomXsdListComplexTypes

    parent_instance: GomXsdList & GomArrayList & BaseCollection & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomXsdListComplexTypes

    connect(sigName: "notify::length", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdListComplexTypes extends GomXsdList {

    // Own properties of GXml-0.18.GXml.GomXsdListComplexTypes

    static name: string
    static $gtype: GObject.GType<GomXsdListComplexTypes>

    // Constructors of GXml-0.18.GXml.GomXsdListComplexTypes

    constructor(config?: GomXsdListComplexTypes.ConstructorProperties) 
    constructor() 
    static new(): GomXsdListComplexTypes

    // Overloads of new

    static new(): GomXsdList
    static new(): GomArrayList
    _init(config?: GomXsdListComplexTypes.ConstructorProperties): void
}

export module GomXsdListTypeRestrictionEnumerations {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdList.ConstructorProperties {
    }

}

export interface GomXsdListTypeRestrictionEnumerations {

    // Own fields of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerations

    parent_instance: GomXsdList & GomArrayList & BaseCollection & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerations

    connect(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdListTypeRestrictionEnumerations extends GomXsdList {

    // Own properties of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerations

    static name: string
    static $gtype: GObject.GType<GomXsdListTypeRestrictionEnumerations>

    // Constructors of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerations

    constructor(config?: GomXsdListTypeRestrictionEnumerations.ConstructorProperties) 
    constructor() 
    static new(): GomXsdListTypeRestrictionEnumerations

    // Overloads of new

    static new(): GomXsdList
    static new(): GomArrayList
    _init(config?: GomXsdListTypeRestrictionEnumerations.ConstructorProperties): void
}

export module GomXsdListTypeRestrictionWhiteSpaces {

    // Constructor properties interface

    export interface ConstructorProperties extends GomXsdList.ConstructorProperties {
    }

}

export interface GomXsdListTypeRestrictionWhiteSpaces {

    // Own fields of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpaces

    parent_instance: GomXsdList & GomArrayList & BaseCollection & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpaces

    connect(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomXsdListTypeRestrictionWhiteSpaces extends GomXsdList {

    // Own properties of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpaces

    static name: string
    static $gtype: GObject.GType<GomXsdListTypeRestrictionWhiteSpaces>

    // Constructors of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpaces

    constructor(config?: GomXsdListTypeRestrictionWhiteSpaces.ConstructorProperties) 
    constructor() 
    static new(): GomXsdListTypeRestrictionWhiteSpaces

    // Overloads of new

    static new(): GomXsdList
    static new(): GomArrayList
    _init(config?: GomXsdListTypeRestrictionWhiteSpaces.ConstructorProperties): void
}

export module GomCharacterData {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNonDocumentTypeChildNode.ConstructorProperties, DomChildNode.ConstructorProperties, DomCharacterData.ConstructorProperties, GomNode.ConstructorProperties {
    }

}

export interface GomCharacterData extends DomNonDocumentTypeChildNode, DomChildNode, DomCharacterData {

    // Own fields of GXml-0.18.GXml.GomCharacterData

    parent_instance: GomNode & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GomCharacterData

    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomCharacterData extends GomNode {

    // Own properties of GXml-0.18.GXml.GomCharacterData

    static name: string
    static $gtype: GObject.GType<GomCharacterData>

    // Constructors of GXml-0.18.GXml.GomCharacterData

    constructor(config?: GomCharacterData.ConstructorProperties) 
    constructor() 
    static new(): GomCharacterData

    // Overloads of new

    static new(): GomNode
    _init(config?: GomCharacterData.ConstructorProperties): void
}

export module GomText {

    // Constructor properties interface

    export interface ConstructorProperties extends DomText.ConstructorProperties, GomCharacterData.ConstructorProperties {
    }

}

export interface GomText extends DomText {

    // Own fields of GXml-0.18.GXml.GomText

    parent_instance: GomCharacterData & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GomText

    connect(sigName: "notify::whole-text", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::whole-text", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomText extends GomCharacterData {

    // Own properties of GXml-0.18.GXml.GomText

    static name: string
    static $gtype: GObject.GType<GomText>

    // Constructors of GXml-0.18.GXml.GomText

    constructor(config?: GomText.ConstructorProperties) 
    constructor(doc: DomDocument, data: string | null) 
    static new(doc: DomDocument, data: string | null): GomText

    // Overloads of new

    static new(): GomCharacterData
    static new(): GomNode
    _init(config?: GomText.ConstructorProperties): void
}

export module GomProcessingInstruction {

    // Constructor properties interface

    export interface ConstructorProperties extends DomProcessingInstruction.ConstructorProperties, GomCharacterData.ConstructorProperties {
    }

}

export interface GomProcessingInstruction extends DomProcessingInstruction {

    // Own fields of GXml-0.18.GXml.GomProcessingInstruction

    parent_instance: GomCharacterData & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GomProcessingInstruction

    connect(sigName: "notify::target", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomProcessingInstruction extends GomCharacterData {

    // Own properties of GXml-0.18.GXml.GomProcessingInstruction

    static name: string
    static $gtype: GObject.GType<GomProcessingInstruction>

    // Constructors of GXml-0.18.GXml.GomProcessingInstruction

    constructor(config?: GomProcessingInstruction.ConstructorProperties) 
    constructor(doc: DomDocument, target: string | null, data: string | null) 
    static new(doc: DomDocument, target: string | null, data: string | null): GomProcessingInstruction

    // Overloads of new

    static new(): GomCharacterData
    static new(): GomNode
    _init(config?: GomProcessingInstruction.ConstructorProperties): void
}

export module GomComment {

    // Constructor properties interface

    export interface ConstructorProperties extends DomComment.ConstructorProperties, GomCharacterData.ConstructorProperties {
    }

}

export interface GomComment extends DomComment {

    // Own fields of GXml-0.18.GXml.GomComment

    parent_instance: GomCharacterData & GomNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GomComment

    connect(sigName: "notify::data", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GomComment extends GomCharacterData {

    // Own properties of GXml-0.18.GXml.GomComment

    static name: string
    static $gtype: GObject.GType<GomComment>

    // Constructors of GXml-0.18.GXml.GomComment

    constructor(config?: GomComment.ConstructorProperties) 
    constructor(doc: DomDocument, data: string | null) 
    static new(doc: DomDocument, data: string | null): GomComment

    // Overloads of new

    static new(): GomCharacterData
    static new(): GomNode
    _init(config?: GomComment.ConstructorProperties): void
}

export module GAttribute {

    // Constructor properties interface

    export interface ConstructorProperties extends Attribute.ConstructorProperties, DomAttr.ConstructorProperties, GNode.ConstructorProperties {
    }

}

export interface GAttribute extends Attribute, DomAttr {

    // Own fields of GXml-0.18.GXml.GAttribute

    parent_instance: GNode & GObject.Object
    priv: any

    // Conflicting methods

    set_namespace(value?: Namespace | null): void

    // Overloads of set_namespace

    set_namespace(uri: string | null, prefix?: string | null): boolean
    set_namespace(uri: string | null, prefix?: string | null): boolean
    set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_set_namespace(value?: Namespace | null): void

    // Overloads of vfunc_set_namespace

    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean

    // Class property signals of GXml-0.18.GXml.GAttribute

    connect(sigName: "notify::attrs", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::namespace", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::specified", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::specified", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GAttribute extends GNode {

    // Own properties of GXml-0.18.GXml.GAttribute

    static name: string
    static $gtype: GObject.GType<GAttribute>

    // Constructors of GXml-0.18.GXml.GAttribute

    constructor(config?: GAttribute.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GAttribute
    _init(config?: GAttribute.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GCDATA {

    // Constructor properties interface

    export interface ConstructorProperties extends CDATA.ConstructorProperties, GNode.ConstructorProperties {
    }

}

export interface GCDATA extends CDATA {

    // Own fields of GXml-0.18.GXml.GCDATA

    parent_instance: GNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GCDATA

    connect(sigName: "notify::attrs", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GCDATA extends GNode {

    // Own properties of GXml-0.18.GXml.GCDATA

    static name: string
    static $gtype: GObject.GType<GCDATA>

    // Constructors of GXml-0.18.GXml.GCDATA

    constructor(config?: GCDATA.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GCDATA
    _init(config?: GCDATA.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GCharacterData {

    // Constructor properties interface

    export interface ConstructorProperties extends Character.ConstructorProperties, DomCharacterData.ConstructorProperties, GNonDocumentChildNode.ConstructorProperties {
    }

}

export interface GCharacterData extends Character, DomCharacterData {

    // Own fields of GXml-0.18.GXml.GCharacterData

    parent_instance: GNonDocumentChildNode & GChildNode & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GCharacterData

    connect(sigName: "notify::attrs", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GCharacterData extends GNonDocumentChildNode {

    // Own properties of GXml-0.18.GXml.GCharacterData

    static name: string
    static $gtype: GObject.GType<GCharacterData>

    // Constructors of GXml-0.18.GXml.GCharacterData

    constructor(config?: GCharacterData.ConstructorProperties) 
    constructor() 
    static new(): GCharacterData

    // Overloads of new

    static new(): GNonDocumentChildNode
    static new(): GChildNode
    _init(config?: GCharacterData.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GChildNode {

    // Constructor properties interface

    export interface ConstructorProperties extends DomChildNode.ConstructorProperties, GNode.ConstructorProperties {
    }

}

export interface GChildNode extends DomChildNode {

    // Own fields of GXml-0.18.GXml.GChildNode

    parent_instance: GNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GChildNode

    connect(sigName: "notify::attrs", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GChildNode extends GNode {

    // Own properties of GXml-0.18.GXml.GChildNode

    static name: string
    static $gtype: GObject.GType<GChildNode>

    // Constructors of GXml-0.18.GXml.GChildNode

    constructor(config?: GChildNode.ConstructorProperties) 
    constructor() 
    static new(): GChildNode
    _init(config?: GChildNode.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GNonDocumentChildNode {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNonDocumentTypeChildNode.ConstructorProperties, GChildNode.ConstructorProperties {
    }

}

export interface GNonDocumentChildNode extends DomNonDocumentTypeChildNode {

    // Own fields of GXml-0.18.GXml.GNonDocumentChildNode

    parent_instance: GChildNode & GNode & GObject.Object & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.GNonDocumentChildNode

    connect(sigName: "notify::attrs", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GNonDocumentChildNode extends GChildNode {

    // Own properties of GXml-0.18.GXml.GNonDocumentChildNode

    static name: string
    static $gtype: GObject.GType<GNonDocumentChildNode>

    // Constructors of GXml-0.18.GXml.GNonDocumentChildNode

    constructor(config?: GNonDocumentChildNode.ConstructorProperties) 
    constructor() 
    static new(): GNonDocumentChildNode

    // Overloads of new

    static new(): GChildNode
    _init(config?: GNonDocumentChildNode.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GComment {

    // Constructor properties interface

    export interface ConstructorProperties extends Comment.ConstructorProperties, DomComment.ConstructorProperties, GCharacterData.ConstructorProperties {
    }

}

export interface GComment extends Comment, DomComment {

    // Own fields of GXml-0.18.GXml.GComment

    parent_instance: GCharacterData & GNonDocumentChildNode & GChildNode & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GComment

    connect(sigName: "notify::attrs", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GComment extends GCharacterData {

    // Own properties of GXml-0.18.GXml.GComment

    static name: string
    static $gtype: GObject.GType<GComment>

    // Constructors of GXml-0.18.GXml.GComment

    constructor(config?: GComment.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GComment

    // Overloads of new

    static new(): GCharacterData
    static new(): GNonDocumentChildNode
    static new(): GChildNode
    _init(config?: GComment.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends Document.ConstructorProperties, DomParentNode.ConstructorProperties, DomNonElementParentNode.ConstructorProperties, DomDocument.ConstructorProperties, DomXMLDocument.ConstructorProperties, XPathContext.ConstructorProperties, GNode.ConstructorProperties {
    }

}

export interface GDocument extends Document, DomParentNode, DomNonElementParentNode, DomDocument, DomXMLDocument, XPathContext {

    // Own fields of GXml-0.18.GXml.GDocument

    parent_instance: GNode & GObject.Object
    priv: any
    doc?: any | null
    _buffer: any
    _implementation: GImplementation
    _url: string | null
    _origin: string | null
    _compat_mode: string | null
    _character_set: string | null
    _content_type: string | null
    _constructor: DomEvent

    // Owm methods of GXml-0.18.GXml.GDocument

    libxml_to_string(): string | null
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean

    // Conflicting methods

    create_element(name: string | null): Node
    create_element(local_name: string | null): DomElement
    create_comment(text: string | null): Node
    create_comment(data: string | null): DomComment
    get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    get_elements_by_property_value(property: string | null, value: string | null): ElementList
    vfunc_create_element(name: string | null): Node
    vfunc_create_element(local_name: string | null): DomElement
    vfunc_create_comment(text: string | null): Node
    vfunc_create_comment(data: string | null): DomComment
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): ElementList

    // Own virtual methods of GXml-0.18.GXml.GDocument

    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean

    // Class property signals of GXml-0.18.GXml.GDocument

    connect(sigName: "notify::attrs", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::indent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::indent", ...args: any[]): void
    connect(sigName: "notify::ns-top", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ns-top", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ns-top", ...args: any[]): void
    connect(sigName: "notify::prefix-default-ns", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix-default-ns", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix-default-ns", ...args: any[]): void
    connect(sigName: "notify::backup", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::backup", ...args: any[]): void
    connect(sigName: "notify::root", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::file", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::file", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::implementation", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDocument extends GNode {

    // Own properties of GXml-0.18.GXml.GDocument

    static name: string
    static $gtype: GObject.GType<GDocument>

    // Constructors of GXml-0.18.GXml.GDocument

    constructor(config?: GDocument.ConstructorProperties) 
    constructor() 
    static new(): GDocument
    static from_path(path: string | null, options: number): GDocument
    static from_uri(uri: string | null, options: number): GDocument
    static from_file(file: Gio.File, options: number, cancel?: Gio.Cancellable | null): GDocument
    static from_string(str: string | null, options: number): GDocument
    static from_stream(istream: Gio.InputStream): GDocument
    static from_doc(doc: libxml2.Doc): GDocument
    _init(config?: GDocument.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GImplementation {

    // Constructor properties interface

    export interface ConstructorProperties extends DomImplementation.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GImplementation extends DomImplementation {

    // Own fields of GXml-0.18.GXml.GImplementation

    parent_instance: GObject.Object
    priv: GImplementationPrivate

    // Class property signals of GXml-0.18.GXml.GImplementation

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GImplementation extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GImplementation

    static name: string
    static $gtype: GObject.GType<GImplementation>

    // Constructors of GXml-0.18.GXml.GImplementation

    constructor(config?: GImplementation.ConstructorProperties) 
    constructor() 
    static new(): GImplementation
    _init(config?: GImplementation.ConstructorProperties): void
}

export module GDocumentType {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNode.ConstructorProperties, DomChildNode.ConstructorProperties, DomDocumentType.ConstructorProperties, GChildNode.ConstructorProperties {
    }

}

export interface GDocumentType extends DomNode, DomChildNode, DomDocumentType {

    // Own fields of GXml-0.18.GXml.GDocumentType

    parent_instance: GChildNode & GNode & GObject.Object & GObject.Object
    priv: any
    _name: string | null
    _public_id: string | null
    _system_id: string | null

    // Class property signals of GXml-0.18.GXml.GDocumentType

    connect(sigName: "notify::attrs", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::public-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::public-id", ...args: any[]): void
    connect(sigName: "notify::system-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::system-id", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDocumentType extends GChildNode {

    // Own properties of GXml-0.18.GXml.GDocumentType

    static name: string
    static $gtype: GObject.GType<GDocumentType>

    // Constructors of GXml-0.18.GXml.GDocumentType

    constructor(config?: GDocumentType.ConstructorProperties) 
    static with_name(name: string | null): GDocumentType
    static with_ids(name: string | null, public_id: string | null, system_id: string | null): GDocumentType
    constructor() 
    static new(): GDocumentType

    // Overloads of new

    static new(): GChildNode
    _init(config?: GDocumentType.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GDocumentFragment {

    // Constructor properties interface

    export interface ConstructorProperties extends DomDocumentFragment.ConstructorProperties, GDocument.ConstructorProperties {
    }

}

export interface GDocumentFragment extends DomDocumentFragment {

    // Own fields of GXml-0.18.GXml.GDocumentFragment

    parent_instance: GDocument & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    get_elements_by_property_value(property: string | null, value: string | null): ElementList
    create_element(name: string | null): Node
    create_element(local_name: string | null): DomElement
    create_comment(text: string | null): Node
    create_comment(data: string | null): DomComment
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): ElementList
    vfunc_create_element(name: string | null): Node
    vfunc_create_element(local_name: string | null): DomElement
    vfunc_create_comment(text: string | null): Node
    vfunc_create_comment(data: string | null): DomComment

    // Class property signals of GXml-0.18.GXml.GDocumentFragment

    connect(sigName: "notify::attrs", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDocumentFragment extends GDocument {

    // Own properties of GXml-0.18.GXml.GDocumentFragment

    static name: string
    static $gtype: GObject.GType<GDocumentFragment>

    // Constructors of GXml-0.18.GXml.GDocumentFragment

    constructor(config?: GDocumentFragment.ConstructorProperties) 
    constructor(d: GDocument) 
    static new(d: GDocument): GDocumentFragment

    // Overloads of new

    static new(): GDocument
    _init(config?: GDocumentFragment.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GDomNodeIterator {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNodeIterator.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GDomNodeIterator extends DomNodeIterator {

    // Own fields of GXml-0.18.GXml.GDomNodeIterator

    parent_instance: GObject.Object
    priv: GDomNodeIteratorPrivate
    _root: DomNode
    _reference_node: DomNode
    _pointer_before_reference_node: boolean
    _what_to_show: number
    _filter: DomNodeFilter

    // Class property signals of GXml-0.18.GXml.GDomNodeIterator

    connect(sigName: "notify::root", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::reference-node", ...args: any[]): void
    connect(sigName: "notify::pointer-before-reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-before-reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pointer-before-reference-node", ...args: any[]): void
    connect(sigName: "notify::what-to-show", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::what-to-show", ...args: any[]): void
    connect(sigName: "notify::filter", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::filter", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomNodeIterator extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GDomNodeIterator

    static name: string
    static $gtype: GObject.GType<GDomNodeIterator>

    // Constructors of GXml-0.18.GXml.GDomNodeIterator

    constructor(config?: GDomNodeIterator.ConstructorProperties) 
    constructor(n: DomNode, what_to_show: number, filter: DomNodeFilter) 
    static new(n: DomNode, what_to_show: number, filter: DomNodeFilter): GDomNodeIterator
    _init(config?: GDomNodeIterator.ConstructorProperties): void
}

export module GDomTreeWalker {

    // Constructor properties interface

    export interface ConstructorProperties extends DomTreeWalker.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GDomTreeWalker extends DomTreeWalker {

    // Own fields of GXml-0.18.GXml.GDomTreeWalker

    parent_instance: GObject.Object
    priv: GDomTreeWalkerPrivate
    _root: DomNode
    _what_to_show: number
    _filter?: DomNodeFilter | null
    _current_node: DomNode

    // Class property signals of GXml-0.18.GXml.GDomTreeWalker

    connect(sigName: "notify::root", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::what-to-show", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::what-to-show", ...args: any[]): void
    connect(sigName: "notify::filter", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::filter", ...args: any[]): void
    connect(sigName: "notify::current-node", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-node", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-node", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomTreeWalker extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GDomTreeWalker

    static name: string
    static $gtype: GObject.GType<GDomTreeWalker>

    // Constructors of GXml-0.18.GXml.GDomTreeWalker

    constructor(config?: GDomTreeWalker.ConstructorProperties) 
    constructor(r: DomNode, w: number, f: DomNodeFilter) 
    static new(r: DomNode, w: number, f: DomNodeFilter): GDomTreeWalker
    _init(config?: GDomTreeWalker.ConstructorProperties): void
}

export module GDomTokenList {

    // Constructor properties interface

    export interface ConstructorProperties extends DomTokenList.ConstructorProperties, Gee.ArrayList.ConstructorProperties {
    }

}

export interface GDomTokenList extends DomTokenList {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.GDomTokenList

    parent_instance: Gee.ArrayList
    priv: GDomTokenListPrivate
    _element: DomElement
    _attr: string | null

    // Owm methods of GXml-0.18.GXml.GDomTokenList

    update(): void

    // Conflicting methods

    contains(token: string | null): boolean

    // Overloads of contains

    contains(item: any): boolean
    contains(item: any): boolean
    contains(item: any): boolean
    add(tokens: string[]): void

    // Overloads of add

    add(item: any): boolean
    add(item: any): boolean
    add(item: any): boolean
    remove(tokens: string[]): void

    // Overloads of remove

    remove(item: any): boolean
    remove(item: any): boolean
    remove(item: any): boolean
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_contains(token: string | null): boolean

    // Overloads of vfunc_contains

    vfunc_contains(item: any): boolean
    vfunc_contains(item: any): boolean
    vfunc_contains(item: any): boolean
    vfunc_add(tokens: string[]): void

    // Overloads of vfunc_add

    vfunc_add(item: any): boolean
    vfunc_add(item: any): boolean
    vfunc_add(item: any): boolean
    vfunc_remove(tokens: string[]): void

    // Overloads of vfunc_remove

    vfunc_remove(item: any): boolean
    vfunc_remove(item: any): boolean
    vfunc_remove(item: any): boolean
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.GDomTokenList

    connect(sigName: "notify::g-type", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomTokenList extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.GDomTokenList

    static name: string
    static $gtype: GObject.GType<GDomTokenList>

    // Constructors of GXml-0.18.GXml.GDomTokenList

    constructor(config?: GDomTokenList.ConstructorProperties) 
    constructor(e: DomElement, attr?: string | null) 
    static new(e: DomElement, attr?: string | null): GDomTokenList

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: GDomTokenList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GDomSettableTokenList {

    // Constructor properties interface

    export interface ConstructorProperties extends DomSettableTokenList.ConstructorProperties, GDomTokenList.ConstructorProperties {
    }

}

export interface GDomSettableTokenList extends DomSettableTokenList {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.GDomSettableTokenList

    parent_instance: GDomTokenList & Gee.ArrayList
    priv: any

    // Conflicting methods

    contains(token: string | null): boolean

    // Overloads of contains

    contains(item: any): boolean
    contains(item: any): boolean
    contains(item: any): boolean
    add(tokens: string[]): void

    // Overloads of add

    add(item: any): boolean
    add(item: any): boolean
    add(item: any): boolean
    remove(tokens: string[]): void

    // Overloads of remove

    remove(item: any): boolean
    remove(item: any): boolean
    remove(item: any): boolean
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_contains(token: string | null): boolean

    // Overloads of vfunc_contains

    vfunc_contains(item: any): boolean
    vfunc_contains(item: any): boolean
    vfunc_contains(item: any): boolean
    vfunc_add(tokens: string[]): void

    // Overloads of vfunc_add

    vfunc_add(item: any): boolean
    vfunc_add(item: any): boolean
    vfunc_add(item: any): boolean
    vfunc_remove(tokens: string[]): void

    // Overloads of vfunc_remove

    vfunc_remove(item: any): boolean
    vfunc_remove(item: any): boolean
    vfunc_remove(item: any): boolean
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.GDomSettableTokenList

    connect(sigName: "notify::g-type", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomSettableTokenList extends GDomTokenList {

    // Own properties of GXml-0.18.GXml.GDomSettableTokenList

    static name: string
    static $gtype: GObject.GType<GDomSettableTokenList>

    // Constructors of GXml-0.18.GXml.GDomSettableTokenList

    constructor(config?: GDomSettableTokenList.ConstructorProperties) 
    constructor(e: DomElement, attr?: string | null) 
    static new(e: DomElement, attr?: string | null): GDomSettableTokenList

    // Overloads of new

    static new(e: DomElement, attr?: string | null): GDomTokenList
    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: GDomSettableTokenList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GDomHTMLCollection {

    // Constructor properties interface

    export interface ConstructorProperties extends DomHTMLCollection.ConstructorProperties, Gee.ArrayList.ConstructorProperties {
    }

}

export interface GDomHTMLCollection extends DomHTMLCollection {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.GDomHTMLCollection

    parent_instance: Gee.ArrayList
    priv: GDomHTMLCollectionPrivate

    // Conflicting methods

    to_array(): DomElement[]

    // Overloads of to_array

    to_array(): any[]
    to_array(): any[]
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_to_array(): DomElement[]

    // Overloads of vfunc_to_array

    vfunc_to_array(): any[]
    vfunc_to_array(): any[]
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.GDomHTMLCollection

    connect(sigName: "notify::g-type", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomHTMLCollection extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.GDomHTMLCollection

    static name: string
    static $gtype: GObject.GType<GDomHTMLCollection>

    // Constructors of GXml-0.18.GXml.GDomHTMLCollection

    constructor(config?: GDomHTMLCollection.ConstructorProperties) 
    constructor() 
    static new(): GDomHTMLCollection

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: GDomHTMLCollection.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GDomEvent {

    // Constructor properties interface

    export interface ConstructorProperties extends DomEvent.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GDomEvent extends DomEvent {

    // Own fields of GXml-0.18.GXml.GDomEvent

    parent_instance: GObject.Object
    priv: GDomEventPrivate
    _etype: string | null
    _event_target: DomEventTarget
    _current_target: DomEventTarget
    _bubbles: boolean
    _cancelable: boolean
    _is_trusted: boolean
    _time_stamp: DomTimeStamp
    _default_prevented: boolean
    _event_phase: DomEventPhase
    _flags: DomEventFlags

    // Class property signals of GXml-0.18.GXml.GDomEvent

    connect(sigName: "notify::etype", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::etype", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::etype", ...args: any[]): void
    connect(sigName: "notify::event-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-target", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::is-trusted", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-trusted", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-trusted", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::default-prevented", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-prevented", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-prevented", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomEvent extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GDomEvent

    static name: string
    static $gtype: GObject.GType<GDomEvent>

    // Constructors of GXml-0.18.GXml.GDomEvent

    constructor(config?: GDomEvent.ConstructorProperties) 
    constructor() 
    static new(): GDomEvent
    _init(config?: GDomEvent.ConstructorProperties): void
}

export module GDomCustomEvent {

    // Constructor properties interface

    export interface ConstructorProperties extends GDomEvent.ConstructorProperties {
    }

}

export interface GDomCustomEvent {

    // Own properties of GXml-0.18.GXml.GDomCustomEvent

    readonly detail: any

    // Own fields of GXml-0.18.GXml.GDomCustomEvent

    parent_instance: GDomEvent & GObject.Object
    priv: any
    _detail: any

    // Owm methods of GXml-0.18.GXml.GDomCustomEvent

    init_custom_event(type: string | null, bubbles: boolean, cancelable: boolean, detail?: any | null): void
    get_detail(): /* result */ any

    // Class property signals of GXml-0.18.GXml.GDomCustomEvent

    connect(sigName: "notify::detail", callback: (($obj: GDomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: GDomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomCustomEvent extends GDomEvent {

    // Own properties of GXml-0.18.GXml.GDomCustomEvent

    static name: string
    static $gtype: GObject.GType<GDomCustomEvent>

    // Constructors of GXml-0.18.GXml.GDomCustomEvent

    constructor(config?: GDomCustomEvent.ConstructorProperties) 
    constructor() 
    static new(): GDomCustomEvent

    // Overloads of new

    static new(): GDomEvent
    _init(config?: GDomCustomEvent.ConstructorProperties): void
}

export module GDomRange {

    // Constructor properties interface

    export interface ConstructorProperties extends DomRange.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GDomRange extends DomRange {

    // Own fields of GXml-0.18.GXml.GDomRange

    parent_instance: GObject.Object
    priv: GDomRangePrivate
    _document: DomDocument
    _start_container: DomNode
    _start_offset: number
    _end_container: DomNode
    _end_offset: number
    _collapse: boolean
    _common_ancestor_container: DomNode

    // Class property signals of GXml-0.18.GXml.GDomRange

    connect(sigName: "notify::start-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start-container", ...args: any[]): void
    connect(sigName: "notify::start-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start-offset", ...args: any[]): void
    connect(sigName: "notify::end-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::end-container", ...args: any[]): void
    connect(sigName: "notify::end-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::end-offset", ...args: any[]): void
    connect(sigName: "notify::collapsed", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::collapsed", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::collapsed", ...args: any[]): void
    connect(sigName: "notify::common-ancestor-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::common-ancestor-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::common-ancestor-container", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GDomRange extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GDomRange

    static name: string
    static $gtype: GObject.GType<GDomRange>

    // Constructors of GXml-0.18.GXml.GDomRange

    constructor(config?: GDomRange.ConstructorProperties) 
    constructor(doc: DomDocument) 
    static new(doc: DomDocument): GDomRange
    _init(config?: GDomRange.ConstructorProperties): void
}

export module GElement {

    // Constructor properties interface

    export interface ConstructorProperties extends DomParentNode.ConstructorProperties, DomElement.ConstructorProperties, Element.ConstructorProperties, XPathContext.ConstructorProperties, GNonDocumentChildNode.ConstructorProperties {
    }

}

export interface GElement extends DomParentNode, DomElement, Element, XPathContext {

    // Own fields of GXml-0.18.GXml.GElement

    parent_instance: GNonDocumentChildNode & GChildNode & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    get_elements_by_property_value(property: string | null, value: string | null): ElementList
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): DomElementList
    vfunc_get_elements_by_property_value(property: string | null, value: string | null): ElementList

    // Class property signals of GXml-0.18.GXml.GElement

    connect(sigName: "notify::attrs", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::content", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GElement extends GNonDocumentChildNode {

    // Own properties of GXml-0.18.GXml.GElement

    static name: string
    static $gtype: GObject.GType<GElement>

    // Constructors of GXml-0.18.GXml.GElement

    constructor(config?: GElement.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GElement

    // Overloads of new

    static new(): GNonDocumentChildNode
    static new(): GChildNode
    _init(config?: GElement.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GHashMapAttr {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNamedNodeMap.ConstructorProperties, Gee.AbstractMap.ConstructorProperties {
    }

}

export interface GHashMapAttr extends DomNamedNodeMap {

    // Own fields of GXml-0.18.GXml.GHashMapAttr

    parent_instance: Gee.AbstractMap
    priv: GHashMapAttrPrivate

    // Class property signals of GXml-0.18.GXml.GHashMapAttr

    connect(sigName: "notify::k-type", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-type", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-type", ...args: any[]): void
    connect(sigName: "notify::k-dup-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-dup-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-dup-func", ...args: any[]): void
    connect(sigName: "notify::k-destroy-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-destroy-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-destroy-func", ...args: any[]): void
    connect(sigName: "notify::v-type", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-type", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-type", ...args: any[]): void
    connect(sigName: "notify::v-dup-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-dup-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-dup-func", ...args: any[]): void
    connect(sigName: "notify::v-destroy-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-destroy-func", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-destroy-func", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::keys", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys", ...args: any[]): void
    connect(sigName: "notify::values", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::values", ...args: any[]): void
    connect(sigName: "notify::entries", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::entries", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GHashMapAttr extends Gee.AbstractMap {

    // Own properties of GXml-0.18.GXml.GHashMapAttr

    static name: string
    static $gtype: GObject.GType<GHashMapAttr>

    // Constructors of GXml-0.18.GXml.GHashMapAttr

    constructor(config?: GHashMapAttr.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GHashMapAttr
    _init(config?: GHashMapAttr.ConstructorProperties): void
}

export module GHashMapAttrEntry {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.MapEntry.ConstructorProperties {
    }

}

export interface GHashMapAttrEntry {

    // Own fields of GXml-0.18.GXml.GHashMapAttrEntry

    parent_instance: Gee.MapEntry
    priv: GHashMapAttrEntryPrivate

    // Class property signals of GXml-0.18.GXml.GHashMapAttrEntry

    connect(sigName: "notify::k-type", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-type", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-type", ...args: any[]): void
    connect(sigName: "notify::k-dup-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-dup-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-dup-func", ...args: any[]): void
    connect(sigName: "notify::k-destroy-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-destroy-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-destroy-func", ...args: any[]): void
    connect(sigName: "notify::v-type", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-type", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-type", ...args: any[]): void
    connect(sigName: "notify::v-dup-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-dup-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-dup-func", ...args: any[]): void
    connect(sigName: "notify::v-destroy-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-destroy-func", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-destroy-func", ...args: any[]): void
    connect(sigName: "notify::key", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GHashMapAttrEntry extends Gee.MapEntry {

    // Own properties of GXml-0.18.GXml.GHashMapAttrEntry

    static name: string
    static $gtype: GObject.GType<GHashMapAttrEntry>

    // Constructors of GXml-0.18.GXml.GHashMapAttrEntry

    constructor(config?: GHashMapAttrEntry.ConstructorProperties) 
    constructor(doc: GDocument, attr?: any | null) 
    static new(doc: GDocument, attr?: any | null): GHashMapAttrEntry
    _init(config?: GHashMapAttrEntry.ConstructorProperties): void
}

export module GHashMapAttrIterator {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.MapIterator.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GHashMapAttrIterator extends Gee.MapIterator {

    // Own fields of GXml-0.18.GXml.GHashMapAttrIterator

    parent_instance: GObject.Object
    priv: GHashMapAttrIteratorPrivate

    // Class property signals of GXml-0.18.GXml.GHashMapAttrIterator

    connect(sigName: "notify::valid", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::valid", ...args: any[]): void
    connect(sigName: "notify::mutable", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mutable", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::mutable", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GHashMapAttrIterator extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GHashMapAttrIterator

    static name: string
    static $gtype: GObject.GType<GHashMapAttrIterator>

    // Constructors of GXml-0.18.GXml.GHashMapAttrIterator

    constructor(config?: GHashMapAttrIterator.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GHashMapAttrIterator
    _init(config?: GHashMapAttrIterator.ConstructorProperties): void
}

export module GListChildren {

    // Constructor properties interface

    export interface ConstructorProperties extends DomNodeList.ConstructorProperties, DomHTMLCollection.ConstructorProperties, Gee.AbstractBidirList.ConstructorProperties {
    }

}

export interface GListChildren extends DomNodeList, DomHTMLCollection {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.GListChildren

    parent_instance: Gee.AbstractBidirList
    priv: GListChildrenPrivate

    // Conflicting methods

    item(index: number): DomNode | null
    item(index: number): DomElement | null
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    to_array(): DomElement[]

    // Overloads of to_array

    to_array(): any[]
    to_array(): any[]
    vfunc_item(index: number): DomNode | null
    vfunc_item(index: number): DomElement | null
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_to_array(): DomElement[]

    // Overloads of vfunc_to_array

    vfunc_to_array(): any[]
    vfunc_to_array(): any[]

    // Class property signals of GXml-0.18.GXml.GListChildren

    connect(sigName: "notify::g-type", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GListChildren extends Gee.AbstractBidirList {

    // Own properties of GXml-0.18.GXml.GListChildren

    static name: string
    static $gtype: GObject.GType<GListChildren>

    // Constructors of GXml-0.18.GXml.GListChildren

    constructor(config?: GListChildren.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GListChildren
    _init(config?: GListChildren.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GListChildrenIterator {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.Traversable.ConstructorProperties, Gee.Iterator.ConstructorProperties, Gee.BidirIterator.ConstructorProperties, Gee.ListIterator.ConstructorProperties, Gee.BidirListIterator.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GListChildrenIterator extends Gee.Traversable, Gee.Iterator, Gee.BidirIterator, Gee.ListIterator, Gee.BidirListIterator {

    // Own fields of GXml-0.18.GXml.GListChildrenIterator

    parent_instance: GObject.Object
    priv: GListChildrenIteratorPrivate

    // Class property signals of GXml-0.18.GXml.GListChildrenIterator

    connect(sigName: "notify::valid", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::valid", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GListChildrenIterator extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GListChildrenIterator

    static name: string
    static $gtype: GObject.GType<GListChildrenIterator>

    // Constructors of GXml-0.18.GXml.GListChildrenIterator

    constructor(config?: GListChildrenIterator.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GListChildrenIterator
    _init(config?: GListChildrenIterator.ConstructorProperties): void
}

export module GListNamespaces {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.AbstractList.ConstructorProperties {
    }

}

export interface GListNamespaces {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.GListNamespaces

    parent_instance: Gee.AbstractList
    priv: GListNamespacesPrivate

    // Conflicting methods

    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.GListNamespaces

    connect(sigName: "notify::g-type", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GListNamespaces extends Gee.AbstractList {

    // Own properties of GXml-0.18.GXml.GListNamespaces

    static name: string
    static $gtype: GObject.GType<GListNamespaces>

    // Constructors of GXml-0.18.GXml.GListNamespaces

    constructor(config?: GListNamespaces.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GListNamespaces
    _init(config?: GListNamespaces.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module GListNamespacesIterator {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.Traversable.ConstructorProperties, Gee.Iterator.ConstructorProperties, Gee.ListIterator.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GListNamespacesIterator extends Gee.Traversable, Gee.Iterator, Gee.ListIterator {

    // Own fields of GXml-0.18.GXml.GListNamespacesIterator

    parent_instance: GObject.Object
    priv: GListNamespacesIteratorPrivate

    // Class property signals of GXml-0.18.GXml.GListNamespacesIterator

    connect(sigName: "notify::valid", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::valid", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GListNamespacesIterator extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GListNamespacesIterator

    static name: string
    static $gtype: GObject.GType<GListNamespacesIterator>

    // Constructors of GXml-0.18.GXml.GListNamespacesIterator

    constructor(config?: GListNamespacesIterator.ConstructorProperties) 
    constructor(node?: any | null) 
    static new(node?: any | null): GListNamespacesIterator
    _init(config?: GListNamespacesIterator.ConstructorProperties): void
}

export module GNamespace {

    // Constructor properties interface

    export interface ConstructorProperties extends Namespace.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GNamespace extends Namespace {

    // Own fields of GXml-0.18.GXml.GNamespace

    parent_instance: GObject.Object
    priv: GNamespacePrivate

    // Owm methods of GXml-0.18.GXml.GNamespace

    get_internal_ns(): any | null

    // Class property signals of GXml-0.18.GXml.GNamespace

    connect(sigName: "notify::uri", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GNamespace extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GNamespace

    static name: string
    static $gtype: GObject.GType<GNamespace>

    // Constructors of GXml-0.18.GXml.GNamespace

    constructor(config?: GNamespace.ConstructorProperties) 
    constructor(ns?: any | null) 
    static new(ns?: any | null): GNamespace
    _init(config?: GNamespace.ConstructorProperties): void
}

export module GNode {

    // Constructor properties interface

    export interface ConstructorProperties extends DomEventTarget.ConstructorProperties, DomNode.ConstructorProperties, Node.ConstructorProperties, GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.GNode

        value?: string | null
    }

}

export interface GNode extends DomEventTarget, DomNode, Node {

    // Own properties of GXml-0.18.GXml.GNode

    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly childrenNodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly typeNode: NodeType
    readonly name: string | null
    value: string | null

    // Own fields of GXml-0.18.GXml.GNode

    parent_instance: GObject.Object
    priv: GNodePrivate
    _doc: GDocument
    _node?: any | null
    _base_uri: string | null

    // Owm methods of GXml-0.18.GXml.GNode

    set_namespace(uri: string | null, prefix?: string | null): boolean
    to_string(): string | null
    get_internal_node(): any | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string | null
    get_value(): string | null
    set_value(value: string | null): void

    // Own virtual methods of GXml-0.18.GXml.GNode

    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_to_string(): string | null
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string | null
    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void

    // Class property signals of GXml-0.18.GXml.GNode

    connect(sigName: "notify::attrs", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GNode extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GNode

    static name: string
    static $gtype: GObject.GType<GNode>

    // Constructors of GXml-0.18.GXml.GNode

    constructor(config?: GNode.ConstructorProperties) 
    _init(config?: GNode.ConstructorProperties): void
    static to_gnode(doc: GDocument, node?: any | null): Node

    // Conflicting static methods

    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
}

export module GProcessingInstruction {

    // Constructor properties interface

    export interface ConstructorProperties extends ProcessingInstruction.ConstructorProperties, DomProcessingInstruction.ConstructorProperties, GCharacterData.ConstructorProperties {
    }

}

export interface GProcessingInstruction extends ProcessingInstruction, DomProcessingInstruction {

    // Own fields of GXml-0.18.GXml.GProcessingInstruction

    parent_instance: GCharacterData & GNonDocumentChildNode & GChildNode & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GProcessingInstruction

    connect(sigName: "notify::attrs", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GProcessingInstruction extends GCharacterData {

    // Own properties of GXml-0.18.GXml.GProcessingInstruction

    static name: string
    static $gtype: GObject.GType<GProcessingInstruction>

    // Constructors of GXml-0.18.GXml.GProcessingInstruction

    constructor(config?: GProcessingInstruction.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GProcessingInstruction

    // Overloads of new

    static new(): GCharacterData
    static new(): GNonDocumentChildNode
    static new(): GChildNode
    _init(config?: GProcessingInstruction.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GText {

    // Constructor properties interface

    export interface ConstructorProperties extends Text.ConstructorProperties, DomText.ConstructorProperties, GCharacterData.ConstructorProperties {
    }

}

export interface GText extends Text, DomText {

    // Own fields of GXml-0.18.GXml.GText

    parent_instance: GCharacterData & GNonDocumentChildNode & GChildNode & GNode & GObject.Object & GObject.Object
    priv: any

    // Conflicting methods

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.GText

    connect(sigName: "notify::attrs", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: "notify::whole-text", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::whole-text", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GText extends GCharacterData {

    // Own properties of GXml-0.18.GXml.GText

    static name: string
    static $gtype: GObject.GType<GText>

    // Constructors of GXml-0.18.GXml.GText

    constructor(config?: GText.ConstructorProperties) 
    constructor(doc: GDocument, node?: any | null) 
    static new(doc: GDocument, node?: any | null): GText

    // Overloads of new

    static new(): GCharacterData
    static new(): GNonDocumentChildNode
    static new(): GChildNode
    _init(config?: GText.ConstructorProperties): void

    // Conflicting static methods

    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
}

export module GXPathObject {

    // Constructor properties interface

    export interface ConstructorProperties extends XPathObject.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface GXPathObject extends XPathObject {

    // Own fields of GXml-0.18.GXml.GXPathObject

    parent_instance: GObject.Object
    priv: GXPathObjectPrivate

    // Class property signals of GXml-0.18.GXml.GXPathObject

    connect(sigName: "notify::object-type", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::object-type", ...args: any[]): void
    connect(sigName: "notify::boolean-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::boolean-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::boolean-value", ...args: any[]): void
    connect(sigName: "notify::string-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::string-value", ...args: any[]): void
    connect(sigName: "notify::number-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::number-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::number-value", ...args: any[]): void
    connect(sigName: "notify::nodeset", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodeset", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::nodeset", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class GXPathObject extends GObject.Object {

    // Own properties of GXml-0.18.GXml.GXPathObject

    static name: string
    static $gtype: GObject.GType<GXPathObject>

    // Constructors of GXml-0.18.GXml.GXPathObject

    constructor(config?: GXPathObject.ConstructorProperties) 
    constructor(document: GDocument, pointer?: any | null) 
    static new(document: GDocument, pointer?: any | null): GXPathObject
    _init(config?: GXPathObject.ConstructorProperties): void
}

export module NodeList {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.ArrayList.ConstructorProperties {
    }

}

export interface NodeList {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.NodeList

    parent_instance: Gee.ArrayList
    priv: NodeListPrivate

    // Owm methods of GXml-0.18.GXml.NodeList

    get(index: number): Node

    // Overloads of get

    get(index: number): any
    to_array(): Node[]

    // Overloads of to_array

    to_array(): any[]

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.NodeList

    connect(sigName: "notify::g-type", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class NodeList extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.NodeList

    static name: string
    static $gtype: GObject.GType<NodeList>

    // Constructors of GXml-0.18.GXml.NodeList

    constructor(config?: NodeList.ConstructorProperties) 
    constructor() 
    static new(): NodeList

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: NodeList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module SerializableBool {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableProperty.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface SerializableBool extends SerializableProperty {

    // Own fields of GXml-0.18.GXml.SerializableBool

    parent_instance: GObject.Object
    priv: SerializableBoolPrivate

    // Owm methods of GXml-0.18.GXml.SerializableBool

    get_value(): boolean
    set_value(val: boolean): void
    to_string(): string | null

    // Class property signals of GXml-0.18.GXml.SerializableBool

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableBool extends GObject.Object {

    // Own properties of GXml-0.18.GXml.SerializableBool

    static name: string
    static $gtype: GObject.GType<SerializableBool>

    // Constructors of GXml-0.18.GXml.SerializableBool

    constructor(config?: SerializableBool.ConstructorProperties) 
    constructor() 
    static new(): SerializableBool
    _init(config?: SerializableBool.ConstructorProperties): void
}

export module SerializableContainer {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableObjectModel.ConstructorProperties {
    }

}

export interface SerializableContainer {

    // Own fields of GXml-0.18.GXml.SerializableContainer

    parent_instance: SerializableObjectModel & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.SerializableContainer

    init_containers(): void

    // Own virtual methods of GXml-0.18.GXml.SerializableContainer

    vfunc_init_containers(): void

    // Class property signals of GXml-0.18.GXml.SerializableContainer

    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableContainer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableContainer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ignored-serializable-properties", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableContainer extends SerializableObjectModel {

    // Own properties of GXml-0.18.GXml.SerializableContainer

    static name: string
    static $gtype: GObject.GType<SerializableContainer>

    // Constructors of GXml-0.18.GXml.SerializableContainer

    constructor(config?: SerializableContainer.ConstructorProperties) 
    _init(config?: SerializableContainer.ConstructorProperties): void
}

export module SerializableDouble {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableProperty.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface SerializableDouble extends SerializableProperty {

    // Own fields of GXml-0.18.GXml.SerializableDouble

    parent_instance: GObject.Object
    priv: SerializableDoublePrivate
    _val: string | null
    _fraction: number

    // Owm methods of GXml-0.18.GXml.SerializableDouble

    get_fraction(): number
    set_fraction(fraction: number): void
    get_value(): number
    set_value(val: number): void
    to_string(): string | null
    format(f: string | null): string | null

    // Class property signals of GXml-0.18.GXml.SerializableDouble

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableDouble extends GObject.Object {

    // Own properties of GXml-0.18.GXml.SerializableDouble

    static name: string
    static $gtype: GObject.GType<SerializableDouble>

    // Constructors of GXml-0.18.GXml.SerializableDouble

    constructor(config?: SerializableDouble.ConstructorProperties) 
    constructor() 
    static new(): SerializableDouble
    _init(config?: SerializableDouble.ConstructorProperties): void
}

export module SerializableEnum {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableProperty.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface SerializableEnum extends SerializableProperty {

    // Own fields of GXml-0.18.GXml.SerializableEnum

    parent_instance: GObject.Object
    priv: SerializableEnumPrivate
    _val: string | null
    _enumtype: GObject.GType

    // Owm methods of GXml-0.18.GXml.SerializableEnum

    set_enum_type(type: GObject.GType): void
    get_enum_type(): GObject.GType
    parse(str: string | null): void
    parse_integer(v: number): void
    to_integer(): number
    to_string(): string | null

    // Class property signals of GXml-0.18.GXml.SerializableEnum

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableEnum extends GObject.Object {

    // Own properties of GXml-0.18.GXml.SerializableEnum

    static name: string
    static $gtype: GObject.GType<SerializableEnum>

    // Constructors of GXml-0.18.GXml.SerializableEnum

    constructor(config?: SerializableEnum.ConstructorProperties) 
    static with_enum(type: GObject.GType): SerializableEnum
    constructor() 
    static new(): SerializableEnum
    _init(config?: SerializableEnum.ConstructorProperties): void
}

export module SerializableFloat {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableDouble.ConstructorProperties {
    }

}

export interface SerializableFloat {

    // Own fields of GXml-0.18.GXml.SerializableFloat

    parent_instance: SerializableDouble & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.SerializableFloat

    get_value(): number
    set_value(val: number): void

    // Class property signals of GXml-0.18.GXml.SerializableFloat

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableFloat extends SerializableDouble {

    // Own properties of GXml-0.18.GXml.SerializableFloat

    static name: string
    static $gtype: GObject.GType<SerializableFloat>

    // Constructors of GXml-0.18.GXml.SerializableFloat

    constructor(config?: SerializableFloat.ConstructorProperties) 
    constructor() 
    static new(): SerializableFloat

    // Overloads of new

    static new(): SerializableDouble
    _init(config?: SerializableFloat.ConstructorProperties): void
}

export module SerializableArrayList {

    // Constructor properties interface

    export interface ConstructorProperties extends Serializable.ConstructorProperties, SerializableCollection.ConstructorProperties, Gee.ArrayList.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.SerializableArrayList

        ignored_serializable_properties?: GLib.HashTable | null
        ignoredSerializableProperties?: GLib.HashTable | null
    }

}

export interface SerializableArrayList extends Serializable, SerializableCollection {

    // Own properties of GXml-0.18.GXml.SerializableArrayList

    ignored_serializable_properties: GLib.HashTable
    ignoredSerializableProperties: GLib.HashTable

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.SerializableArrayList

    parent_instance: Gee.ArrayList
    priv: SerializableArrayListPrivate
    _node: Node
    _deserialized: boolean

    // Owm methods of GXml-0.18.GXml.SerializableArrayList

    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    set_default_namespace(node: Node): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string | null
    find_property_spec(property_name: string | null): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Own virtual methods of GXml-0.18.GXml.SerializableArrayList

    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string | null
    vfunc_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean

    // Class property signals of GXml-0.18.GXml.SerializableArrayList

    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ignored-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::g-type", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableArrayList extends Gee.ArrayList {

    // Own properties of GXml-0.18.GXml.SerializableArrayList

    static name: string
    static $gtype: GObject.GType<SerializableArrayList>

    // Constructors of GXml-0.18.GXml.SerializableArrayList

    constructor(config?: SerializableArrayList.ConstructorProperties) 
    constructor() 
    static new(): SerializableArrayList

    // Overloads of new

    static new(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): Gee.ArrayList
    _init(config?: SerializableArrayList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module SerializableDualKeyMap {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.Traversable.ConstructorProperties, Serializable.ConstructorProperties, SerializableCollection.ConstructorProperties, GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.SerializableDualKeyMap

        ignored_serializable_properties?: GLib.HashTable | null
        ignoredSerializableProperties?: GLib.HashTable | null
    }

}

export interface SerializableDualKeyMap extends Gee.Traversable, Serializable, SerializableCollection {

    // Own properties of GXml-0.18.GXml.SerializableDualKeyMap

    readonly value_type: GObject.GType
    readonly valueType: GObject.GType
    readonly primary_key_type: GObject.GType
    readonly primaryKeyType: GObject.GType
    readonly secondary_key_type: GObject.GType
    readonly secondaryKeyType: GObject.GType
    readonly primary_keys: Gee.Collection
    readonly primaryKeys: Gee.Collection
    readonly size: number
    ignored_serializable_properties: GLib.HashTable
    ignoredSerializableProperties: GLib.HashTable

    // Own fields of GXml-0.18.GXml.SerializableDualKeyMap

    parent_instance: GObject.Object
    priv: SerializableDualKeyMapPrivate
    storage: Gee.HashMultiMap
    _node: Node
    _deserialized: boolean

    // Owm methods of GXml-0.18.GXml.SerializableDualKeyMap

    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    secondary_keys(key?: any | null): Gee.Collection
    values_for_key(primary_key?: any | null): Gee.Collection
    values(): Gee.Collection
    set(primary_key?: any | null, secundary_key?: any | null, val?: any | null): void
    get(primary_key?: any | null, secondary_key?: any | null): any | null
    set_default_namespace(node: Node): boolean
    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string | null
    find_property_spec(property_name: string | null): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_value_type(): GObject.GType
    get_primary_key_type(): GObject.GType
    get_secondary_key_type(): GObject.GType
    get_primary_keys(): Gee.Collection
    get_size(): number
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void

    // Own virtual methods of GXml-0.18.GXml.SerializableDualKeyMap

    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string | null
    vfunc_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean

    // Class property signals of GXml-0.18.GXml.SerializableDualKeyMap

    connect(sigName: "notify::value-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value-type", ...args: any[]): void
    connect(sigName: "notify::primary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::primary-key-type", ...args: any[]): void
    connect(sigName: "notify::secondary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::secondary-key-type", ...args: any[]): void
    connect(sigName: "notify::primary-keys", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-keys", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::primary-keys", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ignored-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableDualKeyMap extends GObject.Object {

    // Own properties of GXml-0.18.GXml.SerializableDualKeyMap

    static name: string
    static $gtype: GObject.GType<SerializableDualKeyMap>

    // Constructors of GXml-0.18.GXml.SerializableDualKeyMap

    constructor(config?: SerializableDualKeyMap.ConstructorProperties) 
    constructor() 
    static new(): SerializableDualKeyMap
    _init(config?: SerializableDualKeyMap.ConstructorProperties): void
}

export module SerializableHashMap {

    // Constructor properties interface

    export interface ConstructorProperties extends Serializable.ConstructorProperties, SerializableCollection.ConstructorProperties, Gee.HashMap.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.SerializableHashMap

        ignored_serializable_properties?: GLib.HashTable | null
        ignoredSerializableProperties?: GLib.HashTable | null
    }

}

export interface SerializableHashMap extends Serializable, SerializableCollection {

    // Own properties of GXml-0.18.GXml.SerializableHashMap

    ignored_serializable_properties: GLib.HashTable
    ignoredSerializableProperties: GLib.HashTable

    // Own fields of GXml-0.18.GXml.SerializableHashMap

    parent_instance: Gee.HashMap
    priv: SerializableHashMapPrivate
    _node: Node
    _deserialized: boolean

    // Owm methods of GXml-0.18.GXml.SerializableHashMap

    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    set_default_namespace(node: Node): boolean
    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string | null
    find_property_spec(property_name: string | null): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void

    // Own virtual methods of GXml-0.18.GXml.SerializableHashMap

    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string | null
    vfunc_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean

    // Class property signals of GXml-0.18.GXml.SerializableHashMap

    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ignored-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::k-type", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-type", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-type", ...args: any[]): void
    connect(sigName: "notify::k-dup-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-dup-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-dup-func", ...args: any[]): void
    connect(sigName: "notify::k-destroy-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-destroy-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-destroy-func", ...args: any[]): void
    connect(sigName: "notify::v-type", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-type", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-type", ...args: any[]): void
    connect(sigName: "notify::v-dup-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-dup-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-dup-func", ...args: any[]): void
    connect(sigName: "notify::v-destroy-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-destroy-func", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-destroy-func", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::keys", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys", ...args: any[]): void
    connect(sigName: "notify::values", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::values", ...args: any[]): void
    connect(sigName: "notify::entries", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::entries", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableHashMap extends Gee.HashMap {

    // Own properties of GXml-0.18.GXml.SerializableHashMap

    static name: string
    static $gtype: GObject.GType<SerializableHashMap>

    // Constructors of GXml-0.18.GXml.SerializableHashMap

    constructor(config?: SerializableHashMap.ConstructorProperties) 
    constructor() 
    static new(): SerializableHashMap

    // Overloads of new

    static new(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify, key_hash_func: Gee.HashDataFunc | null, key_equal_func: Gee.EqualDataFunc | null, value_equal_func: Gee.EqualDataFunc | null): Gee.HashMap
    _init(config?: SerializableHashMap.ConstructorProperties): void
}

export module SerializableTreeMap {

    // Constructor properties interface

    export interface ConstructorProperties extends Serializable.ConstructorProperties, SerializableCollection.ConstructorProperties, Gee.TreeMap.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.SerializableTreeMap

        ignored_serializable_properties?: GLib.HashTable | null
        ignoredSerializableProperties?: GLib.HashTable | null
    }

}

export interface SerializableTreeMap extends Serializable, SerializableCollection {

    // Own properties of GXml-0.18.GXml.SerializableTreeMap

    ignored_serializable_properties: GLib.HashTable
    ignoredSerializableProperties: GLib.HashTable

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.SerializableTreeMap

    parent_instance: Gee.TreeMap
    priv: SerializableTreeMapPrivate
    _node: Node
    _deserialized: boolean

    // Owm methods of GXml-0.18.GXml.SerializableTreeMap

    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    set_default_namespace(node: Node): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string | null
    find_property_spec(property_name: string | null): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void

    // Conflicting methods

    get_read_only_view(): Gee.BidirSortedMap

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirSortedMap
    get_read_only_view(): Gee.SortedMap
    get_read_only_view(): Gee.Map
    get_read_only_view(): Gee.BidirSortedMap

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.SortedMap
    get_read_only_view(): Gee.Map
    get_read_only_view(): Gee.SortedMap

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Map
    get_read_only_view(): Gee.Map
    get_read_only_view(): Gee.Map
    vfunc_get_read_only_view(): Gee.BidirSortedMap

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirSortedMap
    vfunc_get_read_only_view(): Gee.SortedMap
    vfunc_get_read_only_view(): Gee.Map
    vfunc_get_read_only_view(): Gee.BidirSortedMap

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.SortedMap
    vfunc_get_read_only_view(): Gee.Map
    vfunc_get_read_only_view(): Gee.SortedMap

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Map
    vfunc_get_read_only_view(): Gee.Map
    vfunc_get_read_only_view(): Gee.Map

    // Own virtual methods of GXml-0.18.GXml.SerializableTreeMap

    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string | null
    vfunc_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean

    // Class property signals of GXml-0.18.GXml.SerializableTreeMap

    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ignored-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::k-type", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-type", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-type", ...args: any[]): void
    connect(sigName: "notify::k-dup-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-dup-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-dup-func", ...args: any[]): void
    connect(sigName: "notify::k-destroy-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::k-destroy-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::k-destroy-func", ...args: any[]): void
    connect(sigName: "notify::v-type", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-type", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-type", ...args: any[]): void
    connect(sigName: "notify::v-dup-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-dup-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-dup-func", ...args: any[]): void
    connect(sigName: "notify::v-destroy-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-destroy-func", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::ascending-keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ascending-keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ascending-keys", ...args: any[]): void
    connect(sigName: "notify::ascending-entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ascending-entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ascending-entries", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::keys", ...args: any[]): void
    connect(sigName: "notify::values", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::values", ...args: any[]): void
    connect(sigName: "notify::entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::entries", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableTreeMap extends Gee.TreeMap {

    // Own properties of GXml-0.18.GXml.SerializableTreeMap

    static name: string
    static $gtype: GObject.GType<SerializableTreeMap>

    // Constructors of GXml-0.18.GXml.SerializableTreeMap

    constructor(config?: SerializableTreeMap.ConstructorProperties) 
    constructor() 
    static new(): SerializableTreeMap

    // Overloads of new

    static new(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify, key_compare_func: GLib.CompareDataFunc | null, value_equal_func: Gee.EqualDataFunc | null): Gee.TreeMap
    _init(config?: SerializableTreeMap.ConstructorProperties): void

    // Conflicting static methods

    static empty(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify): Gee.BidirSortedMap

    // Overloads of empty

    static empty(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify): Gee.Map
    static empty(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify): Gee.Map
    static empty(k_type: GObject.GType, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.GType, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify): Gee.Map
}

export module SerializableInt {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableDouble.ConstructorProperties {
    }

}

export interface SerializableInt {

    // Own fields of GXml-0.18.GXml.SerializableInt

    parent_instance: SerializableDouble & GObject.Object
    priv: any

    // Owm methods of GXml-0.18.GXml.SerializableInt

    get_value(): number
    set_value(val: number): void

    // Class property signals of GXml-0.18.GXml.SerializableInt

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableInt extends SerializableDouble {

    // Own properties of GXml-0.18.GXml.SerializableInt

    static name: string
    static $gtype: GObject.GType<SerializableInt>

    // Constructors of GXml-0.18.GXml.SerializableInt

    constructor(config?: SerializableInt.ConstructorProperties) 
    constructor() 
    static new(): SerializableInt

    // Overloads of new

    static new(): SerializableDouble
    _init(config?: SerializableInt.ConstructorProperties): void
}

export module SerializableObjectModel {

    // Constructor properties interface

    export interface ConstructorProperties extends Serializable.ConstructorProperties, GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.SerializableObjectModel

        ignored_serializable_properties?: GLib.HashTable | null
        ignoredSerializableProperties?: GLib.HashTable | null
    }

}

export interface SerializableObjectModel extends Serializable {

    // Own properties of GXml-0.18.GXml.SerializableObjectModel

    ignored_serializable_properties: GLib.HashTable
    ignoredSerializableProperties: GLib.HashTable

    // Own fields of GXml-0.18.GXml.SerializableObjectModel

    parent_instance: GObject.Object
    priv: SerializableObjectModelPrivate
    _node: Node

    // Owm methods of GXml-0.18.GXml.SerializableObjectModel

    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    set_default_namespace(node: Node): boolean
    node_name(): string | null
    default_node_name(): string | null
    find_property_spec(property_name: string | null): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Element, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    to_string(): string | null
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void

    // Own virtual methods of GXml-0.18.GXml.SerializableObjectModel

    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_node_name(): string | null
    vfunc_find_property_spec(property_name: string | null): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_to_string(): string | null

    // Class property signals of GXml-0.18.GXml.SerializableObjectModel

    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ignored-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-properties", ...args: any[]): void
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::unknown-serializable-nodes", ...args: any[]): void
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::serialized-xml-node-value", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableObjectModel extends GObject.Object {

    // Own properties of GXml-0.18.GXml.SerializableObjectModel

    static name: string
    static $gtype: GObject.GType<SerializableObjectModel>

    // Constructors of GXml-0.18.GXml.SerializableObjectModel

    constructor(config?: SerializableObjectModel.ConstructorProperties) 
    _init(config?: SerializableObjectModel.ConstructorProperties): void
}

export module SerializableValueList {

    // Constructor properties interface

    export interface ConstructorProperties extends SerializableProperty.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface SerializableValueList extends SerializableProperty {

    // Own fields of GXml-0.18.GXml.SerializableValueList

    parent_instance: GObject.Object
    priv: SerializableValueListPrivate
    _vals: string[]
    extra: Gee.ArrayList

    // Owm methods of GXml-0.18.GXml.SerializableValueList

    get_values(): Gee.List
    add_values(vals: string[]): void
    get_value_at(index: number): string | null
    select_value_at(index: number): void
    get_values_array(): string[]
    is_value(): boolean
    to_string(): string | null

    // Own virtual methods of GXml-0.18.GXml.SerializableValueList

    vfunc_get_values(): Gee.List
    vfunc_add_values(vals: string[]): void
    vfunc_get_value_at(index: number): string | null
    vfunc_select_value_at(index: number): void
    vfunc_get_values_array(): string[]
    vfunc_is_value(): boolean

    // Class property signals of GXml-0.18.GXml.SerializableValueList

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class SerializableValueList extends GObject.Object {

    // Own properties of GXml-0.18.GXml.SerializableValueList

    static name: string
    static $gtype: GObject.GType<SerializableValueList>

    // Constructors of GXml-0.18.GXml.SerializableValueList

    constructor(config?: SerializableValueList.ConstructorProperties) 
    constructor() 
    static new(): SerializableValueList
    _init(config?: SerializableValueList.ConstructorProperties): void
}

export module TAttribute {

    // Constructor properties interface

    export interface ConstructorProperties extends Attribute.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TAttribute extends Attribute {

    // Own fields of GXml-0.18.GXml.TAttribute

    parent_instance: TNode & GObject.Object
    priv: any
    _namespaces: Gee.ArrayList

    // Conflicting methods

    set_namespace(value?: Namespace | null): void

    // Overloads of set_namespace

    set_namespace(uri: string | null, prefix?: string | null): boolean
    set_namespace(uri: string | null, prefix?: string | null): boolean
    set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_set_namespace(value?: Namespace | null): void

    // Overloads of vfunc_set_namespace

    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean

    // Class property signals of GXml-0.18.GXml.TAttribute

    connect(sigName: "notify::attrs", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::namespace", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TAttribute extends TNode {

    // Own properties of GXml-0.18.GXml.TAttribute

    static name: string
    static $gtype: GObject.GType<TAttribute>

    // Constructors of GXml-0.18.GXml.TAttribute

    constructor(config?: TAttribute.ConstructorProperties) 
    constructor(d: Document, name: string | null, value: string | null) 
    static new(d: Document, name: string | null, value: string | null): TAttribute
    _init(config?: TAttribute.ConstructorProperties): void
}

export module TCDATA {

    // Constructor properties interface

    export interface ConstructorProperties extends CDATA.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TCDATA extends CDATA {

    // Own fields of GXml-0.18.GXml.TCDATA

    parent_instance: TNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.TCDATA

    connect(sigName: "notify::attrs", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TCDATA extends TNode {

    // Own properties of GXml-0.18.GXml.TCDATA

    static name: string
    static $gtype: GObject.GType<TCDATA>

    // Constructors of GXml-0.18.GXml.TCDATA

    constructor(config?: TCDATA.ConstructorProperties) 
    constructor(d: Document, text: string | null) 
    static new(d: Document, text: string | null): TCDATA
    _init(config?: TCDATA.ConstructorProperties): void
}

export module TComment {

    // Constructor properties interface

    export interface ConstructorProperties extends Comment.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TComment extends Comment {

    // Own fields of GXml-0.18.GXml.TComment

    parent_instance: TNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.TComment

    connect(sigName: "notify::attrs", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TComment extends TNode {

    // Own properties of GXml-0.18.GXml.TComment

    static name: string
    static $gtype: GObject.GType<TComment>

    // Constructors of GXml-0.18.GXml.TComment

    constructor(config?: TComment.ConstructorProperties) 
    constructor(doc: Document, text: string | null) 
    static new(doc: Document, text: string | null): TComment
    _init(config?: TComment.ConstructorProperties): void
}

export module TDocument {

    // Constructor properties interface

    export interface ConstructorProperties extends Document.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TDocument extends Document {

    // Own fields of GXml-0.18.GXml.TDocument

    parent_instance: TNode & GObject.Object
    priv: any
    _namespaces: Gee.ArrayList
    _children: Gee.ArrayList

    // Owm methods of GXml-0.18.GXml.TDocument

    save_to(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean

    // Class property signals of GXml-0.18.GXml.TDocument

    connect(sigName: "notify::attrs", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::indent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::indent", ...args: any[]): void
    connect(sigName: "notify::ns-top", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ns-top", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ns-top", ...args: any[]): void
    connect(sigName: "notify::prefix-default-ns", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix-default-ns", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix-default-ns", ...args: any[]): void
    connect(sigName: "notify::backup", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::backup", ...args: any[]): void
    connect(sigName: "notify::root", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::file", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::file", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TDocument extends TNode {

    // Own properties of GXml-0.18.GXml.TDocument

    static name: string
    static $gtype: GObject.GType<TDocument>

    // Constructors of GXml-0.18.GXml.TDocument

    constructor(config?: TDocument.ConstructorProperties) 
    constructor() 
    static new(): TDocument
    static from_path(path: string | null): TDocument
    static from_uri(uri: string | null): TDocument
    static from_file(file: Gio.File): TDocument
    static from_stream(stream: Gio.InputStream): TDocument
    static from_string(str: string | null): TDocument
    static from_path_with_readtype_func(path: string | null, func: any): TDocument
    static from_uri_with_readtype_func(uri: string | null, func: any): TDocument
    static from_file_with_readtype_func(file: Gio.File, func: any): TDocument
    static from_stream_with_readtype_func(stream: Gio.InputStream, func: any): TDocument
    static from_string_with_readtype_func(str: string | null, func: any): TDocument
    _init(config?: TDocument.ConstructorProperties): void
    static tw_save_as(doc: Document, f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    static write_document(doc: Document, tw: libxml2.TextWriter): void
    static start_node(doc: Document, tw: libxml2.TextWriter, node: Node, root: boolean, declared_ns: Gee.ArrayList): /* declared_ns */ Gee.ArrayList
    static read_doc(doc: Document, file: Gio.File, rtfunc?: any | null): void
    static read_doc_stream(doc: Document, istream: Gio.InputStream, rtfunc?: any | null): void
    static read_node(node: Node, tr: libxml2.TextReader, rntfunc?: any | null): TDocumentReadType
}

export module TElement {

    // Constructor properties interface

    export interface ConstructorProperties extends Element.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TElement extends Element {

    // Own fields of GXml-0.18.GXml.TElement

    parent_instance: TNode & GObject.Object
    priv: any
    _attrs: Gee.HashMap
    _children: TNodeTChildrenList
    _namespaces: Gee.ArrayList

    // Class property signals of GXml-0.18.GXml.TElement

    connect(sigName: "notify::attrs", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::content", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TElement extends TNode {

    // Own properties of GXml-0.18.GXml.TElement

    static name: string
    static $gtype: GObject.GType<TElement>

    // Constructors of GXml-0.18.GXml.TElement

    constructor(config?: TElement.ConstructorProperties) 
    constructor(d: Document, name: string | null) 
    static new(d: Document, name: string | null): TElement
    _init(config?: TElement.ConstructorProperties): void
}

export module TNamespace {

    // Constructor properties interface

    export interface ConstructorProperties extends Namespace.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TNamespace extends Namespace {

    // Own fields of GXml-0.18.GXml.TNamespace

    parent_instance: TNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.TNamespace

    connect(sigName: "notify::attrs", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::uri", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::uri", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TNamespace extends TNode {

    // Own properties of GXml-0.18.GXml.TNamespace

    static name: string
    static $gtype: GObject.GType<TNamespace>

    // Constructors of GXml-0.18.GXml.TNamespace

    constructor(config?: TNamespace.ConstructorProperties) 
    constructor(d: Document, uri: string | null, prefix?: string | null) 
    static new(d: Document, uri: string | null, prefix?: string | null): TNamespace
    _init(config?: TNamespace.ConstructorProperties): void
}

export module TNode {

    // Constructor properties interface

    export interface ConstructorProperties extends Node.ConstructorProperties, GObject.Object.ConstructorProperties {

        // Own constructor properties of GXml-0.18.GXml.TNode

        value?: string | null
    }

}

export interface TNode extends Node {

    // Own properties of GXml-0.18.GXml.TNode

    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly childrenNodes: Gee.BidirList
    readonly document: Document
    readonly name: string | null
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    readonly typeNode: NodeType
    value: string | null
    readonly parent: Node

    // Own fields of GXml-0.18.GXml.TNode

    parent_instance: GObject.Object
    priv: TNodePrivate
    _name: string | null
    _value: string | null
    _doc: Document
    _parent: Node
    _node_type: NodeType

    // Owm methods of GXml-0.18.GXml.TNode

    set_namespace(uri: string | null, prefix?: string | null): boolean
    to_string(): string | null
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string | null
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string | null
    set_value(value: string | null): void
    get_parent(): Node

    // Own virtual methods of GXml-0.18.GXml.TNode

    vfunc_set_namespace(uri: string | null, prefix?: string | null): boolean
    vfunc_to_string(): string | null
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string | null
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string | null
    vfunc_set_value(value: string | null): void
    vfunc_get_parent(): Node

    // Class property signals of GXml-0.18.GXml.TNode

    connect(sigName: "notify::attrs", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TNode extends GObject.Object {

    // Own properties of GXml-0.18.GXml.TNode

    static name: string
    static $gtype: GObject.GType<TNode>

    // Constructors of GXml-0.18.GXml.TNode

    constructor(config?: TNode.ConstructorProperties) 
    _init(config?: TNode.ConstructorProperties): void
}

export module TNodeTChildrenList {

    // Constructor properties interface

    export interface ConstructorProperties extends Gee.AbstractBidirList.ConstructorProperties {
    }

}

export interface TNodeTChildrenList {

    // Conflicting properties

    read_only_view: any
    readOnlyView: any

    // Own fields of GXml-0.18.GXml.TNodeTChildrenList

    parent_instance: Gee.AbstractBidirList
    priv: TNodeTChildrenListPrivate

    // Conflicting methods

    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.BidirList
    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.BidirList

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.List
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.List

    // Overloads of get_read_only_view

    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.BidirList

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.List

    // Overloads of vfunc_get_read_only_view

    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_get_read_only_view(): Gee.Collection

    // Class property signals of GXml-0.18.GXml.TNodeTChildrenList

    connect(sigName: "notify::g-type", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-type", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-type", ...args: any[]): void
    connect(sigName: "notify::g-dup-func", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-dup-func", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-dup-func", ...args: any[]): void
    connect(sigName: "notify::g-destroy-func", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::g-destroy-func", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::g-destroy-func", ...args: any[]): void
    connect(sigName: "notify::read-only-view", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only-view", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TNodeTChildrenList extends Gee.AbstractBidirList {

    // Own properties of GXml-0.18.GXml.TNodeTChildrenList

    static name: string
    static $gtype: GObject.GType<TNodeTChildrenList>

    // Constructors of GXml-0.18.GXml.TNodeTChildrenList

    constructor(config?: TNodeTChildrenList.ConstructorProperties) 
    constructor(e: Node) 
    static new(e: Node): TNodeTChildrenList
    _init(config?: TNodeTChildrenList.ConstructorProperties): void

    // Conflicting static methods

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.List

    // Overloads of empty

    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
    static empty(g_type: GObject.GType, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify): Gee.Collection
}

export module TProcessingInstruction {

    // Constructor properties interface

    export interface ConstructorProperties extends ProcessingInstruction.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TProcessingInstruction extends ProcessingInstruction {

    // Own fields of GXml-0.18.GXml.TProcessingInstruction

    parent_instance: TNode & GObject.Object
    priv: any

    // Conflicting methods

    get_data(): string | null

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     * @returns the data if found,          or %NULL if no such data exists.
     */
    get_data(key: string | null): any | null
    set_data(value: string | null): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void
    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string | null, data: any | null): void

    // Class property signals of GXml-0.18.GXml.TProcessingInstruction

    connect(sigName: "notify::attrs", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TProcessingInstruction extends TNode {

    // Own properties of GXml-0.18.GXml.TProcessingInstruction

    static name: string
    static $gtype: GObject.GType<TProcessingInstruction>

    // Constructors of GXml-0.18.GXml.TProcessingInstruction

    constructor(config?: TProcessingInstruction.ConstructorProperties) 
    constructor(doc: Document, target: string | null, data: string | null) 
    static new(doc: Document, target: string | null, data: string | null): TProcessingInstruction
    _init(config?: TProcessingInstruction.ConstructorProperties): void
}

export module TText {

    // Constructor properties interface

    export interface ConstructorProperties extends Text.ConstructorProperties, TNode.ConstructorProperties {
    }

}

export interface TText extends Text {

    // Own fields of GXml-0.18.GXml.TText

    parent_instance: TNode & GObject.Object
    priv: any

    // Class property signals of GXml-0.18.GXml.TText

    connect(sigName: "notify::attrs", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attrs", ...args: any[]): void
    connect(sigName: "notify::children-nodes", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children-nodes", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespaces", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespaces", ...args: any[]): void
    connect(sigName: "notify::type-node", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type-node", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::str", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::str", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class TText extends TNode {

    // Own properties of GXml-0.18.GXml.TText

    static name: string
    static $gtype: GObject.GType<TText>

    // Constructors of GXml-0.18.GXml.TText

    constructor(config?: TText.ConstructorProperties) 
    constructor(d: Document, text: string | null) 
    static new(d: Document, text: string | null): TText
    _init(config?: TText.ConstructorProperties): void
}

export module XParser {

    // Constructor properties interface

    export interface ConstructorProperties extends Parser.ConstructorProperties, GObject.Object.ConstructorProperties {
    }

}

export interface XParser extends Parser {

    // Own fields of GXml-0.18.GXml.XParser

    parent_instance: GObject.Object
    priv: XParserPrivate

    // Owm methods of GXml-0.18.GXml.XParser

    read_node(node: DomNode): void
    read_child_nodes_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback<this> | null): void

    // Overloads of read_child_nodes_stream_async

    /**
     * Promisified version of {@link read_child_nodes_stream_async}
     * 
     * 
     * @param istream 
     * @param cancellable 
     * @param _callback_ 
     * @returns A Promise of the result of {@link read_child_nodes_stream_async}
     */
    read_child_nodes_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): globalThis.Promise<void>
    read_child_nodes_stream_finish(_res_: Gio.AsyncResult): void

    // Class property signals of GXml-0.18.GXml.XParser

    connect(sigName: "notify::backup", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::backup", ...args: any[]): void
    connect(sigName: "notify::indent", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::indent", ...args: any[]): void
    connect(sigName: "notify::node", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

export class XParser extends GObject.Object {

    // Own properties of GXml-0.18.GXml.XParser

    static name: string
    static $gtype: GObject.GType<XParser>

    // Constructors of GXml-0.18.GXml.XParser

    constructor(config?: XParser.ConstructorProperties) 
    constructor(node: DomNode) 
    static new(node: DomNode): XParser
    _init(config?: XParser.ConstructorProperties): void
}

export interface CssSelectorDataClass {

    // Own fields of GXml-0.18.GXml.CssSelectorDataClass

    parent_class: GObject.ObjectClass
}

export abstract class CssSelectorDataClass {

    // Own properties of GXml-0.18.GXml.CssSelectorDataClass

    static name: string
}

export interface CssSelectorDataPrivate {
}

export class CssSelectorDataPrivate {

    // Own properties of GXml-0.18.GXml.CssSelectorDataPrivate

    static name: string
}

export interface CssSelectorParserClass {

    // Own fields of GXml-0.18.GXml.CssSelectorParserClass

    parent_class: GObject.ObjectClass
}

export abstract class CssSelectorParserClass {

    // Own properties of GXml-0.18.GXml.CssSelectorParserClass

    static name: string
}

export interface CssSelectorParserPrivate {
}

export class CssSelectorParserPrivate {

    // Own properties of GXml-0.18.GXml.CssSelectorParserPrivate

    static name: string
}

export interface DomNodeFilterClass {

    // Own fields of GXml-0.18.GXml.DomNodeFilterClass

    parent_class: GObject.ObjectClass
}

export abstract class DomNodeFilterClass {

    // Own properties of GXml-0.18.GXml.DomNodeFilterClass

    static name: string
}

export interface DomNodeFilterPrivate {
}

export class DomNodeFilterPrivate {

    // Own properties of GXml-0.18.GXml.DomNodeFilterPrivate

    static name: string
}

export interface DomElementListClass {

    // Own fields of GXml-0.18.GXml.DomElementListClass

    parent_class: Gee.ArrayListClass
}

export abstract class DomElementListClass {

    // Own properties of GXml-0.18.GXml.DomElementListClass

    static name: string
}

export interface DomElementListPrivate {
}

export class DomElementListPrivate {

    // Own properties of GXml-0.18.GXml.DomElementListPrivate

    static name: string
}

export interface DomEventInitClass {

    // Own fields of GXml-0.18.GXml.DomEventInitClass

    parent_class: GObject.ObjectClass
}

export abstract class DomEventInitClass {

    // Own properties of GXml-0.18.GXml.DomEventInitClass

    static name: string
}

export interface DomEventInitPrivate {
}

export class DomEventInitPrivate {

    // Own properties of GXml-0.18.GXml.DomEventInitPrivate

    static name: string
}

export interface DomCustomEventInitClass {

    // Own fields of GXml-0.18.GXml.DomCustomEventInitClass

    parent_class: DomEventInitClass
}

export abstract class DomCustomEventInitClass {

    // Own properties of GXml-0.18.GXml.DomCustomEventInitClass

    static name: string
}

export interface DomCustomEventInitPrivate {
}

export class DomCustomEventInitPrivate {

    // Own properties of GXml-0.18.GXml.DomCustomEventInitPrivate

    static name: string
}

export interface DomTimeStampClass {

    // Own fields of GXml-0.18.GXml.DomTimeStampClass

    parent_class: GObject.ObjectClass
}

export abstract class DomTimeStampClass {

    // Own properties of GXml-0.18.GXml.DomTimeStampClass

    static name: string
}

export interface DomTimeStampPrivate {
}

export class DomTimeStampPrivate {

    // Own properties of GXml-0.18.GXml.DomTimeStampPrivate

    static name: string
}

export interface DomMutationObserverInitClass {

    // Own fields of GXml-0.18.GXml.DomMutationObserverInitClass

    parent_class: GObject.ObjectClass
}

export abstract class DomMutationObserverInitClass {

    // Own properties of GXml-0.18.GXml.DomMutationObserverInitClass

    static name: string
}

export interface DomMutationObserverInitPrivate {
}

export class DomMutationObserverInitPrivate {

    // Own properties of GXml-0.18.GXml.DomMutationObserverInitPrivate

    static name: string
}

export interface DomErrorNameClass {

    // Own fields of GXml-0.18.GXml.DomErrorNameClass

    parent_class: GObject.ObjectClass
}

export abstract class DomErrorNameClass {

    // Own properties of GXml-0.18.GXml.DomErrorNameClass

    static name: string
}

export interface DomErrorNamePrivate {
}

export class DomErrorNamePrivate {

    // Own properties of GXml-0.18.GXml.DomErrorNamePrivate

    static name: string
}

export interface ElementListClass {

    // Own fields of GXml-0.18.GXml.ElementListClass

    parent_class: Gee.ArrayListClass
}

export abstract class ElementListClass {

    // Own properties of GXml-0.18.GXml.ElementListClass

    static name: string
}

export interface ElementListPrivate {
}

export class ElementListPrivate {

    // Own properties of GXml-0.18.GXml.ElementListPrivate

    static name: string
}

export interface Enumeration {
}

export class Enumeration {

    // Own properties of GXml-0.18.GXml.Enumeration

    static name: string

    // Constructors of GXml-0.18.GXml.Enumeration

    constructor() 
    static new(): Enumeration
    static get_nick(enumeration: GObject.GType, val: number): string | null
    static get_nick_camelcase(enumeration: GObject.GType, val: number): string | null
    static get_string(enumeration: GObject.GType, val: number, use_nick: boolean, camelcase: boolean): string | null
    static parse(enumeration: GObject.GType, val: string | null): GObject.EnumValue | null
    static to_array(enumeration: GObject.GType): GObject.EnumValue[]
    static parse_integer(enumeration: GObject.GType, val: number): GObject.EnumValue | null
    static to_string_array(enumeration: GObject.GType): string[]
}

export interface GHtmlDocumentClass {

    // Own fields of GXml-0.18.GXml.GHtmlDocumentClass

    parent_class: GDocumentClass
}

export abstract class GHtmlDocumentClass {

    // Own properties of GXml-0.18.GXml.GHtmlDocumentClass

    static name: string
}

export interface GHtmlDocumentPrivate {
}

export class GHtmlDocumentPrivate {

    // Own properties of GXml-0.18.GXml.GHtmlDocumentPrivate

    static name: string
}

export interface GomAttrClass {

    // Own fields of GXml-0.18.GXml.GomAttrClass

    parent_class: GomNodeClass
}

export abstract class GomAttrClass {

    // Own properties of GXml-0.18.GXml.GomAttrClass

    static name: string
}

export interface GomAttrPrivate {
}

export class GomAttrPrivate {

    // Own properties of GXml-0.18.GXml.GomAttrPrivate

    static name: string
}

export interface BaseCollectionClass {

    // Own fields of GXml-0.18.GXml.BaseCollectionClass

    parent_class: GObject.ObjectClass
    validate_append: (self: BaseCollection, index: number, element: DomElement) => boolean
    clear: (self: BaseCollection) => void
}

export abstract class BaseCollectionClass {

    // Own properties of GXml-0.18.GXml.BaseCollectionClass

    static name: string
}

export interface BaseCollectionPrivate {
}

export class BaseCollectionPrivate {

    // Own properties of GXml-0.18.GXml.BaseCollectionPrivate

    static name: string
}

export interface GomArrayListClass {

    // Own fields of GXml-0.18.GXml.GomArrayListClass

    parent_class: BaseCollectionClass
}

export abstract class GomArrayListClass {

    // Own properties of GXml-0.18.GXml.GomArrayListClass

    static name: string
}

export interface GomArrayListPrivate {
}

export class GomArrayListPrivate {

    // Own properties of GXml-0.18.GXml.GomArrayListPrivate

    static name: string
}

export interface GomHashMapClass {

    // Own fields of GXml-0.18.GXml.GomHashMapClass

    parent_class: BaseCollectionClass
}

export abstract class GomHashMapClass {

    // Own properties of GXml-0.18.GXml.GomHashMapClass

    static name: string
}

export interface GomHashMapPrivate {
}

export class GomHashMapPrivate {

    // Own properties of GXml-0.18.GXml.GomHashMapPrivate

    static name: string
}

export interface GomHashPairedMapClass {

    // Own fields of GXml-0.18.GXml.GomHashPairedMapClass

    parent_class: BaseCollectionClass
}

export abstract class GomHashPairedMapClass {

    // Own properties of GXml-0.18.GXml.GomHashPairedMapClass

    static name: string
}

export interface GomHashPairedMapPrivate {
}

export class GomHashPairedMapPrivate {

    // Own properties of GXml-0.18.GXml.GomHashPairedMapPrivate

    static name: string
}

export interface GomHashThreeMapClass {

    // Own fields of GXml-0.18.GXml.GomHashThreeMapClass

    parent_class: BaseCollectionClass
}

export abstract class GomHashThreeMapClass {

    // Own properties of GXml-0.18.GXml.GomHashThreeMapClass

    static name: string
}

export interface GomHashThreeMapPrivate {
}

export class GomHashThreeMapPrivate {

    // Own properties of GXml-0.18.GXml.GomHashThreeMapPrivate

    static name: string
}

export interface GomDocumentClass {

    // Own fields of GXml-0.18.GXml.GomDocumentClass

    parent_class: GomNodeClass
}

export abstract class GomDocumentClass {

    // Own properties of GXml-0.18.GXml.GomDocumentClass

    static name: string
}

export interface GomDocumentPrivate {
}

export class GomDocumentPrivate {

    // Own properties of GXml-0.18.GXml.GomDocumentPrivate

    static name: string
}

export interface GomImplementationClass {

    // Own fields of GXml-0.18.GXml.GomImplementationClass

    parent_class: GObject.ObjectClass
}

export abstract class GomImplementationClass {

    // Own properties of GXml-0.18.GXml.GomImplementationClass

    static name: string
}

export interface GomImplementationPrivate {
}

export class GomImplementationPrivate {

    // Own properties of GXml-0.18.GXml.GomImplementationPrivate

    static name: string
}

export interface GomDocumentTypeClass {

    // Own fields of GXml-0.18.GXml.GomDocumentTypeClass

    parent_class: GomNodeClass
}

export abstract class GomDocumentTypeClass {

    // Own properties of GXml-0.18.GXml.GomDocumentTypeClass

    static name: string
}

export interface GomDocumentTypePrivate {
}

export class GomDocumentTypePrivate {

    // Own properties of GXml-0.18.GXml.GomDocumentTypePrivate

    static name: string
}

export interface GomDocumentFragmentClass {

    // Own fields of GXml-0.18.GXml.GomDocumentFragmentClass

    parent_class: GomNodeClass
}

export abstract class GomDocumentFragmentClass {

    // Own properties of GXml-0.18.GXml.GomDocumentFragmentClass

    static name: string
}

export interface GomDocumentFragmentPrivate {
}

export class GomDocumentFragmentPrivate {

    // Own properties of GXml-0.18.GXml.GomDocumentFragmentPrivate

    static name: string
}

export interface GomElementClass {

    // Own fields of GXml-0.18.GXml.GomElementClass

    parent_class: GomNodeClass
}

export abstract class GomElementClass {

    // Own properties of GXml-0.18.GXml.GomElementClass

    static name: string
}

export interface GomElementPrivate {
}

export class GomElementPrivate {

    // Own properties of GXml-0.18.GXml.GomElementPrivate

    static name: string
}

export interface GomElementAttributesClass {

    // Own fields of GXml-0.18.GXml.GomElementAttributesClass

    parent_class: Gee.HashMapClass
}

export abstract class GomElementAttributesClass {

    // Own properties of GXml-0.18.GXml.GomElementAttributesClass

    static name: string
}

export interface GomElementAttributesPrivate {
}

export class GomElementAttributesPrivate {

    // Own properties of GXml-0.18.GXml.GomElementAttributesPrivate

    static name: string
}

export interface GomNodeClass {

    // Own fields of GXml-0.18.GXml.GomNodeClass

    parent_class: GObject.ObjectClass
}

export abstract class GomNodeClass {

    // Own properties of GXml-0.18.GXml.GomNodeClass

    static name: string
}

export interface GomNodePrivate {
}

export class GomNodePrivate {

    // Own properties of GXml-0.18.GXml.GomNodePrivate

    static name: string
}

export interface GomNodeListClass {

    // Own fields of GXml-0.18.GXml.GomNodeListClass

    parent_class: Gee.ArrayListClass
}

export abstract class GomNodeListClass {

    // Own properties of GXml-0.18.GXml.GomNodeListClass

    static name: string
}

export interface GomNodeListPrivate {
}

export class GomNodeListPrivate {

    // Own properties of GXml-0.18.GXml.GomNodeListPrivate

    static name: string
}

export interface GomBasePropertyClass {

    // Own fields of GXml-0.18.GXml.GomBasePropertyClass

    parent_class: GObject.ObjectClass
    validate_value: (self: GomBaseProperty, val: string | null) => boolean
}

export abstract class GomBasePropertyClass {

    // Own properties of GXml-0.18.GXml.GomBasePropertyClass

    static name: string
}

export interface GomBasePropertyPrivate {
}

export class GomBasePropertyPrivate {

    // Own properties of GXml-0.18.GXml.GomBasePropertyPrivate

    static name: string
}

export interface GomStringClass {

    // Own fields of GXml-0.18.GXml.GomStringClass

    parent_class: GomBasePropertyClass
}

export abstract class GomStringClass {

    // Own properties of GXml-0.18.GXml.GomStringClass

    static name: string
}

export interface GomStringPrivate {
}

export class GomStringPrivate {

    // Own properties of GXml-0.18.GXml.GomStringPrivate

    static name: string
}

export interface GomArrayStringClass {

    // Own fields of GXml-0.18.GXml.GomArrayStringClass

    parent_class: GomBasePropertyClass
}

export abstract class GomArrayStringClass {

    // Own properties of GXml-0.18.GXml.GomArrayStringClass

    static name: string
}

export interface GomArrayStringPrivate {
}

export class GomArrayStringPrivate {

    // Own properties of GXml-0.18.GXml.GomArrayStringPrivate

    static name: string
}

export interface GomXsdArrayStringClass {

    // Own fields of GXml-0.18.GXml.GomXsdArrayStringClass

    parent_class: GomArrayStringClass
}

export abstract class GomXsdArrayStringClass {

    // Own properties of GXml-0.18.GXml.GomXsdArrayStringClass

    static name: string
}

export interface GomXsdArrayStringPrivate {
}

export class GomXsdArrayStringPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdArrayStringPrivate

    static name: string
}

export interface GomDoubleClass {

    // Own fields of GXml-0.18.GXml.GomDoubleClass

    parent_class: GomBasePropertyClass
}

export abstract class GomDoubleClass {

    // Own properties of GXml-0.18.GXml.GomDoubleClass

    static name: string
}

export interface GomDoublePrivate {
}

export class GomDoublePrivate {

    // Own properties of GXml-0.18.GXml.GomDoublePrivate

    static name: string
}

export interface GomFloatClass {

    // Own fields of GXml-0.18.GXml.GomFloatClass

    parent_class: GomDoubleClass
}

export abstract class GomFloatClass {

    // Own properties of GXml-0.18.GXml.GomFloatClass

    static name: string
}

export interface GomFloatPrivate {
}

export class GomFloatPrivate {

    // Own properties of GXml-0.18.GXml.GomFloatPrivate

    static name: string
}

export interface GomIntClass {

    // Own fields of GXml-0.18.GXml.GomIntClass

    parent_class: GomBasePropertyClass
}

export abstract class GomIntClass {

    // Own properties of GXml-0.18.GXml.GomIntClass

    static name: string
}

export interface GomIntPrivate {
}

export class GomIntPrivate {

    // Own properties of GXml-0.18.GXml.GomIntPrivate

    static name: string
}

export interface GomBooleanClass {

    // Own fields of GXml-0.18.GXml.GomBooleanClass

    parent_class: GomBasePropertyClass
}

export abstract class GomBooleanClass {

    // Own properties of GXml-0.18.GXml.GomBooleanClass

    static name: string
}

export interface GomBooleanPrivate {
}

export class GomBooleanPrivate {

    // Own properties of GXml-0.18.GXml.GomBooleanPrivate

    static name: string
}

export interface GomEnumClass {

    // Own fields of GXml-0.18.GXml.GomEnumClass

    parent_class: GomBasePropertyClass
}

export abstract class GomEnumClass {

    // Own properties of GXml-0.18.GXml.GomEnumClass

    static name: string
}

export interface GomEnumPrivate {
}

export class GomEnumPrivate {

    // Own properties of GXml-0.18.GXml.GomEnumPrivate

    static name: string
}

export interface GomDateClass {

    // Own fields of GXml-0.18.GXml.GomDateClass

    parent_class: GomBasePropertyClass
}

export abstract class GomDateClass {

    // Own properties of GXml-0.18.GXml.GomDateClass

    static name: string
}

export interface GomDatePrivate {
}

export class GomDatePrivate {

    // Own properties of GXml-0.18.GXml.GomDatePrivate

    static name: string
}

export interface GomDateTimeClass {

    // Own fields of GXml-0.18.GXml.GomDateTimeClass

    parent_class: GomBasePropertyClass
}

export abstract class GomDateTimeClass {

    // Own properties of GXml-0.18.GXml.GomDateTimeClass

    static name: string
}

export interface GomDateTimePrivate {
}

export class GomDateTimePrivate {

    // Own properties of GXml-0.18.GXml.GomDateTimePrivate

    static name: string
}

export interface GomXsdSchemaClass {

    // Own fields of GXml-0.18.GXml.GomXsdSchemaClass

    parent_class: GomElementClass
}

export abstract class GomXsdSchemaClass {

    // Own properties of GXml-0.18.GXml.GomXsdSchemaClass

    static name: string
}

export interface GomXsdSchemaPrivate {
}

export class GomXsdSchemaPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdSchemaPrivate

    static name: string
}

export interface GomXsdSimpleTypeClass {

    // Own fields of GXml-0.18.GXml.GomXsdSimpleTypeClass

    parent_class: GomElementClass
}

export abstract class GomXsdSimpleTypeClass {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleTypeClass

    static name: string
}

export interface GomXsdSimpleTypePrivate {
}

export class GomXsdSimpleTypePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleTypePrivate

    static name: string
}

export interface GomXsdTypeDefinitionClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeDefinitionClass

    parent_class: GomElementClass
}

export abstract class GomXsdTypeDefinitionClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeDefinitionClass

    static name: string
}

export interface GomXsdTypeDefinitionPrivate {
}

export class GomXsdTypeDefinitionPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeDefinitionPrivate

    static name: string
}

export interface GomXsdTypeListClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeListClass

    parent_class: GomXsdTypeDefinitionClass
}

export abstract class GomXsdTypeListClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeListClass

    static name: string
}

export interface GomXsdTypeListPrivate {
}

export class GomXsdTypeListPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeListPrivate

    static name: string
}

export interface GomXsdTypeUnionClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeUnionClass

    parent_class: GomXsdTypeDefinitionClass
}

export abstract class GomXsdTypeUnionClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeUnionClass

    static name: string
}

export interface GomXsdTypeUnionPrivate {
}

export class GomXsdTypeUnionPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeUnionPrivate

    static name: string
}

export interface GomXsdTypeRestrictionClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionClass

    parent_class: GomXsdTypeDefinitionClass
}

export abstract class GomXsdTypeRestrictionClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionClass

    static name: string
}

export interface GomXsdTypeRestrictionPrivate {
}

export class GomXsdTypeRestrictionPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionPrivate

    static name: string
}

export interface GomXsdTypeRestrictionDefClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionDefClass

    parent_class: GomElementClass
}

export abstract class GomXsdTypeRestrictionDefClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionDefClass

    static name: string
}

export interface GomXsdTypeRestrictionDefPrivate {
}

export class GomXsdTypeRestrictionDefPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionDefPrivate

    static name: string
}

export interface GomXsdTypeRestrictionMinExclusiveClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusiveClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionMinExclusiveClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusiveClass

    static name: string
}

export interface GomXsdTypeRestrictionMinExclusivePrivate {
}

export class GomXsdTypeRestrictionMinExclusivePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinExclusivePrivate

    static name: string
}

export interface GomXsdTypeRestrictionMinInclusiveClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusiveClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionMinInclusiveClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusiveClass

    static name: string
}

export interface GomXsdTypeRestrictionMinInclusivePrivate {
}

export class GomXsdTypeRestrictionMinInclusivePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinInclusivePrivate

    static name: string
}

export interface GomXsdTypeRestrictionMaxExclusiveClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusiveClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionMaxExclusiveClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusiveClass

    static name: string
}

export interface GomXsdTypeRestrictionMaxExclusivePrivate {
}

export class GomXsdTypeRestrictionMaxExclusivePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxExclusivePrivate

    static name: string
}

export interface GomXsdTypeRestrictionMaxInclusiveClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusiveClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionMaxInclusiveClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusiveClass

    static name: string
}

export interface GomXsdTypeRestrictionMaxInclusivePrivate {
}

export class GomXsdTypeRestrictionMaxInclusivePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxInclusivePrivate

    static name: string
}

export interface GomXsdTypeRestrictionTotalDigitsClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigitsClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionTotalDigitsClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigitsClass

    static name: string
}

export interface GomXsdTypeRestrictionTotalDigitsPrivate {
}

export class GomXsdTypeRestrictionTotalDigitsPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionTotalDigitsPrivate

    static name: string
}

export interface GomXsdTypeRestrictionFractionDigitsClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigitsClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionFractionDigitsClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigitsClass

    static name: string
}

export interface GomXsdTypeRestrictionFractionDigitsPrivate {
}

export class GomXsdTypeRestrictionFractionDigitsPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionFractionDigitsPrivate

    static name: string
}

export interface GomXsdTypeRestrictionLengthClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionLengthClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionLengthClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionLengthClass

    static name: string
}

export interface GomXsdTypeRestrictionLengthPrivate {
}

export class GomXsdTypeRestrictionLengthPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionLengthPrivate

    static name: string
}

export interface GomXsdTypeRestrictionMinLengthClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMinLengthClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionMinLengthClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinLengthClass

    static name: string
}

export interface GomXsdTypeRestrictionMinLengthPrivate {
}

export class GomXsdTypeRestrictionMinLengthPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMinLengthPrivate

    static name: string
}

export interface GomXsdTypeRestrictionMaxLengthClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLengthClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionMaxLengthClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLengthClass

    static name: string
}

export interface GomXsdTypeRestrictionMaxLengthPrivate {
}

export class GomXsdTypeRestrictionMaxLengthPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionMaxLengthPrivate

    static name: string
}

export interface GomXsdTypeRestrictionEnumerationClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionEnumerationClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionEnumerationClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionEnumerationClass

    static name: string
}

export interface GomXsdTypeRestrictionEnumerationPrivate {
}

export class GomXsdTypeRestrictionEnumerationPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionEnumerationPrivate

    static name: string
}

export interface GomXsdTypeRestrictionWhiteSpaceClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionWhiteSpaceClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceClass

    static name: string
}

export interface GomXsdTypeRestrictionWhiteSpacePrivate {
}

export class GomXsdTypeRestrictionWhiteSpacePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpacePrivate

    static name: string
}

export interface GomXsdTypeRestrictionWhiteSpaceFixedClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixedClass

    parent_class: GomBooleanClass
}

export abstract class GomXsdTypeRestrictionWhiteSpaceFixedClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixedClass

    static name: string
}

export interface GomXsdTypeRestrictionWhiteSpaceFixedPrivate {
}

export class GomXsdTypeRestrictionWhiteSpaceFixedPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionWhiteSpaceFixedPrivate

    static name: string
}

export interface GomXsdTypeRestrictionPatternClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionPatternClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionPatternClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionPatternClass

    static name: string
}

export interface GomXsdTypeRestrictionPatternPrivate {
}

export class GomXsdTypeRestrictionPatternPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionPatternPrivate

    static name: string
}

export interface GomXsdTypeRestrictionAssertionClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionAssertionClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionAssertionClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionAssertionClass

    static name: string
}

export interface GomXsdTypeRestrictionAssertionPrivate {
}

export class GomXsdTypeRestrictionAssertionPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionAssertionPrivate

    static name: string
}

export interface GomXsdTypeRestrictionExplicitTimezoneClass {

    // Own fields of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezoneClass

    parent_class: GomXsdTypeRestrictionDefClass
}

export abstract class GomXsdTypeRestrictionExplicitTimezoneClass {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezoneClass

    static name: string
}

export interface GomXsdTypeRestrictionExplicitTimezonePrivate {
}

export class GomXsdTypeRestrictionExplicitTimezonePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdTypeRestrictionExplicitTimezonePrivate

    static name: string
}

export interface GomXsdComplexTypeClass {

    // Own fields of GXml-0.18.GXml.GomXsdComplexTypeClass

    parent_class: GomXsdBaseTypeClass
}

export abstract class GomXsdComplexTypeClass {

    // Own properties of GXml-0.18.GXml.GomXsdComplexTypeClass

    static name: string
}

export interface GomXsdComplexTypePrivate {
}

export class GomXsdComplexTypePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdComplexTypePrivate

    static name: string
}

export interface GomXsdExtensionClass {

    // Own fields of GXml-0.18.GXml.GomXsdExtensionClass

    parent_class: GomElementClass
}

export abstract class GomXsdExtensionClass {

    // Own properties of GXml-0.18.GXml.GomXsdExtensionClass

    static name: string
}

export interface GomXsdExtensionPrivate {
}

export class GomXsdExtensionPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdExtensionPrivate

    static name: string
}

export interface GomXsdElementClass {

    // Own fields of GXml-0.18.GXml.GomXsdElementClass

    parent_class: GomElementClass
}

export abstract class GomXsdElementClass {

    // Own properties of GXml-0.18.GXml.GomXsdElementClass

    static name: string
}

export interface GomXsdElementPrivate {
}

export class GomXsdElementPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdElementPrivate

    static name: string
}

export interface GomXsdAnnotationClass {

    // Own fields of GXml-0.18.GXml.GomXsdAnnotationClass

    parent_class: GomElementClass
}

export abstract class GomXsdAnnotationClass {

    // Own properties of GXml-0.18.GXml.GomXsdAnnotationClass

    static name: string
}

export interface GomXsdAnnotationPrivate {
}

export class GomXsdAnnotationPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdAnnotationPrivate

    static name: string
}

export interface GomXsdBaseTypeClass {

    // Own fields of GXml-0.18.GXml.GomXsdBaseTypeClass

    parent_class: GomElementClass
}

export abstract class GomXsdBaseTypeClass {

    // Own properties of GXml-0.18.GXml.GomXsdBaseTypeClass

    static name: string
}

export interface GomXsdBaseTypePrivate {
}

export class GomXsdBaseTypePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdBaseTypePrivate

    static name: string
}

export interface GomXsdBaseContentClass {

    // Own fields of GXml-0.18.GXml.GomXsdBaseContentClass

    parent_class: GomElementClass
}

export abstract class GomXsdBaseContentClass {

    // Own properties of GXml-0.18.GXml.GomXsdBaseContentClass

    static name: string
}

export interface GomXsdBaseContentPrivate {
}

export class GomXsdBaseContentPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdBaseContentPrivate

    static name: string
}

export interface GomXsdSimpleContentClass {

    // Own fields of GXml-0.18.GXml.GomXsdSimpleContentClass

    parent_class: GomXsdBaseContentClass
}

export abstract class GomXsdSimpleContentClass {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleContentClass

    static name: string
}

export interface GomXsdSimpleContentPrivate {
}

export class GomXsdSimpleContentPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdSimpleContentPrivate

    static name: string
}

export interface GomXsdComplexContentClass {

    // Own fields of GXml-0.18.GXml.GomXsdComplexContentClass

    parent_class: GomXsdBaseContentClass
}

export abstract class GomXsdComplexContentClass {

    // Own properties of GXml-0.18.GXml.GomXsdComplexContentClass

    static name: string
}

export interface GomXsdComplexContentPrivate {
}

export class GomXsdComplexContentPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdComplexContentPrivate

    static name: string
}

export interface GomXsdOpenContentClass {

    // Own fields of GXml-0.18.GXml.GomXsdOpenContentClass

    parent_class: GomXsdBaseContentClass
}

export abstract class GomXsdOpenContentClass {

    // Own properties of GXml-0.18.GXml.GomXsdOpenContentClass

    static name: string
}

export interface GomXsdOpenContentPrivate {
}

export class GomXsdOpenContentPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdOpenContentPrivate

    static name: string
}

export interface GomXsdBaseAttributeClass {

    // Own fields of GXml-0.18.GXml.GomXsdBaseAttributeClass

    parent_class: GomElementClass
}

export abstract class GomXsdBaseAttributeClass {

    // Own properties of GXml-0.18.GXml.GomXsdBaseAttributeClass

    static name: string
}

export interface GomXsdBaseAttributePrivate {
}

export class GomXsdBaseAttributePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdBaseAttributePrivate

    static name: string
}

export interface GomXsdAttributeClass {

    // Own fields of GXml-0.18.GXml.GomXsdAttributeClass

    parent_class: GomXsdBaseAttributeClass
}

export abstract class GomXsdAttributeClass {

    // Own properties of GXml-0.18.GXml.GomXsdAttributeClass

    static name: string
}

export interface GomXsdAttributePrivate {
}

export class GomXsdAttributePrivate {

    // Own properties of GXml-0.18.GXml.GomXsdAttributePrivate

    static name: string
}

export interface GomXsdAttributeGroupClass {

    // Own fields of GXml-0.18.GXml.GomXsdAttributeGroupClass

    parent_class: GomXsdBaseAttributeClass
}

export abstract class GomXsdAttributeGroupClass {

    // Own properties of GXml-0.18.GXml.GomXsdAttributeGroupClass

    static name: string
}

export interface GomXsdAttributeGroupPrivate {
}

export class GomXsdAttributeGroupPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdAttributeGroupPrivate

    static name: string
}

export interface GomXsdListClass {

    // Own fields of GXml-0.18.GXml.GomXsdListClass

    parent_class: GomArrayListClass
}

export abstract class GomXsdListClass {

    // Own properties of GXml-0.18.GXml.GomXsdListClass

    static name: string
}

export interface GomXsdListPrivate {
}

export class GomXsdListPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdListPrivate

    static name: string
}

export interface GomXsdListElementsClass {

    // Own fields of GXml-0.18.GXml.GomXsdListElementsClass

    parent_class: GomXsdListClass
}

export abstract class GomXsdListElementsClass {

    // Own properties of GXml-0.18.GXml.GomXsdListElementsClass

    static name: string
}

export interface GomXsdListElementsPrivate {
}

export class GomXsdListElementsPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdListElementsPrivate

    static name: string
}

export interface GomXsdListSimpleTypesClass {

    // Own fields of GXml-0.18.GXml.GomXsdListSimpleTypesClass

    parent_class: GomXsdListClass
}

export abstract class GomXsdListSimpleTypesClass {

    // Own properties of GXml-0.18.GXml.GomXsdListSimpleTypesClass

    static name: string
}

export interface GomXsdListSimpleTypesPrivate {
}

export class GomXsdListSimpleTypesPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdListSimpleTypesPrivate

    static name: string
}

export interface GomXsdListComplexTypesClass {

    // Own fields of GXml-0.18.GXml.GomXsdListComplexTypesClass

    parent_class: GomXsdListClass
}

export abstract class GomXsdListComplexTypesClass {

    // Own properties of GXml-0.18.GXml.GomXsdListComplexTypesClass

    static name: string
}

export interface GomXsdListComplexTypesPrivate {
}

export class GomXsdListComplexTypesPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdListComplexTypesPrivate

    static name: string
}

export interface GomXsdListTypeRestrictionEnumerationsClass {

    // Own fields of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerationsClass

    parent_class: GomXsdListClass
}

export abstract class GomXsdListTypeRestrictionEnumerationsClass {

    // Own properties of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerationsClass

    static name: string
}

export interface GomXsdListTypeRestrictionEnumerationsPrivate {
}

export class GomXsdListTypeRestrictionEnumerationsPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdListTypeRestrictionEnumerationsPrivate

    static name: string
}

export interface GomXsdListTypeRestrictionWhiteSpacesClass {

    // Own fields of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpacesClass

    parent_class: GomXsdListClass
}

export abstract class GomXsdListTypeRestrictionWhiteSpacesClass {

    // Own properties of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpacesClass

    static name: string
}

export interface GomXsdListTypeRestrictionWhiteSpacesPrivate {
}

export class GomXsdListTypeRestrictionWhiteSpacesPrivate {

    // Own properties of GXml-0.18.GXml.GomXsdListTypeRestrictionWhiteSpacesPrivate

    static name: string
}

export interface GomCharacterDataClass {

    // Own fields of GXml-0.18.GXml.GomCharacterDataClass

    parent_class: GomNodeClass
}

export abstract class GomCharacterDataClass {

    // Own properties of GXml-0.18.GXml.GomCharacterDataClass

    static name: string
}

export interface GomCharacterDataPrivate {
}

export class GomCharacterDataPrivate {

    // Own properties of GXml-0.18.GXml.GomCharacterDataPrivate

    static name: string
}

export interface GomTextClass {

    // Own fields of GXml-0.18.GXml.GomTextClass

    parent_class: GomCharacterDataClass
}

export abstract class GomTextClass {

    // Own properties of GXml-0.18.GXml.GomTextClass

    static name: string
}

export interface GomTextPrivate {
}

export class GomTextPrivate {

    // Own properties of GXml-0.18.GXml.GomTextPrivate

    static name: string
}

export interface GomProcessingInstructionClass {

    // Own fields of GXml-0.18.GXml.GomProcessingInstructionClass

    parent_class: GomCharacterDataClass
}

export abstract class GomProcessingInstructionClass {

    // Own properties of GXml-0.18.GXml.GomProcessingInstructionClass

    static name: string
}

export interface GomProcessingInstructionPrivate {
}

export class GomProcessingInstructionPrivate {

    // Own properties of GXml-0.18.GXml.GomProcessingInstructionPrivate

    static name: string
}

export interface GomCommentClass {

    // Own fields of GXml-0.18.GXml.GomCommentClass

    parent_class: GomCharacterDataClass
}

export abstract class GomCommentClass {

    // Own properties of GXml-0.18.GXml.GomCommentClass

    static name: string
}

export interface GomCommentPrivate {
}

export class GomCommentPrivate {

    // Own properties of GXml-0.18.GXml.GomCommentPrivate

    static name: string
}

export interface GAttributeClass {

    // Own fields of GXml-0.18.GXml.GAttributeClass

    parent_class: GNodeClass
}

export abstract class GAttributeClass {

    // Own properties of GXml-0.18.GXml.GAttributeClass

    static name: string
}

export interface GAttributePrivate {
}

export class GAttributePrivate {

    // Own properties of GXml-0.18.GXml.GAttributePrivate

    static name: string
}

export interface GCDATAClass {

    // Own fields of GXml-0.18.GXml.GCDATAClass

    parent_class: GNodeClass
}

export abstract class GCDATAClass {

    // Own properties of GXml-0.18.GXml.GCDATAClass

    static name: string
}

export interface GCDATAPrivate {
}

export class GCDATAPrivate {

    // Own properties of GXml-0.18.GXml.GCDATAPrivate

    static name: string
}

export interface GCharacterDataClass {

    // Own fields of GXml-0.18.GXml.GCharacterDataClass

    parent_class: GNonDocumentChildNodeClass
}

export abstract class GCharacterDataClass {

    // Own properties of GXml-0.18.GXml.GCharacterDataClass

    static name: string
}

export interface GCharacterDataPrivate {
}

export class GCharacterDataPrivate {

    // Own properties of GXml-0.18.GXml.GCharacterDataPrivate

    static name: string
}

export interface GChildNodeClass {

    // Own fields of GXml-0.18.GXml.GChildNodeClass

    parent_class: GNodeClass
}

export abstract class GChildNodeClass {

    // Own properties of GXml-0.18.GXml.GChildNodeClass

    static name: string
}

export interface GChildNodePrivate {
}

export class GChildNodePrivate {

    // Own properties of GXml-0.18.GXml.GChildNodePrivate

    static name: string
}

export interface GNonDocumentChildNodeClass {

    // Own fields of GXml-0.18.GXml.GNonDocumentChildNodeClass

    parent_class: GChildNodeClass
}

export abstract class GNonDocumentChildNodeClass {

    // Own properties of GXml-0.18.GXml.GNonDocumentChildNodeClass

    static name: string
}

export interface GNonDocumentChildNodePrivate {
}

export class GNonDocumentChildNodePrivate {

    // Own properties of GXml-0.18.GXml.GNonDocumentChildNodePrivate

    static name: string
}

export interface GCommentClass {

    // Own fields of GXml-0.18.GXml.GCommentClass

    parent_class: GCharacterDataClass
}

export abstract class GCommentClass {

    // Own properties of GXml-0.18.GXml.GCommentClass

    static name: string
}

export interface GCommentPrivate {
}

export class GCommentPrivate {

    // Own properties of GXml-0.18.GXml.GCommentPrivate

    static name: string
}

export interface GDocumentClass {

    // Own fields of GXml-0.18.GXml.GDocumentClass

    parent_class: GNodeClass
    save: (self: GDocument, cancellable?: Gio.Cancellable | null) => boolean
    save_as: (self: GDocument, f: Gio.File, cancellable?: Gio.Cancellable | null) => boolean
}

export abstract class GDocumentClass {

    // Own properties of GXml-0.18.GXml.GDocumentClass

    static name: string
}

export interface GDocumentPrivate {
}

export class GDocumentPrivate {

    // Own properties of GXml-0.18.GXml.GDocumentPrivate

    static name: string
}

export interface GImplementationClass {

    // Own fields of GXml-0.18.GXml.GImplementationClass

    parent_class: GObject.ObjectClass
}

export abstract class GImplementationClass {

    // Own properties of GXml-0.18.GXml.GImplementationClass

    static name: string
}

export interface GImplementationPrivate {
}

export class GImplementationPrivate {

    // Own properties of GXml-0.18.GXml.GImplementationPrivate

    static name: string
}

export interface GDocumentTypeClass {

    // Own fields of GXml-0.18.GXml.GDocumentTypeClass

    parent_class: GChildNodeClass
}

export abstract class GDocumentTypeClass {

    // Own properties of GXml-0.18.GXml.GDocumentTypeClass

    static name: string
}

export interface GDocumentTypePrivate {
}

export class GDocumentTypePrivate {

    // Own properties of GXml-0.18.GXml.GDocumentTypePrivate

    static name: string
}

export interface GDocumentFragmentClass {

    // Own fields of GXml-0.18.GXml.GDocumentFragmentClass

    parent_class: GDocumentClass
}

export abstract class GDocumentFragmentClass {

    // Own properties of GXml-0.18.GXml.GDocumentFragmentClass

    static name: string
}

export interface GDocumentFragmentPrivate {
}

export class GDocumentFragmentPrivate {

    // Own properties of GXml-0.18.GXml.GDocumentFragmentPrivate

    static name: string
}

export interface GDomNodeIteratorClass {

    // Own fields of GXml-0.18.GXml.GDomNodeIteratorClass

    parent_class: GObject.ObjectClass
}

export abstract class GDomNodeIteratorClass {

    // Own properties of GXml-0.18.GXml.GDomNodeIteratorClass

    static name: string
}

export interface GDomNodeIteratorPrivate {
}

export class GDomNodeIteratorPrivate {

    // Own properties of GXml-0.18.GXml.GDomNodeIteratorPrivate

    static name: string
}

export interface GDomTreeWalkerClass {

    // Own fields of GXml-0.18.GXml.GDomTreeWalkerClass

    parent_class: GObject.ObjectClass
}

export abstract class GDomTreeWalkerClass {

    // Own properties of GXml-0.18.GXml.GDomTreeWalkerClass

    static name: string
}

export interface GDomTreeWalkerPrivate {
}

export class GDomTreeWalkerPrivate {

    // Own properties of GXml-0.18.GXml.GDomTreeWalkerPrivate

    static name: string
}

export interface GDomTokenListClass {

    // Own fields of GXml-0.18.GXml.GDomTokenListClass

    parent_class: Gee.ArrayListClass
}

export abstract class GDomTokenListClass {

    // Own properties of GXml-0.18.GXml.GDomTokenListClass

    static name: string
}

export interface GDomTokenListPrivate {
}

export class GDomTokenListPrivate {

    // Own properties of GXml-0.18.GXml.GDomTokenListPrivate

    static name: string
}

export interface GDomSettableTokenListClass {

    // Own fields of GXml-0.18.GXml.GDomSettableTokenListClass

    parent_class: GDomTokenListClass
}

export abstract class GDomSettableTokenListClass {

    // Own properties of GXml-0.18.GXml.GDomSettableTokenListClass

    static name: string
}

export interface GDomSettableTokenListPrivate {
}

export class GDomSettableTokenListPrivate {

    // Own properties of GXml-0.18.GXml.GDomSettableTokenListPrivate

    static name: string
}

export interface GDomHTMLCollectionClass {

    // Own fields of GXml-0.18.GXml.GDomHTMLCollectionClass

    parent_class: Gee.ArrayListClass
}

export abstract class GDomHTMLCollectionClass {

    // Own properties of GXml-0.18.GXml.GDomHTMLCollectionClass

    static name: string
}

export interface GDomHTMLCollectionPrivate {
}

export class GDomHTMLCollectionPrivate {

    // Own properties of GXml-0.18.GXml.GDomHTMLCollectionPrivate

    static name: string
}

export interface GDomEventClass {

    // Own fields of GXml-0.18.GXml.GDomEventClass

    parent_class: GObject.ObjectClass
}

export abstract class GDomEventClass {

    // Own properties of GXml-0.18.GXml.GDomEventClass

    static name: string
}

export interface GDomEventPrivate {
}

export class GDomEventPrivate {

    // Own properties of GXml-0.18.GXml.GDomEventPrivate

    static name: string
}

export interface GDomCustomEventClass {

    // Own fields of GXml-0.18.GXml.GDomCustomEventClass

    parent_class: GDomEventClass
}

export abstract class GDomCustomEventClass {

    // Own properties of GXml-0.18.GXml.GDomCustomEventClass

    static name: string
}

export interface GDomCustomEventPrivate {
}

export class GDomCustomEventPrivate {

    // Own properties of GXml-0.18.GXml.GDomCustomEventPrivate

    static name: string
}

export interface GDomRangeClass {

    // Own fields of GXml-0.18.GXml.GDomRangeClass

    parent_class: GObject.ObjectClass
}

export abstract class GDomRangeClass {

    // Own properties of GXml-0.18.GXml.GDomRangeClass

    static name: string
}

export interface GDomRangePrivate {
}

export class GDomRangePrivate {

    // Own properties of GXml-0.18.GXml.GDomRangePrivate

    static name: string
}

export interface GElementClass {

    // Own fields of GXml-0.18.GXml.GElementClass

    parent_class: GNonDocumentChildNodeClass
}

export abstract class GElementClass {

    // Own properties of GXml-0.18.GXml.GElementClass

    static name: string
}

export interface GElementPrivate {
}

export class GElementPrivate {

    // Own properties of GXml-0.18.GXml.GElementPrivate

    static name: string
}

export interface GHashMapAttrClass {

    // Own fields of GXml-0.18.GXml.GHashMapAttrClass

    parent_class: Gee.AbstractMapClass
}

export abstract class GHashMapAttrClass {

    // Own properties of GXml-0.18.GXml.GHashMapAttrClass

    static name: string
}

export interface GHashMapAttrPrivate {
}

export class GHashMapAttrPrivate {

    // Own properties of GXml-0.18.GXml.GHashMapAttrPrivate

    static name: string
}

export interface GHashMapAttrEntryClass {

    // Own fields of GXml-0.18.GXml.GHashMapAttrEntryClass

    parent_class: Gee.MapEntryClass
}

export abstract class GHashMapAttrEntryClass {

    // Own properties of GXml-0.18.GXml.GHashMapAttrEntryClass

    static name: string
}

export interface GHashMapAttrEntryPrivate {
}

export class GHashMapAttrEntryPrivate {

    // Own properties of GXml-0.18.GXml.GHashMapAttrEntryPrivate

    static name: string
}

export interface GHashMapAttrIteratorClass {

    // Own fields of GXml-0.18.GXml.GHashMapAttrIteratorClass

    parent_class: GObject.ObjectClass
}

export abstract class GHashMapAttrIteratorClass {

    // Own properties of GXml-0.18.GXml.GHashMapAttrIteratorClass

    static name: string
}

export interface GHashMapAttrIteratorPrivate {
}

export class GHashMapAttrIteratorPrivate {

    // Own properties of GXml-0.18.GXml.GHashMapAttrIteratorPrivate

    static name: string
}

export interface GListChildrenClass {

    // Own fields of GXml-0.18.GXml.GListChildrenClass

    parent_class: Gee.AbstractBidirListClass
}

export abstract class GListChildrenClass {

    // Own properties of GXml-0.18.GXml.GListChildrenClass

    static name: string
}

export interface GListChildrenPrivate {
}

export class GListChildrenPrivate {

    // Own properties of GXml-0.18.GXml.GListChildrenPrivate

    static name: string
}

export interface GListChildrenIteratorClass {

    // Own fields of GXml-0.18.GXml.GListChildrenIteratorClass

    parent_class: GObject.ObjectClass
}

export abstract class GListChildrenIteratorClass {

    // Own properties of GXml-0.18.GXml.GListChildrenIteratorClass

    static name: string
}

export interface GListChildrenIteratorPrivate {
}

export class GListChildrenIteratorPrivate {

    // Own properties of GXml-0.18.GXml.GListChildrenIteratorPrivate

    static name: string
}

export interface GListNamespacesClass {

    // Own fields of GXml-0.18.GXml.GListNamespacesClass

    parent_class: Gee.AbstractListClass
}

export abstract class GListNamespacesClass {

    // Own properties of GXml-0.18.GXml.GListNamespacesClass

    static name: string
}

export interface GListNamespacesPrivate {
}

export class GListNamespacesPrivate {

    // Own properties of GXml-0.18.GXml.GListNamespacesPrivate

    static name: string
}

export interface GListNamespacesIteratorClass {

    // Own fields of GXml-0.18.GXml.GListNamespacesIteratorClass

    parent_class: GObject.ObjectClass
}

export abstract class GListNamespacesIteratorClass {

    // Own properties of GXml-0.18.GXml.GListNamespacesIteratorClass

    static name: string
}

export interface GListNamespacesIteratorPrivate {
}

export class GListNamespacesIteratorPrivate {

    // Own properties of GXml-0.18.GXml.GListNamespacesIteratorPrivate

    static name: string
}

export interface GNamespaceClass {

    // Own fields of GXml-0.18.GXml.GNamespaceClass

    parent_class: GObject.ObjectClass
}

export abstract class GNamespaceClass {

    // Own properties of GXml-0.18.GXml.GNamespaceClass

    static name: string
}

export interface GNamespacePrivate {
}

export class GNamespacePrivate {

    // Own properties of GXml-0.18.GXml.GNamespacePrivate

    static name: string
}

export interface GNodeClass {

    // Own fields of GXml-0.18.GXml.GNodeClass

    parent_class: GObject.ObjectClass
    set_namespace: (self: GNode, uri: string | null, prefix?: string | null) => boolean
    to_string: (self: GNode) => string | null
}

export abstract class GNodeClass {

    // Own properties of GXml-0.18.GXml.GNodeClass

    static name: string
}

export interface GNodePrivate {
}

export class GNodePrivate {

    // Own properties of GXml-0.18.GXml.GNodePrivate

    static name: string
}

export interface GProcessingInstructionClass {

    // Own fields of GXml-0.18.GXml.GProcessingInstructionClass

    parent_class: GCharacterDataClass
}

export abstract class GProcessingInstructionClass {

    // Own properties of GXml-0.18.GXml.GProcessingInstructionClass

    static name: string
}

export interface GProcessingInstructionPrivate {
}

export class GProcessingInstructionPrivate {

    // Own properties of GXml-0.18.GXml.GProcessingInstructionPrivate

    static name: string
}

export interface GTextClass {

    // Own fields of GXml-0.18.GXml.GTextClass

    parent_class: GCharacterDataClass
}

export abstract class GTextClass {

    // Own properties of GXml-0.18.GXml.GTextClass

    static name: string
}

export interface GTextPrivate {
}

export class GTextPrivate {

    // Own properties of GXml-0.18.GXml.GTextPrivate

    static name: string
}

export interface GXPathObjectClass {

    // Own fields of GXml-0.18.GXml.GXPathObjectClass

    parent_class: GObject.ObjectClass
}

export abstract class GXPathObjectClass {

    // Own properties of GXml-0.18.GXml.GXPathObjectClass

    static name: string
}

export interface GXPathObjectPrivate {
}

export class GXPathObjectPrivate {

    // Own properties of GXml-0.18.GXml.GXPathObjectPrivate

    static name: string
}

export interface NodeListClass {

    // Own fields of GXml-0.18.GXml.NodeListClass

    parent_class: Gee.ArrayListClass
}

export abstract class NodeListClass {

    // Own properties of GXml-0.18.GXml.NodeListClass

    static name: string
}

export interface NodeListPrivate {
}

export class NodeListPrivate {

    // Own properties of GXml-0.18.GXml.NodeListPrivate

    static name: string
}

export interface SerializableBoolClass {

    // Own fields of GXml-0.18.GXml.SerializableBoolClass

    parent_class: GObject.ObjectClass
}

export abstract class SerializableBoolClass {

    // Own properties of GXml-0.18.GXml.SerializableBoolClass

    static name: string
}

export interface SerializableBoolPrivate {
}

export class SerializableBoolPrivate {

    // Own properties of GXml-0.18.GXml.SerializableBoolPrivate

    static name: string
}

export interface SerializableContainerClass {

    // Own fields of GXml-0.18.GXml.SerializableContainerClass

    parent_class: SerializableObjectModelClass
    init_containers: (self: SerializableContainer) => void
}

export abstract class SerializableContainerClass {

    // Own properties of GXml-0.18.GXml.SerializableContainerClass

    static name: string
}

export interface SerializableContainerPrivate {
}

export class SerializableContainerPrivate {

    // Own properties of GXml-0.18.GXml.SerializableContainerPrivate

    static name: string
}

export interface SerializableDoubleClass {

    // Own fields of GXml-0.18.GXml.SerializableDoubleClass

    parent_class: GObject.ObjectClass
}

export abstract class SerializableDoubleClass {

    // Own properties of GXml-0.18.GXml.SerializableDoubleClass

    static name: string
}

export interface SerializableDoublePrivate {
}

export class SerializableDoublePrivate {

    // Own properties of GXml-0.18.GXml.SerializableDoublePrivate

    static name: string
}

export interface SerializableEnumClass {

    // Own fields of GXml-0.18.GXml.SerializableEnumClass

    parent_class: GObject.ObjectClass
}

export abstract class SerializableEnumClass {

    // Own properties of GXml-0.18.GXml.SerializableEnumClass

    static name: string
}

export interface SerializableEnumPrivate {
}

export class SerializableEnumPrivate {

    // Own properties of GXml-0.18.GXml.SerializableEnumPrivate

    static name: string
}

export interface SerializableFloatClass {

    // Own fields of GXml-0.18.GXml.SerializableFloatClass

    parent_class: SerializableDoubleClass
}

export abstract class SerializableFloatClass {

    // Own properties of GXml-0.18.GXml.SerializableFloatClass

    static name: string
}

export interface SerializableFloatPrivate {
}

export class SerializableFloatPrivate {

    // Own properties of GXml-0.18.GXml.SerializableFloatPrivate

    static name: string
}

export interface SerializableArrayListClass {

    // Own fields of GXml-0.18.GXml.SerializableArrayListClass

    parent_class: Gee.ArrayListClass
    deserialize_proceed: (self: SerializableArrayList) => boolean
    deserialized: (self: SerializableArrayList) => boolean
    deserialize_node: (self: SerializableArrayList, node: Node) => boolean
    deserialize_children: (self: SerializableArrayList) => boolean
    set_default_namespace: (self: SerializableArrayList, node: Node) => boolean
    serialize_use_xml_node_value: (self: SerializableArrayList) => boolean
    property_use_nick: (self: SerializableArrayList) => boolean
    node_name: (self: SerializableArrayList) => string | null
    find_property_spec: (self: SerializableArrayList, property_name: string | null) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableArrayList) => GObject.ParamSpec[]
    serialize: (self: SerializableArrayList, node: Node) => Node | null
    serialize_property: (self: SerializableArrayList, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableArrayList, node: Node) => boolean
    deserialize_property: (self: SerializableArrayList, property_node: Node) => boolean
}

export abstract class SerializableArrayListClass {

    // Own properties of GXml-0.18.GXml.SerializableArrayListClass

    static name: string
}

export interface SerializableArrayListPrivate {
}

export class SerializableArrayListPrivate {

    // Own properties of GXml-0.18.GXml.SerializableArrayListPrivate

    static name: string
}

export interface SerializableDualKeyMapClass {

    // Own fields of GXml-0.18.GXml.SerializableDualKeyMapClass

    parent_class: GObject.ObjectClass
    deserialize_proceed: (self: SerializableDualKeyMap) => boolean
    deserialized: (self: SerializableDualKeyMap) => boolean
    deserialize_node: (self: SerializableDualKeyMap, node: Node) => boolean
    deserialize_children: (self: SerializableDualKeyMap) => boolean
    set_default_namespace: (self: SerializableDualKeyMap, node: Node) => boolean
    get_enable_unknown_serializable_property: (self: SerializableDualKeyMap) => boolean
    serialize_use_xml_node_value: (self: SerializableDualKeyMap) => boolean
    property_use_nick: (self: SerializableDualKeyMap) => boolean
    node_name: (self: SerializableDualKeyMap) => string | null
    find_property_spec: (self: SerializableDualKeyMap, property_name: string | null) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableDualKeyMap) => GObject.ParamSpec[]
    serialize: (self: SerializableDualKeyMap, node: Node) => Node | null
    serialize_property: (self: SerializableDualKeyMap, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableDualKeyMap, node: Node) => boolean
    deserialize_property: (self: SerializableDualKeyMap, property_node: Node) => boolean
}

export abstract class SerializableDualKeyMapClass {

    // Own properties of GXml-0.18.GXml.SerializableDualKeyMapClass

    static name: string
}

export interface SerializableDualKeyMapPrivate {
}

export class SerializableDualKeyMapPrivate {

    // Own properties of GXml-0.18.GXml.SerializableDualKeyMapPrivate

    static name: string
}

export interface SerializableHashMapClass {

    // Own fields of GXml-0.18.GXml.SerializableHashMapClass

    parent_class: Gee.HashMapClass
    deserialize_proceed: (self: SerializableHashMap) => boolean
    deserialized: (self: SerializableHashMap) => boolean
    deserialize_node: (self: SerializableHashMap, node: Node) => boolean
    deserialize_children: (self: SerializableHashMap) => boolean
    set_default_namespace: (self: SerializableHashMap, node: Node) => boolean
    get_enable_unknown_serializable_property: (self: SerializableHashMap) => boolean
    serialize_use_xml_node_value: (self: SerializableHashMap) => boolean
    property_use_nick: (self: SerializableHashMap) => boolean
    node_name: (self: SerializableHashMap) => string | null
    find_property_spec: (self: SerializableHashMap, property_name: string | null) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableHashMap) => GObject.ParamSpec[]
    serialize: (self: SerializableHashMap, node: Node) => Node | null
    serialize_property: (self: SerializableHashMap, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableHashMap, node: Node) => boolean
    deserialize_property: (self: SerializableHashMap, property_node: Node) => boolean
}

export abstract class SerializableHashMapClass {

    // Own properties of GXml-0.18.GXml.SerializableHashMapClass

    static name: string
}

export interface SerializableHashMapPrivate {
}

export class SerializableHashMapPrivate {

    // Own properties of GXml-0.18.GXml.SerializableHashMapPrivate

    static name: string
}

export interface SerializableTreeMapClass {

    // Own fields of GXml-0.18.GXml.SerializableTreeMapClass

    parent_class: Gee.TreeMapClass
    deserialize_proceed: (self: SerializableTreeMap) => boolean
    deserialized: (self: SerializableTreeMap) => boolean
    deserialize_node: (self: SerializableTreeMap, node: Node) => boolean
    deserialize_children: (self: SerializableTreeMap) => boolean
    set_default_namespace: (self: SerializableTreeMap, node: Node) => boolean
    serialize_use_xml_node_value: (self: SerializableTreeMap) => boolean
    property_use_nick: (self: SerializableTreeMap) => boolean
    node_name: (self: SerializableTreeMap) => string | null
    find_property_spec: (self: SerializableTreeMap, property_name: string | null) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableTreeMap) => GObject.ParamSpec[]
    serialize: (self: SerializableTreeMap, node: Node) => Node | null
    serialize_property: (self: SerializableTreeMap, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableTreeMap, node: Node) => boolean
    deserialize_property: (self: SerializableTreeMap, property_node: Node) => boolean
}

export abstract class SerializableTreeMapClass {

    // Own properties of GXml-0.18.GXml.SerializableTreeMapClass

    static name: string
}

export interface SerializableTreeMapPrivate {
}

export class SerializableTreeMapPrivate {

    // Own properties of GXml-0.18.GXml.SerializableTreeMapPrivate

    static name: string
}

export interface SerializableIntClass {

    // Own fields of GXml-0.18.GXml.SerializableIntClass

    parent_class: SerializableDoubleClass
}

export abstract class SerializableIntClass {

    // Own properties of GXml-0.18.GXml.SerializableIntClass

    static name: string
}

export interface SerializableIntPrivate {
}

export class SerializableIntPrivate {

    // Own properties of GXml-0.18.GXml.SerializableIntPrivate

    static name: string
}

export interface SerializableObjectModelClass {

    // Own fields of GXml-0.18.GXml.SerializableObjectModelClass

    parent_class: GObject.ObjectClass
    get_enable_unknown_serializable_property: (self: SerializableObjectModel) => boolean
    serialize_use_xml_node_value: (self: SerializableObjectModel) => boolean
    property_use_nick: (self: SerializableObjectModel) => boolean
    set_default_namespace: (self: SerializableObjectModel, node: Node) => boolean
    node_name: (self: SerializableObjectModel) => string | null
    find_property_spec: (self: SerializableObjectModel, property_name: string | null) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableObjectModel) => GObject.ParamSpec[]
    serialize: (self: SerializableObjectModel, node: Node) => Node | null
    serialize_property: (self: SerializableObjectModel, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableObjectModel, node: Node) => boolean
    deserialize_property: (self: SerializableObjectModel, property_node: Node) => boolean
    to_string: (self: SerializableObjectModel) => string | null
}

export abstract class SerializableObjectModelClass {

    // Own properties of GXml-0.18.GXml.SerializableObjectModelClass

    static name: string
}

export interface SerializableObjectModelPrivate {
}

export class SerializableObjectModelPrivate {

    // Own properties of GXml-0.18.GXml.SerializableObjectModelPrivate

    static name: string
}

export interface SerializableValueListClass {

    // Own fields of GXml-0.18.GXml.SerializableValueListClass

    parent_class: GObject.ObjectClass
    get_values: (self: SerializableValueList) => Gee.List
    add_values: (self: SerializableValueList, vals: string[]) => void
    get_value_at: (self: SerializableValueList, index: number) => string | null
    select_value_at: (self: SerializableValueList, index: number) => void
    get_values_array: (self: SerializableValueList) => string[]
    is_value: (self: SerializableValueList) => boolean
}

export abstract class SerializableValueListClass {

    // Own properties of GXml-0.18.GXml.SerializableValueListClass

    static name: string
}

export interface SerializableValueListPrivate {
}

export class SerializableValueListPrivate {

    // Own properties of GXml-0.18.GXml.SerializableValueListPrivate

    static name: string
}

export interface TAttributeClass {

    // Own fields of GXml-0.18.GXml.TAttributeClass

    parent_class: TNodeClass
}

export abstract class TAttributeClass {

    // Own properties of GXml-0.18.GXml.TAttributeClass

    static name: string
}

export interface TAttributePrivate {
}

export class TAttributePrivate {

    // Own properties of GXml-0.18.GXml.TAttributePrivate

    static name: string
}

export interface TCDATAClass {

    // Own fields of GXml-0.18.GXml.TCDATAClass

    parent_class: TNodeClass
}

export abstract class TCDATAClass {

    // Own properties of GXml-0.18.GXml.TCDATAClass

    static name: string
}

export interface TCDATAPrivate {
}

export class TCDATAPrivate {

    // Own properties of GXml-0.18.GXml.TCDATAPrivate

    static name: string
}

export interface TCommentClass {

    // Own fields of GXml-0.18.GXml.TCommentClass

    parent_class: TNodeClass
}

export abstract class TCommentClass {

    // Own properties of GXml-0.18.GXml.TCommentClass

    static name: string
}

export interface TCommentPrivate {
}

export class TCommentPrivate {

    // Own properties of GXml-0.18.GXml.TCommentPrivate

    static name: string
}

export interface TDocumentClass {

    // Own fields of GXml-0.18.GXml.TDocumentClass

    parent_class: TNodeClass
}

export abstract class TDocumentClass {

    // Own properties of GXml-0.18.GXml.TDocumentClass

    static name: string
}

export interface TDocumentPrivate {
}

export class TDocumentPrivate {

    // Own properties of GXml-0.18.GXml.TDocumentPrivate

    static name: string
}

export interface TElementClass {

    // Own fields of GXml-0.18.GXml.TElementClass

    parent_class: TNodeClass
}

export abstract class TElementClass {

    // Own properties of GXml-0.18.GXml.TElementClass

    static name: string
}

export interface TElementPrivate {
}

export class TElementPrivate {

    // Own properties of GXml-0.18.GXml.TElementPrivate

    static name: string
}

export interface TNamespaceClass {

    // Own fields of GXml-0.18.GXml.TNamespaceClass

    parent_class: TNodeClass
}

export abstract class TNamespaceClass {

    // Own properties of GXml-0.18.GXml.TNamespaceClass

    static name: string
}

export interface TNamespacePrivate {
}

export class TNamespacePrivate {

    // Own properties of GXml-0.18.GXml.TNamespacePrivate

    static name: string
}

export interface TNodeClass {

    // Own fields of GXml-0.18.GXml.TNodeClass

    parent_class: GObject.ObjectClass
    set_namespace: (self: TNode, uri: string | null, prefix?: string | null) => boolean
    to_string: (self: TNode) => string | null
    set_parent: (self: TNode, node: Node) => void
}

export abstract class TNodeClass {

    // Own properties of GXml-0.18.GXml.TNodeClass

    static name: string
}

export interface TNodePrivate {
}

export class TNodePrivate {

    // Own properties of GXml-0.18.GXml.TNodePrivate

    static name: string
}

export interface TNodeTChildrenListClass {

    // Own fields of GXml-0.18.GXml.TNodeTChildrenListClass

    parent_class: Gee.AbstractBidirListClass
}

export abstract class TNodeTChildrenListClass {

    // Own properties of GXml-0.18.GXml.TNodeTChildrenListClass

    static name: string
}

export interface TNodeTChildrenListPrivate {
}

export class TNodeTChildrenListPrivate {

    // Own properties of GXml-0.18.GXml.TNodeTChildrenListPrivate

    static name: string
}

export interface TProcessingInstructionClass {

    // Own fields of GXml-0.18.GXml.TProcessingInstructionClass

    parent_class: TNodeClass
}

export abstract class TProcessingInstructionClass {

    // Own properties of GXml-0.18.GXml.TProcessingInstructionClass

    static name: string
}

export interface TProcessingInstructionPrivate {
}

export class TProcessingInstructionPrivate {

    // Own properties of GXml-0.18.GXml.TProcessingInstructionPrivate

    static name: string
}

export interface TTextClass {

    // Own fields of GXml-0.18.GXml.TTextClass

    parent_class: TNodeClass
}

export abstract class TTextClass {

    // Own properties of GXml-0.18.GXml.TTextClass

    static name: string
}

export interface TTextPrivate {
}

export class TTextPrivate {

    // Own properties of GXml-0.18.GXml.TTextPrivate

    static name: string
}

export interface XParserClass {

    // Own fields of GXml-0.18.GXml.XParserClass

    parent_class: GObject.ObjectClass
}

export abstract class XParserClass {

    // Own properties of GXml-0.18.GXml.XParserClass

    static name: string
}

export interface XParserPrivate {
}

export class XParserPrivate {

    // Own properties of GXml-0.18.GXml.XParserPrivate

    static name: string
}

export interface CollectionIface {

    // Own fields of GXml-0.18.GXml.CollectionIface

    parent_iface: GObject.TypeInterface
    search: (self: Collection) => void
    get_item: (self: Collection, index: number) => DomElement | null
    append: (self: Collection, node: DomElement) => void
    initialize: (self: Collection, t: GObject.GType) => void
    create_item: (self: Collection) => DomElement | null
    validate_append: (self: Collection, index: number, element: DomElement) => boolean
    clear: (self: Collection) => void
    get_nodes_index: (self: Collection) => GLib.Queue
    get_element: (self: Collection) => DomElement
    set_element: (self: Collection, value: DomElement) => void
    get_items_name: (self: Collection) => string | null
    get_items_type: (self: Collection) => GObject.GType
    set_items_type: (self: Collection, value: GObject.GType) => void
    get_length: (self: Collection) => number
}

export abstract class CollectionIface {

    // Own properties of GXml-0.18.GXml.CollectionIface

    static name: string
}

export interface ListIface {

    // Own fields of GXml-0.18.GXml.ListIface

    parent_iface: GObject.TypeInterface
}

export abstract class ListIface {

    // Own properties of GXml-0.18.GXml.ListIface

    static name: string
}

export interface MappeableElementIface {

    // Own fields of GXml-0.18.GXml.MappeableElementIface

    parent_iface: GObject.TypeInterface
    get_map_key: (self: MappeableElement) => string | null
}

export abstract class MappeableElementIface {

    // Own properties of GXml-0.18.GXml.MappeableElementIface

    static name: string
}

export interface MapIface {

    // Own fields of GXml-0.18.GXml.MapIface

    parent_iface: GObject.TypeInterface
    item: (self: Map, key: string | null) => DomElement | null
    has_key: (self: Map, key: string | null) => boolean
    get_attribute_key: (self: Map) => string | null
    set_attribute_key: (self: Map, value: string | null) => void
    get_keys_set: (self: Map) => Gee.Set
}

export abstract class MapIface {

    // Own properties of GXml-0.18.GXml.MapIface

    static name: string
}

export interface MappeableElementPairKeyIface {

    // Own fields of GXml-0.18.GXml.MappeableElementPairKeyIface

    parent_iface: GObject.TypeInterface
    get_map_primary_key: (self: MappeableElementPairKey) => string | null
    get_map_secondary_key: (self: MappeableElementPairKey) => string | null
}

export abstract class MappeableElementPairKeyIface {

    // Own properties of GXml-0.18.GXml.MappeableElementPairKeyIface

    static name: string
}

export interface PairedMapIface {

    // Own fields of GXml-0.18.GXml.PairedMapIface

    parent_iface: GObject.TypeInterface
    item: (self: PairedMap, primary_key: string | null, secondary_key: string | null) => DomElement | null
    has_primary_key: (self: PairedMap, key: string | null) => boolean
    has_secondary_key: (self: PairedMap, pkey: string | null, key: string | null) => boolean
    secondary_keys_set: (self: PairedMap, pkey: string | null) => Gee.Set
    get_attribute_primary_key: (self: PairedMap) => string | null
    set_attribute_primary_key: (self: PairedMap, value: string | null) => void
    get_attribute_secondary_key: (self: PairedMap) => string | null
    set_attribute_secondary_key: (self: PairedMap, value: string | null) => void
    get_primary_keys_set: (self: PairedMap) => Gee.Set
}

export abstract class PairedMapIface {

    // Own properties of GXml-0.18.GXml.PairedMapIface

    static name: string
}

export interface MappeableElementThreeKeyIface {

    // Own fields of GXml-0.18.GXml.MappeableElementThreeKeyIface

    parent_iface: GObject.TypeInterface
    get_map_pkey: (self: MappeableElementThreeKey) => string | null
    get_map_skey: (self: MappeableElementThreeKey) => string | null
    get_map_tkey: (self: MappeableElementThreeKey) => string | null
}

export abstract class MappeableElementThreeKeyIface {

    // Own properties of GXml-0.18.GXml.MappeableElementThreeKeyIface

    static name: string
}

export interface ThreeMapIface {

    // Own fields of GXml-0.18.GXml.ThreeMapIface

    parent_iface: GObject.TypeInterface
    item: (self: ThreeMap, primary_key: string | null, secondary_key: string | null, third_key: string | null) => DomElement | null
    has_primary_key: (self: ThreeMap, key: string | null) => boolean
    has_secondary_key: (self: ThreeMap, pkey: string | null, key: string | null) => boolean
    has_third_key: (self: ThreeMap, pkey: string | null, skey: string | null, key: string | null) => boolean
    secondary_keys_set: (self: ThreeMap, pkey: string | null) => Gee.Set
    third_keys_set: (self: ThreeMap, pkey: string | null, skey: string | null) => Gee.Set
    get_attribute_primary_key: (self: ThreeMap) => string | null
    set_attribute_primary_key: (self: ThreeMap, value: string | null) => void
    get_attribute_secondary_key: (self: ThreeMap) => string | null
    set_attribute_secondary_key: (self: ThreeMap, value: string | null) => void
    get_attribute_third_key: (self: ThreeMap) => string | null
    set_attribute_third_key: (self: ThreeMap, value: string | null) => void
    get_primary_keys_set: (self: ThreeMap) => Gee.Set
}

export abstract class ThreeMapIface {

    // Own properties of GXml-0.18.GXml.ThreeMapIface

    static name: string
}

export interface AttributeIface {

    // Own fields of GXml-0.18.GXml.AttributeIface

    parent_iface: GObject.TypeInterface
    get_namespace: (self: Attribute) => Namespace | null
    set_namespace: (self: Attribute, value?: Namespace | null) => void
    get_prefix: (self: Attribute) => string | null
}

export abstract class AttributeIface {

    // Own properties of GXml-0.18.GXml.AttributeIface

    static name: string
}

export interface CDATAIface {

    // Own fields of GXml-0.18.GXml.CDATAIface

    parent_iface: GObject.TypeInterface
    get_str: (self: CDATA) => string | null
}

export abstract class CDATAIface {

    // Own properties of GXml-0.18.GXml.CDATAIface

    static name: string
}

export interface CharacterIface {

    // Own fields of GXml-0.18.GXml.CharacterIface

    parent_iface: GObject.TypeInterface
    get_str: (self: Character) => string | null
    set_str: (self: Character, value: string | null) => void
}

export abstract class CharacterIface {

    // Own properties of GXml-0.18.GXml.CharacterIface

    static name: string
}

export interface CommentIface {

    // Own fields of GXml-0.18.GXml.CommentIface

    parent_iface: GObject.TypeInterface
    get_str: (self: Comment) => string | null
    set_str: (self: Comment, value: string | null) => void
}

export abstract class CommentIface {

    // Own properties of GXml-0.18.GXml.CommentIface

    static name: string
}

export interface DocumentIface {

    // Own fields of GXml-0.18.GXml.DocumentIface

    parent_iface: GObject.TypeInterface
    create_element: (self: Document, name: string | null) => Node
    create_text: (self: Document, text: string | null) => Node
    create_comment: (self: Document, text: string | null) => Node
    create_cdata: (self: Document, text: string | null) => Node
    create_pi: (self: Document, target: string | null, data: string | null) => Node
    save: (self: Document, cancellable?: Gio.Cancellable | null) => boolean
    save_as: (self: Document, f: Gio.File, cancellable?: Gio.Cancellable | null) => boolean
    get_indent: (self: Document) => boolean
    set_indent: (self: Document, value: boolean) => void
    get_ns_top: (self: Document) => boolean
    set_ns_top: (self: Document, value: boolean) => void
    get_prefix_default_ns: (self: Document) => boolean
    set_prefix_default_ns: (self: Document, value: boolean) => void
    get_backup: (self: Document) => boolean
    set_backup: (self: Document, value: boolean) => void
    get_root: (self: Document) => Node
    get_file: (self: Document) => Gio.File
    set_file: (self: Document, value: Gio.File) => void
}

export abstract class DocumentIface {

    // Own properties of GXml-0.18.GXml.DocumentIface

    static name: string
}

export interface DocumentTypeIface {

    // Own fields of GXml-0.18.GXml.DocumentTypeIface

    parent_iface: GObject.TypeInterface
}

export abstract class DocumentTypeIface {

    // Own properties of GXml-0.18.GXml.DocumentTypeIface

    static name: string
}

export interface DomAttrIface {

    // Own fields of GXml-0.18.GXml.DomAttrIface

    parent_iface: GObject.TypeInterface
    get_namespace_uri: (self: DomAttr) => string | null
    get_prefix: (self: DomAttr) => string | null
    get_local_name: (self: DomAttr) => string | null
    get_name: (self: DomAttr) => string | null
    get_value: (self: DomAttr) => string | null
    set_value: (self: DomAttr, value: string | null) => void
    get_specified: (self: DomAttr) => boolean
}

export abstract class DomAttrIface {

    // Own properties of GXml-0.18.GXml.DomAttrIface

    static name: string
}

export interface DomCharacterDataIface {

    // Own fields of GXml-0.18.GXml.DomCharacterDataIface

    parent_iface: GObject.TypeInterface
    substring_data: (self: DomCharacterData, offset: number, count: number) => string | null
    append_data: (self: DomCharacterData, data: string | null) => void
    insert_data: (self: DomCharacterData, offset: number, data: string | null) => void
    delete_data: (self: DomCharacterData, offset: number, count: number) => void
    replace_data: (self: DomCharacterData, offset: number, count: number, data: string | null) => void
    get_data: (self: DomCharacterData) => string | null
    set_data: (self: DomCharacterData, value: string | null) => void
    get_length: (self: DomCharacterData) => number
}

export abstract class DomCharacterDataIface {

    // Own properties of GXml-0.18.GXml.DomCharacterDataIface

    static name: string
}

export interface DomTextIface {

    // Own fields of GXml-0.18.GXml.DomTextIface

    parent_iface: GObject.TypeInterface
    split_text: (self: DomText, offset: number) => DomText
    get_whole_text: (self: DomText) => string | null
}

export abstract class DomTextIface {

    // Own properties of GXml-0.18.GXml.DomTextIface

    static name: string
}

export interface DomProcessingInstructionIface {

    // Own fields of GXml-0.18.GXml.DomProcessingInstructionIface

    parent_iface: GObject.TypeInterface
    get_target: (self: DomProcessingInstruction) => string | null
}

export abstract class DomProcessingInstructionIface {

    // Own properties of GXml-0.18.GXml.DomProcessingInstructionIface

    static name: string
}

export interface DomCommentIface {

    // Own fields of GXml-0.18.GXml.DomCommentIface

    parent_iface: GObject.TypeInterface
}

export abstract class DomCommentIface {

    // Own properties of GXml-0.18.GXml.DomCommentIface

    static name: string
}

export interface DomNonElementParentNodeIface {

    // Own fields of GXml-0.18.GXml.DomNonElementParentNodeIface

    parent_iface: GObject.TypeInterface
    get_element_by_id: (self: DomNonElementParentNode, element_id: string | null) => DomElement | null
}

export abstract class DomNonElementParentNodeIface {

    // Own properties of GXml-0.18.GXml.DomNonElementParentNodeIface

    static name: string
}

export interface DomParentNodeIface {

    // Own fields of GXml-0.18.GXml.DomParentNodeIface

    parent_iface: GObject.TypeInterface
    query_selector: (self: DomParentNode, selectors: string | null) => DomElement | null
    query_selector_all: (self: DomParentNode, selectors: string | null) => DomNodeList
    get_elements_by_property_value: (self: DomParentNode, property: string | null, value: string | null) => DomElementList
    get_children: (self: DomParentNode) => DomHTMLCollection
    get_first_element_child: (self: DomParentNode) => DomElement | null
    get_last_element_child: (self: DomParentNode) => DomElement | null
    get_child_element_count: (self: DomParentNode) => number
}

export abstract class DomParentNodeIface {

    // Own properties of GXml-0.18.GXml.DomParentNodeIface

    static name: string
}

export interface DomNonDocumentTypeChildNodeIface {

    // Own fields of GXml-0.18.GXml.DomNonDocumentTypeChildNodeIface

    parent_iface: GObject.TypeInterface
    get_previous_element_sibling: (self: DomNonDocumentTypeChildNode) => DomElement | null
    get_next_element_sibling: (self: DomNonDocumentTypeChildNode) => DomElement | null
}

export abstract class DomNonDocumentTypeChildNodeIface {

    // Own properties of GXml-0.18.GXml.DomNonDocumentTypeChildNodeIface

    static name: string
}

export interface DomChildNodeIface {

    // Own fields of GXml-0.18.GXml.DomChildNodeIface

    parent_iface: GObject.TypeInterface
    remove: (self: DomChildNode) => void
}

export abstract class DomChildNodeIface {

    // Own properties of GXml-0.18.GXml.DomChildNodeIface

    static name: string
}

export interface DomNodeListIface {

    // Own fields of GXml-0.18.GXml.DomNodeListIface

    parent_iface: GObject.TypeInterface
    item: (self: DomNodeList, index: number) => DomNode | null
    get_length: (self: DomNodeList) => number
}

export abstract class DomNodeListIface {

    // Own properties of GXml-0.18.GXml.DomNodeListIface

    static name: string
}

export interface DomHTMLCollectionIface {

    // Own fields of GXml-0.18.GXml.DomHTMLCollectionIface

    parent_iface: GObject.TypeInterface
    get_element: (self: DomHTMLCollection, index: number) => DomElement | null
    to_array: (self: DomHTMLCollection) => DomElement[]
    item: (self: DomHTMLCollection, index: number) => DomElement | null
    named_item: (self: DomHTMLCollection, name: string | null) => DomElement | null
    get_length: (self: DomHTMLCollection) => number
}

export abstract class DomHTMLCollectionIface {

    // Own properties of GXml-0.18.GXml.DomHTMLCollectionIface

    static name: string
}

export interface DomNodeIteratorIface {

    // Own fields of GXml-0.18.GXml.DomNodeIteratorIface

    parent_iface: GObject.TypeInterface
    next_node: (self: DomNodeIterator) => DomNode | null
    previous_node: (self: DomNodeIterator) => DomNode | null
    detach: (self: DomNodeIterator) => void
    get_root: (self: DomNodeIterator) => DomNode
    get_reference_node: (self: DomNodeIterator) => DomNode
    get_pointer_before_reference_node: (self: DomNodeIterator) => boolean
    get_what_to_show: (self: DomNodeIterator) => number
    get_filter: (self: DomNodeIterator) => DomNodeFilter | null
}

export abstract class DomNodeIteratorIface {

    // Own properties of GXml-0.18.GXml.DomNodeIteratorIface

    static name: string
}

export interface DomTreeWalkerIface {

    // Own fields of GXml-0.18.GXml.DomTreeWalkerIface

    parent_iface: GObject.TypeInterface
    parentNode: (self: DomTreeWalker) => DomNode | null
    firstChild: (self: DomTreeWalker) => DomNode | null
    lastChild: (self: DomTreeWalker) => DomNode | null
    previousSibling: (self: DomTreeWalker) => DomNode | null
    nextSibling: (self: DomTreeWalker) => DomNode | null
    previousNode: (self: DomTreeWalker) => DomNode | null
    nextNode: (self: DomTreeWalker) => DomNode | null
    get_root: (self: DomTreeWalker) => DomNode
    get_what_to_show: (self: DomTreeWalker) => number
    get_filter: (self: DomTreeWalker) => DomNodeFilter | null
    get_current_node: (self: DomTreeWalker) => DomNode
}

export abstract class DomTreeWalkerIface {

    // Own properties of GXml-0.18.GXml.DomTreeWalkerIface

    static name: string
}

export interface DomNamedNodeMapIface {

    // Own fields of GXml-0.18.GXml.DomNamedNodeMapIface

    parent_iface: GObject.TypeInterface
    item: (self: DomNamedNodeMap, index: number) => DomNode | null
    get_named_item: (self: DomNamedNodeMap, name: string | null) => DomNode | null
    set_named_item: (self: DomNamedNodeMap, node: DomNode) => DomNode | null
    remove_named_item: (self: DomNamedNodeMap, name: string | null) => DomNode | null
    remove_named_item_ns: (self: DomNamedNodeMap, namespace_uri: string | null, localName: string | null) => DomNode | null
    get_named_item_ns: (self: DomNamedNodeMap, namespace_uri: string | null, local_name: string | null) => DomNode | null
    set_named_item_ns: (self: DomNamedNodeMap, node: DomNode) => DomNode | null
    get_length: (self: DomNamedNodeMap) => number
}

export abstract class DomNamedNodeMapIface {

    // Own properties of GXml-0.18.GXml.DomNamedNodeMapIface

    static name: string
}

export interface DomTokenListIface {

    // Own fields of GXml-0.18.GXml.DomTokenListIface

    parent_iface: GObject.TypeInterface
    item: (self: DomTokenList, index: number) => string | null
    contains: (self: DomTokenList, token: string | null) => boolean
    add: (self: DomTokenList, tokens: string[]) => void
    remove: (self: DomTokenList, tokens: string[]) => void
    toggle: (self: DomTokenList, token: string | null, force: boolean, auto: boolean) => boolean
    to_string: (self: DomTokenList) => string | null
    get_length: (self: DomTokenList) => number
}

export abstract class DomTokenListIface {

    // Own properties of GXml-0.18.GXml.DomTokenListIface

    static name: string
}

export interface DomSettableTokenListIface {

    // Own fields of GXml-0.18.GXml.DomSettableTokenListIface

    parent_iface: GObject.TypeInterface
    get_value: (self: DomSettableTokenList) => string | null
    set_value: (self: DomSettableTokenList, value: string | null) => void
}

export abstract class DomSettableTokenListIface {

    // Own properties of GXml-0.18.GXml.DomSettableTokenListIface

    static name: string
}

export interface DomDocumentIface {

    // Own fields of GXml-0.18.GXml.DomDocumentIface

    parent_iface: GObject.TypeInterface
    get_elements_by_tag_name: (self: DomDocument, local_name: string | null) => DomHTMLCollection
    get_elements_by_tag_name_ns: (self: DomDocument, namespace: string | null, local_name: string | null) => DomHTMLCollection
    get_elements_by_class_name: (self: DomDocument, classNames: string | null) => DomHTMLCollection
    create_element: (self: DomDocument, local_name: string | null) => DomElement
    create_element_ns: (self: DomDocument, namespace: string | null, qualified_name: string | null) => DomElement
    create_document_fragment: (self: DomDocument) => DomDocumentFragment
    create_text_node: (self: DomDocument, data: string | null) => DomText
    create_comment: (self: DomDocument, data: string | null) => DomComment
    create_processing_instruction: (self: DomDocument, target: string | null, data: string | null) => DomProcessingInstruction
    import_node: (self: DomDocument, node: DomNode, deep: boolean) => DomNode
    adopt_node: (self: DomDocument, node: DomNode) => DomNode
    create_event: (self: DomDocument, interface: string | null) => DomEvent
    create_range: (self: DomDocument) => DomRange
    create_node_iterator: (self: DomDocument, root: DomNode, whatToShow: number, filter?: DomNodeFilter | null) => DomNodeIterator
    create_tree_walker: (self: DomDocument, root: DomNode, what_to_show: number, filter?: DomNodeFilter | null) => DomTreeWalker
    get_implementation: (self: DomDocument) => DomImplementation
    get_url: (self: DomDocument) => string | null
    get_document_uri: (self: DomDocument) => string | null
    get_origin: (self: DomDocument) => string | null
    get_compat_mode: (self: DomDocument) => string | null
    get_character_set: (self: DomDocument) => string | null
    get_content_type: (self: DomDocument) => string | null
    get_doctype: (self: DomDocument) => DomDocumentType | null
    get_document_element: (self: DomDocument) => DomElement | null
}

export abstract class DomDocumentIface {

    // Own properties of GXml-0.18.GXml.DomDocumentIface

    static name: string
}

export interface DomXMLDocumentIface {

    // Own fields of GXml-0.18.GXml.DomXMLDocumentIface

    parent_iface: GObject.TypeInterface
}

export abstract class DomXMLDocumentIface {

    // Own properties of GXml-0.18.GXml.DomXMLDocumentIface

    static name: string
}

export interface DomImplementationIface {

    // Own fields of GXml-0.18.GXml.DomImplementationIface

    parent_iface: GObject.TypeInterface
    create_document_type: (self: DomImplementation, qualified_name: string | null, public_id: string | null, system_id: string | null) => DomDocumentType
    create_document: (self: DomImplementation, nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null) => DomXMLDocument
    create_html_document: (self: DomImplementation, title: string | null) => Document
    has_feature: (self: DomImplementation) => boolean
}

export abstract class DomImplementationIface {

    // Own properties of GXml-0.18.GXml.DomImplementationIface

    static name: string
}

export interface DomDocumentFragmentIface {

    // Own fields of GXml-0.18.GXml.DomDocumentFragmentIface

    parent_iface: GObject.TypeInterface
}

export abstract class DomDocumentFragmentIface {

    // Own properties of GXml-0.18.GXml.DomDocumentFragmentIface

    static name: string
}

export interface DomDocumentTypeIface {

    // Own fields of GXml-0.18.GXml.DomDocumentTypeIface

    parent_iface: GObject.TypeInterface
    get_name: (self: DomDocumentType) => string | null
    get_public_id: (self: DomDocumentType) => string | null
    get_system_id: (self: DomDocumentType) => string | null
}

export abstract class DomDocumentTypeIface {

    // Own properties of GXml-0.18.GXml.DomDocumentTypeIface

    static name: string
}

export interface DomHtmlDocumentIface {

    // Own fields of GXml-0.18.GXml.DomHtmlDocumentIface

    parent_iface: GObject.TypeInterface
    read_from_string: (self: DomHtmlDocument, str: string | null) => void
    read_from_string_tolerant: (self: DomHtmlDocument, str: string | null) => void
    to_html: (self: DomHtmlDocument) => string | null
}

export abstract class DomHtmlDocumentIface {

    // Own properties of GXml-0.18.GXml.DomHtmlDocumentIface

    static name: string
}

export interface DomElementIface {

    // Own fields of GXml-0.18.GXml.DomElementIface

    parent_iface: GObject.TypeInterface
    get_attribute: (self: DomElement, name: string | null) => string | null
    get_attribute_ns: (self: DomElement, namespace: string | null, local_name: string | null) => string | null
    set_attribute: (self: DomElement, name: string | null, value: string | null) => void
    set_attribute_ns: (self: DomElement, namespace: string | null, name: string | null, value: string | null) => void
    remove_attribute: (self: DomElement, name: string | null) => void
    remove_attribute_ns: (self: DomElement, namespace: string | null, local_name: string | null) => void
    has_attribute: (self: DomElement, name: string | null) => boolean
    has_attribute_ns: (self: DomElement, namespace: string | null, local_name: string | null) => boolean
    get_elements_by_tag_name: (self: DomElement, local_name: string | null) => DomHTMLCollection
    get_elements_by_tag_name_ns: (self: DomElement, namespace: string | null, local_name: string | null) => DomHTMLCollection
    get_elements_by_class_name: (self: DomElement, class_names: string | null) => DomHTMLCollection
    get_namespace_uri: (self: DomElement) => string | null
    get_prefix: (self: DomElement) => string | null
    get_local_name: (self: DomElement) => string | null
    get_tag_name: (self: DomElement) => string | null
    get_id: (self: DomElement) => string | null
    set_id: (self: DomElement, value?: string | null) => void
    get_class_name: (self: DomElement) => string | null
    set_class_name: (self: DomElement, value?: string | null) => void
    get_class_list: (self: DomElement) => DomTokenList
    get_attributes: (self: DomElement) => DomNamedNodeMap
}

export abstract class DomElementIface {

    // Own properties of GXml-0.18.GXml.DomElementIface

    static name: string
}

export interface DomEventTargetIface {

    // Own fields of GXml-0.18.GXml.DomEventTargetIface

    parent_iface: GObject.TypeInterface
    add_event_listener: (self: DomEventTarget, type: string | null, callback: DomEventListener | null, capture: boolean) => void
    remove_event_listener: (self: DomEventTarget, type: string | null, callback: DomEventListener | null, capture: boolean) => void
    dispatch_event: (self: DomEventTarget, event: DomEvent) => boolean
}

export abstract class DomEventTargetIface {

    // Own properties of GXml-0.18.GXml.DomEventTargetIface

    static name: string
}

export interface DomEventListenerIface {

    // Own fields of GXml-0.18.GXml.DomEventListenerIface

    parent_iface: GObject.TypeInterface
    handle_event: (self: DomEventListener, event: DomEvent) => void
}

export abstract class DomEventListenerIface {

    // Own properties of GXml-0.18.GXml.DomEventListenerIface

    static name: string
}

export interface DomEventIface {

    // Own fields of GXml-0.18.GXml.DomEventIface

    parent_iface: GObject.TypeInterface
    stop_propagation: (self: DomEvent) => void
    stop_immediate_propagation: (self: DomEvent) => void
    prevent_default: (self: DomEvent) => void
    init_event: (self: DomEvent, type: string | null, bubbles: boolean, cancelable: boolean) => void
    get_etype: (self: DomEvent) => string | null
    get_event_target: (self: DomEvent) => DomEventTarget | null
    get_current_target: (self: DomEvent) => DomEventTarget | null
    get_bubbles: (self: DomEvent) => boolean
    get_cancelable: (self: DomEvent) => boolean
    get_is_trusted: (self: DomEvent) => boolean
    get_time_stamp: (self: DomEvent) => DomTimeStamp
    get_default_prevented: (self: DomEvent) => boolean
    get_event_phase: (self: DomEvent) => DomEventPhase
}

export abstract class DomEventIface {

    // Own properties of GXml-0.18.GXml.DomEventIface

    static name: string
}

export interface DomCustomEventIface {

    // Own fields of GXml-0.18.GXml.DomCustomEventIface

    parent_iface: GObject.TypeInterface
    init_custom_event: (self: DomCustomEvent, type: string | null, bubbles: boolean, cancelable: boolean, detail: any) => void
    get_detail: (self: DomCustomEvent) => /* result */ any
}

export abstract class DomCustomEventIface {

    // Own properties of GXml-0.18.GXml.DomCustomEventIface

    static name: string
}

export interface DomMutationObserverIface {

    // Own fields of GXml-0.18.GXml.DomMutationObserverIface

    parent_iface: GObject.TypeInterface
    observe: (self: DomMutationObserver, target: Node, options: DomMutationObserverInit) => void
    // Has conflict: disconnect: (self: DomMutationObserver) => void
    take_records: (self: DomMutationObserver) => Gee.List
}

export abstract class DomMutationObserverIface {

    // Own properties of GXml-0.18.GXml.DomMutationObserverIface

    static name: string
}

export interface DomMutationRecordIface {

    // Own fields of GXml-0.18.GXml.DomMutationRecordIface

    parent_iface: GObject.TypeInterface
    get_mtype: (self: DomMutationRecord) => string | null
    get_target: (self: DomMutationRecord) => DomNode
    get_added_nodes: (self: DomMutationRecord) => DomNodeList
    set_added_nodes: (self: DomMutationRecord, value: DomNodeList) => void
    get_removed_nodes: (self: DomMutationRecord) => DomNodeList
    set_removed_nodes: (self: DomMutationRecord, value: DomNodeList) => void
    get_previous_sibling: (self: DomMutationRecord) => DomNode | null
    get_next_sibling: (self: DomMutationRecord) => DomNode | null
    get_attribute_name: (self: DomMutationRecord) => string | null
    get_attribute_namespace: (self: DomMutationRecord) => string | null
    get_old_value: (self: DomMutationRecord) => string | null
}

export abstract class DomMutationRecordIface {

    // Own properties of GXml-0.18.GXml.DomMutationRecordIface

    static name: string
}

export interface DomNodeIface {

    // Own fields of GXml-0.18.GXml.DomNodeIface

    parent_iface: GObject.TypeInterface
    has_child_nodes: (self: DomNode) => boolean
    normalize: (self: DomNode) => void
    is_equal_node: (self: DomNode, node?: DomNode | null) => boolean
    compare_document_position: (self: DomNode, other: DomNode) => DomNodeDocumentPosition
    contains: (self: DomNode, other?: DomNode | null) => boolean
    lookup_prefix: (self: DomNode, nspace?: string | null) => string | null
    lookup_namespace_uri: (self: DomNode, prefix?: string | null) => string | null
    is_default_namespace: (self: DomNode, nspace?: string | null) => boolean
    insert_before: (self: DomNode, node: DomNode, child?: DomNode | null) => DomNode
    append_child: (self: DomNode, node: DomNode) => DomNode
    replace_child: (self: DomNode, node: DomNode, child: DomNode) => DomNode
    remove_child: (self: DomNode, child: DomNode) => DomNode
    clone_node: (self: DomNode, deep: boolean) => DomNode
    get_node_type: (self: DomNode) => DomNodeNodeType
    get_node_name: (self: DomNode) => string | null
    get_base_uri: (self: DomNode) => string | null
    get_owner_document: (self: DomNode) => DomDocument | null
    set_owner_document: (self: DomNode, value?: DomDocument | null) => void
    get_parent_node: (self: DomNode) => DomNode | null
    get_parent_element: (self: DomNode) => DomElement | null
    get_child_nodes: (self: DomNode) => DomNodeList
    get_first_child: (self: DomNode) => DomNode | null
    get_last_child: (self: DomNode) => DomNode | null
    get_previous_sibling: (self: DomNode) => DomNode | null
    get_next_sibling: (self: DomNode) => DomNode | null
    get_node_value: (self: DomNode) => string | null
    set_node_value: (self: DomNode, value?: string | null) => void
    get_text_content: (self: DomNode) => string | null
    set_text_content: (self: DomNode, value?: string | null) => void
}

export abstract class DomNodeIface {

    // Own properties of GXml-0.18.GXml.DomNodeIface

    static name: string
}

export interface DomRangeIface {

    // Own fields of GXml-0.18.GXml.DomRangeIface

    parent_iface: GObject.TypeInterface
    set_start: (self: DomRange, node: DomNode, offset: number) => void
    set_end: (self: DomRange, node: DomNode, offset: number) => void
    set_start_before: (self: DomRange, node: DomNode) => void
    set_start_after: (self: DomRange, node: DomNode) => void
    set_end_before: (self: DomRange, node: DomNode) => void
    set_end_after: (self: DomRange, node: DomNode) => void
    collapse: (self: DomRange, to_start: boolean) => void
    select_node: (self: DomRange, node: DomNode) => void
    select_node_contents: (self: DomRange, node: DomNode) => void
    compare_boundary_points: (self: DomRange, how: DomRangeBoundaryPoints, sourceRange: DomRange) => number
    delete_contents: (self: DomRange) => void
    extract_contents: (self: DomRange) => DomDocumentFragment | null
    clone_contents: (self: DomRange) => DomDocumentFragment | null
    insert_node: (self: DomRange, node: DomNode) => void
    surround_contents: (self: DomRange, newParent: DomNode) => void
    clone_range: (self: DomRange) => DomRange
    detach: (self: DomRange) => void
    is_point_in_range: (self: DomRange, node: DomNode, offset: number) => boolean
    compare_point: (self: DomRange, node: DomNode, offset: number) => number
    intersects_node: (self: DomRange, node: DomNode) => boolean
    to_string: (self: DomRange) => string | null
    get_start_container: (self: DomRange) => DomNode
    get_start_offset: (self: DomRange) => number
    get_end_container: (self: DomRange) => DomNode
    get_end_offset: (self: DomRange) => number
    get_collapsed: (self: DomRange) => boolean
    get_common_ancestor_container: (self: DomRange) => DomNode
}

export abstract class DomRangeIface {

    // Own properties of GXml-0.18.GXml.DomRangeIface

    static name: string
}

export interface ElementIface {

    // Own fields of GXml-0.18.GXml.ElementIface

    parent_iface: GObject.TypeInterface
    normalize: (self: Element) => void
    set_attr: (self: Element, name: string | null, value: string | null) => void
    get_attr: (self: Element, name: string | null) => Node | null
    remove_attr: (self: Element, name: string | null) => void
    remove_ns_attr: (self: Element, name: string | null, uri: string | null) => void
    set_ns_attr: (self: Element, ns: string | null, name: string | null, value: string | null) => void
    get_ns_attr: (self: Element, name: string | null, uri: string | null) => Node | null
    get_tag_name: (self: Element) => string | null
    get_content: (self: Element) => string | null
    set_content: (self: Element, value: string | null) => void
}

export abstract class ElementIface {

    // Own properties of GXml-0.18.GXml.ElementIface

    static name: string
}

export interface GomObjectIface {

    // Own fields of GXml-0.18.GXml.GomObjectIface

    parent_iface: GObject.TypeInterface
    get_properties_list: (self: GomObject) => GObject.ParamSpec[]
    find_property_name: (self: GomObject, pname: string | null) => GObject.ParamSpec | null
    find_object_property_name: (self: GomObject, pname: string | null) => GObject.ParamSpec | null
    get_property_element_list: (self: GomObject) => GObject.ParamSpec[]
    get_property_string: (self: GomObject, prop: GObject.ParamSpec) => string | null
    get_attribute: (self: GomObject, name: string | null) => string | null
    set_attribute: (self: GomObject, name: string | null, val: string | null) => boolean
    get_child: (self: GomObject, name: string | null) => DomElement | null
    find_elements: (self: GomObject, name: string | null) => DomElementList
    remove_attribute: (self: GomObject, name: string | null) => boolean
    set_instance_property: (self: GomObject, name: string | null) => boolean
    clean_property_elements: (self: GomObject, name: string | null) => void
}

export abstract class GomObjectIface {

    // Own properties of GXml-0.18.GXml.GomObjectIface

    static name: string
}

export interface GomPropertyIface {

    // Own fields of GXml-0.18.GXml.GomPropertyIface

    parent_iface: GObject.TypeInterface
    validate_value: (self: GomProperty, val: string | null) => boolean
    get_value: (self: GomProperty) => string | null
    set_value: (self: GomProperty, value?: string | null) => void
}

export abstract class GomPropertyIface {

    // Own properties of GXml-0.18.GXml.GomPropertyIface

    static name: string
}

export interface NamespaceIface {

    // Own fields of GXml-0.18.GXml.NamespaceIface

    parent_iface: GObject.TypeInterface
    get_uri: (self: Namespace) => string | null
    get_prefix: (self: Namespace) => string | null
}

export abstract class NamespaceIface {

    // Own properties of GXml-0.18.GXml.NamespaceIface

    static name: string
}

export interface NodeIface {

    // Own fields of GXml-0.18.GXml.NodeIface

    parent_iface: GObject.TypeInterface
    get: (self: Node, key: string | null) => Node | null
    get_elements_by_property_value: (self: Node, property: string | null, value: string | null) => ElementList
    get_elements_by_name: (self: Node, name: string | null) => ElementList
    get_elements_by_name_ns: (self: Node, name: string | null, ns?: string | null) => ElementList
    to_string: (self: Node) => string | null
    set_namespace: (self: Node, uri: string | null, prefix?: string | null) => boolean
    ns_prefix: (self: Node) => string | null
    ns_uri: (self: Node) => string | null
    get_namespaces: (self: Node) => Gee.List
    get_children_nodes: (self: Node) => Gee.BidirList
    get_attrs: (self: Node) => Gee.Map
    get_name: (self: Node) => string | null
    get_value: (self: Node) => string | null
    set_value: (self: Node, value: string | null) => void
    get_type_node: (self: Node) => NodeType
    get_document: (self: Node) => Document
    get_parent: (self: Node) => Node
}

export abstract class NodeIface {

    // Own properties of GXml-0.18.GXml.NodeIface

    static name: string
}

export interface NotationIface {

    // Own fields of GXml-0.18.GXml.NotationIface

    parent_iface: GObject.TypeInterface
    get_public_id: (self: Notation) => string | null
    get_external_id: (self: Notation) => string | null
}

export abstract class NotationIface {

    // Own properties of GXml-0.18.GXml.NotationIface

    static name: string
}

export interface EntityIface {

    // Own fields of GXml-0.18.GXml.EntityIface

    parent_iface: GObject.TypeInterface
}

export abstract class EntityIface {

    // Own properties of GXml-0.18.GXml.EntityIface

    static name: string
}

export interface ParserIface {

    // Own fields of GXml-0.18.GXml.ParserIface

    parent_iface: GObject.TypeInterface
    write_file: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null) => void
    write_file_async: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    write_file_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    write_string: (self: Parser) => string | null
    write_string_async: (self: Parser, _callback_?: Gio.AsyncReadyCallback | null) => void
    write_string_finish: (self: Parser, _res_: Gio.AsyncResult) => string | null
    write_stream: (self: Parser, stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null) => void
    write_stream_async: (self: Parser, stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    write_stream_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_file: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null) => void
    read_file_async: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_file_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_stream: (self: Parser, stream: Gio.InputStream, cancellable?: Gio.Cancellable | null) => void
    read_stream_async: (self: Parser, stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_stream_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_string: (self: Parser, str: string | null, cancellable?: Gio.Cancellable | null) => void
    read_string_async: (self: Parser, str: string | null, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_string_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    create_stream: (self: Parser, cancellable?: Gio.Cancellable | null) => Gio.InputStream
    create_stream_async: (self: Parser, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    create_stream_finish: (self: Parser, _res_: Gio.AsyncResult) => Gio.InputStream
    read_child_nodes: (self: Parser, parent: DomNode) => void
    read_child_nodes_async: (self: Parser, parent: DomNode, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_child_nodes_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_child_node: (self: Parser, parent: DomNode) => boolean
    read_child_element: (self: Parser, parent: DomNode) => boolean
    read_element_property: (self: Parser, parent: DomNode) => [ /* returnType */ boolean, /* element */ DomNode ]
    add_element_collection: (self: Parser, parent: DomNode) => [ /* returnType */ boolean, /* element */ DomNode ]
    read_child_nodes_stream: (self: Parser, istream: Gio.InputStream, cancellable?: Gio.Cancellable | null) => void
    read_child_nodes_string: (self: Parser, str: string | null, cancellable?: Gio.Cancellable | null) => void
    read_unparsed: (self: Parser) => string | null
    move_next_node: (self: Parser) => boolean
    current_is_empty_element: (self: Parser) => boolean
    current_is_element: (self: Parser) => boolean
    current_is_document: (self: Parser) => boolean
    current_node_name: (self: Parser) => string | null
    create_element: (self: Parser, parent: DomNode) => DomElement | null
    read_element: (self: Parser, element: DomElement) => void
    get_backup: (self: Parser) => boolean
    set_backup: (self: Parser, value: boolean) => void
    get_indent: (self: Parser) => boolean
    set_indent: (self: Parser, value: boolean) => void
    get_node: (self: Parser) => DomNode
}

export abstract class ParserIface {

    // Own properties of GXml-0.18.GXml.ParserIface

    static name: string
}

export interface ProcessingInstructionIface {

    // Own fields of GXml-0.18.GXml.ProcessingInstructionIface

    parent_iface: GObject.TypeInterface
    get_target: (self: ProcessingInstruction) => string | null
    get_data: (self: ProcessingInstruction) => string | null
    set_data: (self: ProcessingInstruction, value: string | null) => void
}

export abstract class ProcessingInstructionIface {

    // Own properties of GXml-0.18.GXml.ProcessingInstructionIface

    static name: string
}

export interface IXsdSchemaIface {

    // Own fields of GXml-0.18.GXml.IXsdSchemaIface

    parent_iface: GObject.TypeInterface
    get_element_definitions: (self: IXsdSchema) => IXsdListElements
    set_element_definitions: (self: IXsdSchema, value: IXsdListElements) => void
    get_simple_type_definitions: (self: IXsdSchema) => IXsdListSimpleTypes
    set_simple_type_definitions: (self: IXsdSchema, value: IXsdListSimpleTypes) => void
    get_complex_type_definitions: (self: IXsdSchema) => IXsdListComplexTypes
    set_complex_type_definitions: (self: IXsdSchema, value: IXsdListComplexTypes) => void
}

export abstract class IXsdSchemaIface {

    // Own properties of GXml-0.18.GXml.IXsdSchemaIface

    static name: string
}

export interface IXsdBaseTypeIface {

    // Own fields of GXml-0.18.GXml.IXsdBaseTypeIface

    parent_iface: GObject.TypeInterface
    get_anotation: (self: IXsdBaseType) => IXsdAnnotation
    set_anotation: (self: IXsdBaseType, value: IXsdAnnotation) => void
}

export abstract class IXsdBaseTypeIface {

    // Own properties of GXml-0.18.GXml.IXsdBaseTypeIface

    static name: string
}

export interface IXsdSimpleTypeIface {

    // Own fields of GXml-0.18.GXml.IXsdSimpleTypeIface

    parent_iface: GObject.TypeInterface
    get_final: (self: IXsdSimpleType) => string | null
    set_final: (self: IXsdSimpleType, value: string | null) => void
    get_id: (self: IXsdSimpleType) => string | null
    set_id: (self: IXsdSimpleType, value: string | null) => void
    get_name: (self: IXsdSimpleType) => string | null
    set_name: (self: IXsdSimpleType, value: string | null) => void
    get_annotation: (self: IXsdSimpleType) => IXsdAnnotation
    set_annotation: (self: IXsdSimpleType, value: IXsdAnnotation) => void
    get_list: (self: IXsdSimpleType) => IXsdTypeList
    set_list: (self: IXsdSimpleType, value: IXsdTypeList) => void
    get_union: (self: IXsdSimpleType) => IXsdTypeUnion
    set_union: (self: IXsdSimpleType, value: IXsdTypeUnion) => void
    get_restriction: (self: IXsdSimpleType) => IXsdTypeRestriction
    set_restriction: (self: IXsdSimpleType, value: IXsdTypeRestriction) => void
}

export abstract class IXsdSimpleTypeIface {

    // Own properties of GXml-0.18.GXml.IXsdSimpleTypeIface

    static name: string
}

export interface IXsdTypeDefIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeDefIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeDefIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeDefIface

    static name: string
}

export interface IXsdTypeRestrictionIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionIface

    parent_iface: GObject.TypeInterface
    get_base: (self: IXsdTypeRestriction) => string | null
    set_base: (self: IXsdTypeRestriction, value: string | null) => void
    get_id: (self: IXsdTypeRestriction) => string | null
    set_id: (self: IXsdTypeRestriction, value: string | null) => void
    get_simple_type: (self: IXsdTypeRestriction) => IXsdSimpleType
    set_simple_type: (self: IXsdTypeRestriction, value: IXsdSimpleType) => void
    get_enumerations: (self: IXsdTypeRestriction) => IXsdListTypeRestrictionEnumerations
    set_enumerations: (self: IXsdTypeRestriction, value: IXsdListTypeRestrictionEnumerations) => void
    get_white_spaces: (self: IXsdTypeRestriction) => IXsdListTypeRestrictionWhiteSpaces
    set_white_spaces: (self: IXsdTypeRestriction, value: IXsdListTypeRestrictionWhiteSpaces) => void
}

export abstract class IXsdTypeRestrictionIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionIface

    static name: string
}

export interface IXsdTypeListIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeListIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeListIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeListIface

    static name: string
}

export interface IXsdTypeUnionIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeUnionIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeUnionIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeUnionIface

    static name: string
}

export interface IXsdTypeRestrictionDefIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionDefIface

    parent_iface: GObject.TypeInterface
    get_annotation: (self: IXsdTypeRestrictionDef) => IXsdAnnotation
    set_annotation: (self: IXsdTypeRestrictionDef, value: IXsdAnnotation) => void
}

export abstract class IXsdTypeRestrictionDefIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionDefIface

    static name: string
}

export interface IXsdTypeRestrictionMinExclusiveIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionMinExclusiveIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionMinExclusiveIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMinExclusiveIface

    static name: string
}

export interface IXsdTypeRestrictionMinInclusiveIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionMinInclusiveIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionMinInclusiveIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMinInclusiveIface

    static name: string
}

export interface IXsdTypeRestrictionMaxExclusiveIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionMaxExclusiveIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionMaxExclusiveIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMaxExclusiveIface

    static name: string
}

export interface IXsdTypeRestrictionMaxInclusiveIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionMaxInclusiveIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionMaxInclusiveIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMaxInclusiveIface

    static name: string
}

export interface IXsdTypeRestrictionTotalDigitsIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionTotalDigitsIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionTotalDigitsIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionTotalDigitsIface

    static name: string
}

export interface IXsdTypeRestrictionFractionDigitsIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionFractionDigitsIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionFractionDigitsIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionFractionDigitsIface

    static name: string
}

export interface IXsdTypeRestrictionLengthIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionLengthIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionLengthIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionLengthIface

    static name: string
}

export interface IXsdTypeRestrictionMinLengthIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionMinLengthIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionMinLengthIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMinLengthIface

    static name: string
}

export interface IXsdTypeRestrictionMaxLengthIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionMaxLengthIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionMaxLengthIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionMaxLengthIface

    static name: string
}

export interface IXsdTypeRestrictionEnumerationIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionEnumerationIface

    parent_iface: GObject.TypeInterface
    get_id: (self: IXsdTypeRestrictionEnumeration) => string | null
    set_id: (self: IXsdTypeRestrictionEnumeration, value: string | null) => void
    get_value: (self: IXsdTypeRestrictionEnumeration) => string | null
    set_value: (self: IXsdTypeRestrictionEnumeration, value: string | null) => void
}

export abstract class IXsdTypeRestrictionEnumerationIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionEnumerationIface

    static name: string
}

export interface IXsdTypeRestrictionWhiteSpaceIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpaceIface

    parent_iface: GObject.TypeInterface
    get_fixed: (self: IXsdTypeRestrictionWhiteSpace) => boolean
    set_fixed: (self: IXsdTypeRestrictionWhiteSpace, value: boolean) => void
    get_id: (self: IXsdTypeRestrictionWhiteSpace) => string | null
    set_id: (self: IXsdTypeRestrictionWhiteSpace, value: string | null) => void
    get_value: (self: IXsdTypeRestrictionWhiteSpace) => string | null
    set_value: (self: IXsdTypeRestrictionWhiteSpace, value: string | null) => void
}

export abstract class IXsdTypeRestrictionWhiteSpaceIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionWhiteSpaceIface

    static name: string
}

export interface IXsdTypeRestrictionPatternIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionPatternIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionPatternIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionPatternIface

    static name: string
}

export interface IXsdTypeRestrictionAssertionIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionAssertionIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionAssertionIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionAssertionIface

    static name: string
}

export interface IXsdTypeRestrictionExplicitTimezoneIface {

    // Own fields of GXml-0.18.GXml.IXsdTypeRestrictionExplicitTimezoneIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdTypeRestrictionExplicitTimezoneIface {

    // Own properties of GXml-0.18.GXml.IXsdTypeRestrictionExplicitTimezoneIface

    static name: string
}

export interface IXsdComplexTypeIface {

    // Own fields of GXml-0.18.GXml.IXsdComplexTypeIface

    parent_iface: GObject.TypeInterface
    get_abstract: (self: IXsdComplexType) => boolean
    set_abstract: (self: IXsdComplexType, value: boolean) => void
    get_block: (self: IXsdComplexType) => string | null
    set_block: (self: IXsdComplexType, value: string | null) => void
    get_final: (self: IXsdComplexType) => string | null
    set_final: (self: IXsdComplexType, value: string | null) => void
    get_mixed: (self: IXsdComplexType) => boolean
    set_mixed: (self: IXsdComplexType, value: boolean) => void
    get_name: (self: IXsdComplexType) => string | null
    set_name: (self: IXsdComplexType, value: string | null) => void
    get_default_attributes_apply: (self: IXsdComplexType) => boolean
    set_default_attributes_apply: (self: IXsdComplexType, value: boolean) => void
    get_content_type: (self: IXsdComplexType) => IXsdBaseContent
    set_content_type: (self: IXsdComplexType, value: IXsdBaseContent) => void
    get_type_attributes: (self: IXsdComplexType) => IXsdListAttributes
    get_group_attributes: (self: IXsdComplexType) => IXsdListAttributesGroup
}

export abstract class IXsdComplexTypeIface {

    // Own properties of GXml-0.18.GXml.IXsdComplexTypeIface

    static name: string
}

export interface IXsdExtensionIface {

    // Own fields of GXml-0.18.GXml.IXsdExtensionIface

    parent_iface: GObject.TypeInterface
    get_base: (self: IXsdExtension) => string | null
    set_base: (self: IXsdExtension, value: string | null) => void
}

export abstract class IXsdExtensionIface {

    // Own properties of GXml-0.18.GXml.IXsdExtensionIface

    static name: string
}

export interface IXsdElementIface {

    // Own fields of GXml-0.18.GXml.IXsdElementIface

    parent_iface: GObject.TypeInterface
    get_abstract: (self: IXsdElement) => boolean
    set_abstract: (self: IXsdElement, value: boolean) => void
    get_block: (self: IXsdElement) => string | null
    set_block: (self: IXsdElement, value: string | null) => void
    get_default: (self: IXsdElement) => string | null
    set_default: (self: IXsdElement, value: string | null) => void
    get_final: (self: IXsdElement) => string | null
    set_final: (self: IXsdElement, value: string | null) => void
    get_fixed: (self: IXsdElement) => string | null
    set_fixed: (self: IXsdElement, value: string | null) => void
    get_form: (self: IXsdElement) => string | null
    set_form: (self: IXsdElement, value: string | null) => void
    get_id: (self: IXsdElement) => string | null
    set_id: (self: IXsdElement, value?: string | null) => void
    get_maxOccurs: (self: IXsdElement) => string | null
    set_maxOccurs: (self: IXsdElement, value: string | null) => void
    get_minOccurs: (self: IXsdElement) => string | null
    set_minOccurs: (self: IXsdElement, value: string | null) => void
    get_name: (self: IXsdElement) => string | null
    set_name: (self: IXsdElement, value: string | null) => void
    get_nillable: (self: IXsdElement) => boolean
    set_nillable: (self: IXsdElement, value: boolean) => void
    get_ref: (self: IXsdElement) => string | null
    set_ref: (self: IXsdElement, value: string | null) => void
    get_substitution_group: (self: IXsdElement) => DomTokenList
    set_substitution_group: (self: IXsdElement, value: DomTokenList) => void
    get_target_namespace: (self: IXsdElement) => string | null
    set_target_namespace: (self: IXsdElement, value: string | null) => void
    get_object_type: (self: IXsdElement) => string | null
    set_object_type: (self: IXsdElement, value: string | null) => void
    get_anotation: (self: IXsdElement) => IXsdAnnotation
    set_anotation: (self: IXsdElement, value: IXsdAnnotation) => void
    get_simple_type: (self: IXsdElement) => IXsdSimpleType
    set_simple_type: (self: IXsdElement, value: IXsdSimpleType) => void
    get_complex_type: (self: IXsdElement) => IXsdComplexType
    set_complex_type: (self: IXsdElement, value: IXsdComplexType) => void
}

export abstract class IXsdElementIface {

    // Own properties of GXml-0.18.GXml.IXsdElementIface

    static name: string
}

export interface IXsdAnnotationIface {

    // Own fields of GXml-0.18.GXml.IXsdAnnotationIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdAnnotationIface {

    // Own properties of GXml-0.18.GXml.IXsdAnnotationIface

    static name: string
}

export interface IXsdBaseContentIface {

    // Own fields of GXml-0.18.GXml.IXsdBaseContentIface

    parent_iface: GObject.TypeInterface
    get_anotation: (self: IXsdBaseContent) => IXsdAnnotation
    set_anotation: (self: IXsdBaseContent, value: IXsdAnnotation) => void
}

export abstract class IXsdBaseContentIface {

    // Own properties of GXml-0.18.GXml.IXsdBaseContentIface

    static name: string
}

export interface IXsdSimpleContentIface {

    // Own fields of GXml-0.18.GXml.IXsdSimpleContentIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdSimpleContentIface {

    // Own properties of GXml-0.18.GXml.IXsdSimpleContentIface

    static name: string
}

export interface IXsdComplexContentIface {

    // Own fields of GXml-0.18.GXml.IXsdComplexContentIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdComplexContentIface {

    // Own properties of GXml-0.18.GXml.IXsdComplexContentIface

    static name: string
}

export interface IXsdOpenContentIface {

    // Own fields of GXml-0.18.GXml.IXsdOpenContentIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdOpenContentIface {

    // Own properties of GXml-0.18.GXml.IXsdOpenContentIface

    static name: string
}

export interface IXsdBaseAttributeIface {

    // Own fields of GXml-0.18.GXml.IXsdBaseAttributeIface

    parent_iface: GObject.TypeInterface
    get_anotation: (self: IXsdBaseAttribute) => IXsdAnnotation
    set_anotation: (self: IXsdBaseAttribute, value: IXsdAnnotation) => void
}

export abstract class IXsdBaseAttributeIface {

    // Own properties of GXml-0.18.GXml.IXsdBaseAttributeIface

    static name: string
}

export interface IXsdAttributeIface {

    // Own fields of GXml-0.18.GXml.IXsdAttributeIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdAttributeIface {

    // Own properties of GXml-0.18.GXml.IXsdAttributeIface

    static name: string
}

export interface IXsdAttributeGroupIface {

    // Own fields of GXml-0.18.GXml.IXsdAttributeGroupIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdAttributeGroupIface {

    // Own properties of GXml-0.18.GXml.IXsdAttributeGroupIface

    static name: string
}

export interface IXsdListIface {

    // Own fields of GXml-0.18.GXml.IXsdListIface

    parent_iface: GObject.TypeInterface
    get_item: (self: IXsdList, index: number) => DomElement | null
    append: (self: IXsdList, element: DomElement) => void
    remove: (self: IXsdList, index: number) => void
    index_of: (self: IXsdList, element: DomElement) => number
    get_element: (self: IXsdList) => DomElement
    set_element: (self: IXsdList, value: DomElement) => void
    get_items_type: (self: IXsdList) => GObject.GType
    set_items_type: (self: IXsdList, value: GObject.GType) => void
    get_items_name: (self: IXsdList) => GObject.GType
    set_items_name: (self: IXsdList, value: GObject.GType) => void
    get_length: (self: IXsdList) => number
}

export abstract class IXsdListIface {

    // Own properties of GXml-0.18.GXml.IXsdListIface

    static name: string
}

export interface IXsdListElementsIface {

    // Own fields of GXml-0.18.GXml.IXsdListElementsIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListElementsIface {

    // Own properties of GXml-0.18.GXml.IXsdListElementsIface

    static name: string
}

export interface IXsdListSimpleTypesIface {

    // Own fields of GXml-0.18.GXml.IXsdListSimpleTypesIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListSimpleTypesIface {

    // Own properties of GXml-0.18.GXml.IXsdListSimpleTypesIface

    static name: string
}

export interface IXsdListComplexTypesIface {

    // Own fields of GXml-0.18.GXml.IXsdListComplexTypesIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListComplexTypesIface {

    // Own properties of GXml-0.18.GXml.IXsdListComplexTypesIface

    static name: string
}

export interface IXsdListAttributesIface {

    // Own fields of GXml-0.18.GXml.IXsdListAttributesIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListAttributesIface {

    // Own properties of GXml-0.18.GXml.IXsdListAttributesIface

    static name: string
}

export interface IXsdListAttributesGroupIface {

    // Own fields of GXml-0.18.GXml.IXsdListAttributesGroupIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListAttributesGroupIface {

    // Own properties of GXml-0.18.GXml.IXsdListAttributesGroupIface

    static name: string
}

export interface IXsdListTypeRestrictionEnumerationsIface {

    // Own fields of GXml-0.18.GXml.IXsdListTypeRestrictionEnumerationsIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListTypeRestrictionEnumerationsIface {

    // Own properties of GXml-0.18.GXml.IXsdListTypeRestrictionEnumerationsIface

    static name: string
}

export interface IXsdListTypeRestrictionWhiteSpacesIface {

    // Own fields of GXml-0.18.GXml.IXsdListTypeRestrictionWhiteSpacesIface

    parent_iface: GObject.TypeInterface
}

export abstract class IXsdListTypeRestrictionWhiteSpacesIface {

    // Own properties of GXml-0.18.GXml.IXsdListTypeRestrictionWhiteSpacesIface

    static name: string
}

export interface SerializableIface {

    // Own fields of GXml-0.18.GXml.SerializableIface

    parent_iface: GObject.TypeInterface
    get_enable_unknown_serializable_property: (self: Serializable) => boolean
    set_default_namespace: (self: Serializable, node: Node) => boolean
    serialize_use_xml_node_value: (self: Serializable) => boolean
    node_name: (self: Serializable) => string | null
    property_use_nick: (self: Serializable) => boolean
    serialize: (self: Serializable, node: Node) => Node | null
    serialize_property: (self: Serializable, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: Serializable, node: Node) => boolean
    deserialize_property: (self: Serializable, property_node: Node) => boolean
    find_property_spec: (self: Serializable, property_name: string | null) => GObject.ParamSpec | null
    default_find_property_spec: (self: Serializable, property_name: string | null) => GObject.ParamSpec | null
    list_serializable_properties: (self: Serializable) => GObject.ParamSpec[]
    default_list_serializable_properties: (self: Serializable) => GObject.ParamSpec[]
    get_unknown_serializable_properties: (self: Serializable) => Gee.Map
    get_unknown_serializable_nodes: (self: Serializable) => Gee.Collection
    get_serialized_xml_node_value: (self: Serializable) => string | null
    set_serialized_xml_node_value: (self: Serializable, value?: string | null) => void
}

export abstract class SerializableIface {

    // Own properties of GXml-0.18.GXml.SerializableIface

    static name: string
}

export interface SerializableCollectionIface {

    // Own fields of GXml-0.18.GXml.SerializableCollectionIface

    parent_iface: GObject.TypeInterface
    deserialize_proceed: (self: SerializableCollection) => boolean
    deserialized: (self: SerializableCollection) => boolean
    deserialize_node: (self: SerializableCollection, node: Node) => boolean
    deserialize_children: (self: SerializableCollection) => boolean
    is_collection: (self: SerializableCollection) => boolean
}

export abstract class SerializableCollectionIface {

    // Own properties of GXml-0.18.GXml.SerializableCollectionIface

    static name: string
}

export interface SerializableMapDualKeyIface {

    // Own fields of GXml-0.18.GXml.SerializableMapDualKeyIface

    parent_iface: GObject.TypeInterface
    get_map_primary_key: (self: SerializableMapDualKey) => any | null
    get_map_secondary_key: (self: SerializableMapDualKey) => any | null
}

export abstract class SerializableMapDualKeyIface {

    // Own properties of GXml-0.18.GXml.SerializableMapDualKeyIface

    static name: string
}

export interface SerializableMapKeyIface {

    // Own fields of GXml-0.18.GXml.SerializableMapKeyIface

    parent_iface: GObject.TypeInterface
    get_map_key: (self: SerializableMapKey) => any | null
}

export abstract class SerializableMapKeyIface {

    // Own properties of GXml-0.18.GXml.SerializableMapKeyIface

    static name: string
}

export interface SerializablePropertyIface {

    // Own fields of GXml-0.18.GXml.SerializablePropertyIface

    parent_iface: GObject.TypeInterface
    get_serializable_property_value: (self: SerializableProperty) => string | null
    set_serializable_property_value: (self: SerializableProperty, val?: string | null) => void
    deserialize_property: (self: SerializableProperty, property_node: Node, prop: GObject.ParamSpec, nick: boolean) => boolean
    serialize_property: (self: SerializableProperty, property_node: Node, prop: GObject.ParamSpec, nick: boolean) => Node | null
}

export abstract class SerializablePropertyIface {

    // Own properties of GXml-0.18.GXml.SerializablePropertyIface

    static name: string
}

export interface TextIface {

    // Own fields of GXml-0.18.GXml.TextIface

    parent_iface: GObject.TypeInterface
    get_str: (self: Text) => string | null
    set_str: (self: Text, value: string | null) => void
}

export abstract class TextIface {

    // Own properties of GXml-0.18.GXml.TextIface

    static name: string
}

export interface XPathContextIface {

    // Own fields of GXml-0.18.GXml.XPathContextIface

    parent_iface: GObject.TypeInterface
    evaluate: (self: XPathContext, expression: string | null, resolver?: Gee.List | null) => XPathObject
}

export abstract class XPathContextIface {

    // Own properties of GXml-0.18.GXml.XPathContextIface

    static name: string
}

export interface XPathObjectIface {

    // Own fields of GXml-0.18.GXml.XPathObjectIface

    parent_iface: GObject.TypeInterface
    get_object_type: (self: XPathObject) => XPathObjectType
    get_boolean_value: (self: XPathObject) => boolean
    get_string_value: (self: XPathObject) => string | null
    get_number_value: (self: XPathObject) => number
    get_nodeset: (self: XPathObject) => DomHTMLCollection
}

export abstract class XPathObjectIface {

    // Own properties of GXml-0.18.GXml.XPathObjectIface

    static name: string
}

/**
 * Name of the imported GIR library
 * @see https://gitlab.gnome.org/GNOME/gjs/-/blob/master/gi/ns.cpp#L188
 */
export const __name__: string
/**
 * Version of the imported GIR library
 * @see https://gitlab.gnome.org/GNOME/gjs/-/blob/master/gi/ns.cpp#L189
 */
export const __version__: string
// END