// @ts-nocheck

/*
 * Type Definitions for Gjs (https://gjs.guide/)
 *
 * These type definitions are automatically generated, do not edit them by hand.
 * If you found a bug fix it in ts-for-gir itself or create a bug report on https://github.com/sammydre/ts-for-gjs
 */
/**
 * WebKit2WebExtension-5.0
 */

import type * as Gjs from './Gjs';
import type Soup from './Soup-3.0';
import type Gio from './Gio-2.0';
import type GObject from './GObject-2.0';
import type GLib from './GLib-2.0';
import type JavaScriptCore from './JavaScriptCore-5.0';
import type Gtk from './Gtk-4.0';
import type Gsk from './Gsk-4.0';
import type Graphene from './Graphene-1.0';
import type Gdk from './Gdk-4.0';
import type cairo from './cairo-1.0';
import type PangoCairo from './PangoCairo-1.0';
import type Pango from './Pango-1.0';
import type HarfBuzz from './HarfBuzz-0.0';
import type GdkPixbuf from './GdkPixbuf-2.0';
import type GModule from './GModule-2.0';

export namespace WebKit2WebExtension {

/**
 * Enum values used to denote the various levels of console messages.
 */
enum ConsoleMessageLevel {
    /**
     * Information message.
     */
    INFO,
    /**
     * Log message.
     */
    LOG,
    /**
     * Warning message.
     */
    WARNING,
    /**
     * Error message.
     */
    ERROR,
    /**
     * Debug message.
     */
    DEBUG,
}
/**
 * Enum values used to denote the various sources of console messages.
 */
enum ConsoleMessageSource {
    /**
     * Message produced by JavaScript.
     */
    JAVASCRIPT,
    /**
     * Network messages.
     */
    NETWORK,
    /**
     * Messages produced by console API.
     */
    CONSOLE_API,
    /**
     * Security messages.
     */
    SECURITY,
    /**
     * Other messages.
     */
    OTHER,
}
/**
 * Enum values used to denote the stock actions for
 * #WebKitContextMenuItem<!-- -->s
 */
enum ContextMenuAction {
    /**
     * No action, used by separator menu items.
     */
    NO_ACTION,
    /**
     * Open current link.
     */
    OPEN_LINK,
    /**
     * Open current link in a new window.
     */
    OPEN_LINK_IN_NEW_WINDOW,
    /**
     * Download link destination.
     */
    DOWNLOAD_LINK_TO_DISK,
    /**
     * Copy link location to the clipboard.
     */
    COPY_LINK_TO_CLIPBOARD,
    /**
     * Open current image in a new window.
     */
    OPEN_IMAGE_IN_NEW_WINDOW,
    /**
     * Download current image.
     */
    DOWNLOAD_IMAGE_TO_DISK,
    /**
     * Copy current image to the clipboard.
     */
    COPY_IMAGE_TO_CLIPBOARD,
    /**
     * Copy current image location to the clipboard.
     */
    COPY_IMAGE_URL_TO_CLIPBOARD,
    /**
     * Open current frame in a new window.
     */
    OPEN_FRAME_IN_NEW_WINDOW,
    /**
     * Load the previous history item.
     */
    GO_BACK,
    /**
     * Load the next history item.
     */
    GO_FORWARD,
    /**
     * Stop any ongoing loading operation.
     */
    STOP,
    /**
     * Reload the contents of current view.
     */
    RELOAD,
    /**
     * Copy current selection the clipboard.
     */
    COPY,
    /**
     * Cut current selection to the clipboard.
     */
    CUT,
    /**
     * Paste clipboard contents.
     */
    PASTE,
    /**
     * Delete current selection.
     */
    DELETE,
    /**
     * Select all text.
     */
    SELECT_ALL,
    /**
     * Input methods menu.
     */
    INPUT_METHODS,
    /**
     * Unicode menu.
     */
    UNICODE,
    /**
     * A proposed replacement for a misspelled word.
     */
    SPELLING_GUESS,
    /**
     * An indicator that spellchecking found no proposed replacements.
     */
    NO_GUESSES_FOUND,
    /**
     * Causes the spellchecker to ignore the word for this session.
     */
    IGNORE_SPELLING,
    /**
     * Causes the spellchecker to add the word to the dictionary.
     */
    LEARN_SPELLING,
    /**
     * Ignore grammar.
     */
    IGNORE_GRAMMAR,
    /**
     * Font options menu.
     */
    FONT_MENU,
    /**
     * Bold.
     */
    BOLD,
    /**
     * Italic.
     */
    ITALIC,
    /**
     * Underline.
     */
    UNDERLINE,
    /**
     * Outline.
     */
    OUTLINE,
    /**
     * Open current element in the inspector.
     */
    INSPECT_ELEMENT,
    /**
     * Open current video element in a new window.
     */
    OPEN_VIDEO_IN_NEW_WINDOW,
    /**
     * Open current audio element in a new window.
     */
    OPEN_AUDIO_IN_NEW_WINDOW,
    /**
     * Copy video link location in to the clipboard.
     */
    COPY_VIDEO_LINK_TO_CLIPBOARD,
    /**
     * Copy audio link location in to the clipboard.
     */
    COPY_AUDIO_LINK_TO_CLIPBOARD,
    /**
     * Enable or disable media controls.
     */
    TOGGLE_MEDIA_CONTROLS,
    /**
     * Enable or disable media loop.
     */
    TOGGLE_MEDIA_LOOP,
    /**
     * Show current video element in fullscreen mode.
     */
    ENTER_VIDEO_FULLSCREEN,
    /**
     * Play current media element.
     */
    MEDIA_PLAY,
    /**
     * Pause current media element.
     */
    MEDIA_PAUSE,
    /**
     * Mute current media element.
     */
    MEDIA_MUTE,
    /**
     * Download video to disk. Since 2.2
     */
    DOWNLOAD_VIDEO_TO_DISK,
    /**
     * Download audio to disk. Since 2.2
     */
    DOWNLOAD_AUDIO_TO_DISK,
    /**
     * Insert an emoji. Since 2.26
     */
    INSERT_EMOJI,
    /**
     * Paste clipboard contents as plain text. Since 2.30
     */
    PASTE_AS_PLAIN_TEXT,
    /**
     * Custom action defined by applications.
     */
    CUSTOM,
}
/**
 * Used to indicate a particular stage in form submission. See
 * #WebKitWebPage::will-submit-form.
 */
enum FormSubmissionStep {
    /**
     * indicates the form's
     * DOM submit event is about to be emitted.
     */
    SEND_DOM_EVENT,
    /**
     * indicates the form is about
     * to be submitted.
     */
    COMPLETE,
}
/**
 * Enum values used to denote errors happening when sending user messages.
 */
enum UserMessageError {
    /**
     * The message was not handled by the receiver.
     */
    USER_MESSAGE_UNHANDLED_MESSAGE,
}
/**
 * Enum values with flags representing the context of a #WebKitHitTestResult.
 * @bitfield 
 */
enum HitTestResultContext {
    /**
     * anywhere in the document.
     */
    DOCUMENT,
    /**
     * a hyperlink element.
     */
    LINK,
    /**
     * an image element.
     */
    IMAGE,
    /**
     * a video or audio element.
     */
    MEDIA,
    /**
     * an editable element
     */
    EDITABLE,
    /**
     * a scrollbar element.
     */
    SCROLLBAR,
    /**
     * a selected element. Since 2.8
     */
    SELECTION,
}
const DOM_CSS_RULE_CHARSET_RULE: number
const DOM_CSS_RULE_FONT_FACE_RULE: number
const DOM_CSS_RULE_IMPORT_RULE: number
const DOM_CSS_RULE_MEDIA_RULE: number
const DOM_CSS_RULE_PAGE_RULE: number
const DOM_CSS_RULE_STYLE_RULE: number
const DOM_CSS_RULE_UNKNOWN_RULE: number
const DOM_CSS_VALUE_CSS_CUSTOM: number
const DOM_CSS_VALUE_CSS_INHERIT: number
const DOM_CSS_VALUE_CSS_PRIMITIVE_VALUE: number
const DOM_CSS_VALUE_CSS_VALUE_LIST: number
const DOM_ELEMENT_ALLOW_KEYBOARD_INPUT: number
const DOM_EVENT_AT_TARGET: number
const DOM_EVENT_BLUR: number
const DOM_EVENT_BUBBLING_PHASE: number
const DOM_EVENT_CAPTURING_PHASE: number
const DOM_EVENT_CHANGE: number
const DOM_EVENT_CLICK: number
const DOM_EVENT_DBLCLICK: number
const DOM_EVENT_DRAGDROP: number
const DOM_EVENT_FOCUS: number
const DOM_EVENT_KEYDOWN: number
const DOM_EVENT_KEYPRESS: number
const DOM_EVENT_KEYUP: number
const DOM_EVENT_MOUSEDOWN: number
const DOM_EVENT_MOUSEDRAG: number
const DOM_EVENT_MOUSEMOVE: number
const DOM_EVENT_MOUSEOUT: number
const DOM_EVENT_MOUSEOVER: number
const DOM_EVENT_MOUSEUP: number
const DOM_EVENT_NONE: number
const DOM_EVENT_SELECT: number
const DOM_KEYBOARD_EVENT_KEY_LOCATION_LEFT: number
const DOM_KEYBOARD_EVENT_KEY_LOCATION_NUMPAD: number
const DOM_KEYBOARD_EVENT_KEY_LOCATION_RIGHT: number
const DOM_KEYBOARD_EVENT_KEY_LOCATION_STANDARD: number
const DOM_NODE_ATTRIBUTE_NODE: number
const DOM_NODE_CDATA_SECTION_NODE: number
const DOM_NODE_COMMENT_NODE: number
const DOM_NODE_DOCUMENT_FRAGMENT_NODE: number
const DOM_NODE_DOCUMENT_NODE: number
const DOM_NODE_DOCUMENT_POSITION_CONTAINED_BY: number
const DOM_NODE_DOCUMENT_POSITION_CONTAINS: number
const DOM_NODE_DOCUMENT_POSITION_DISCONNECTED: number
const DOM_NODE_DOCUMENT_POSITION_FOLLOWING: number
const DOM_NODE_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number
const DOM_NODE_DOCUMENT_POSITION_PRECEDING: number
const DOM_NODE_DOCUMENT_TYPE_NODE: number
const DOM_NODE_ELEMENT_NODE: number
const DOM_NODE_ENTITY_NODE: number
const DOM_NODE_ENTITY_REFERENCE_NODE: number
/**
 * Accept the node. Use this macro as return value of webkit_dom_node_filter_accept_node()
 * implementation to accept the given #WebKitDOMNode
 */
const DOM_NODE_FILTER_ACCEPT: number
/**
 * Reject the node. Use this macro as return value of webkit_dom_node_filter_accept_node()
 * implementation to reject the given #WebKitDOMNode. The children of the given node will
 * be rejected too.
 */
const DOM_NODE_FILTER_REJECT: number
/**
 * Show all nodes.
 */
const DOM_NODE_FILTER_SHOW_ALL: number
/**
 * Show #WebKitDOMAttr nodes.
 */
const DOM_NODE_FILTER_SHOW_ATTRIBUTE: number
/**
 * Show #WebKitDOMCDataSection nodes.
 */
const DOM_NODE_FILTER_SHOW_CDATA_SECTION: number
/**
 * Show #WebKitDOMComment nodes.
 */
const DOM_NODE_FILTER_SHOW_COMMENT: number
/**
 * Show #WebKitDOMDocument nodes.
 */
const DOM_NODE_FILTER_SHOW_DOCUMENT: number
/**
 * Show #WebKitDOMDocumentFragment nodes.
 */
const DOM_NODE_FILTER_SHOW_DOCUMENT_FRAGMENT: number
/**
 * Show #WebKitDOMDocumentType nodes.
 */
const DOM_NODE_FILTER_SHOW_DOCUMENT_TYPE: number
/**
 * Show #WebKitDOMElement nodes.
 */
const DOM_NODE_FILTER_SHOW_ELEMENT: number
/**
 * Show #WebKitDOMEntity nodes.
 */
const DOM_NODE_FILTER_SHOW_ENTITY: number
/**
 * Show #WebKitDOMEntityReference nodes.
 */
const DOM_NODE_FILTER_SHOW_ENTITY_REFERENCE: number
/**
 * Show #WebKitDOMNotation nodes.
 */
const DOM_NODE_FILTER_SHOW_NOTATION: number
/**
 * Show #WebKitDOMProcessingInstruction nodes.
 */
const DOM_NODE_FILTER_SHOW_PROCESSING_INSTRUCTION: number
/**
 * Show #WebKitDOMText nodes.
 */
const DOM_NODE_FILTER_SHOW_TEXT: number
/**
 * Skip the node. Use this macro as return value of webkit_dom_node_filter_accept_node()
 * implementation to skip the given #WebKitDOMNode. The children of the given node will
 * not be skipped.
 */
const DOM_NODE_FILTER_SKIP: number
const DOM_NODE_PROCESSING_INSTRUCTION_NODE: number
const DOM_NODE_TEXT_NODE: number
const DOM_RANGE_END_TO_END: number
const DOM_RANGE_END_TO_START: number
const DOM_RANGE_NODE_AFTER: number
const DOM_RANGE_NODE_BEFORE: number
const DOM_RANGE_NODE_BEFORE_AND_AFTER: number
const DOM_RANGE_NODE_INSIDE: number
const DOM_RANGE_START_TO_END: number
const DOM_RANGE_START_TO_START: number
const DOM_XPATH_RESULT_ANY_TYPE: number
const DOM_XPATH_RESULT_ANY_UNORDERED_NODE_TYPE: number
const DOM_XPATH_RESULT_BOOLEAN_TYPE: number
const DOM_XPATH_RESULT_FIRST_ORDERED_NODE_TYPE: number
const DOM_XPATH_RESULT_NUMBER_TYPE: number
const DOM_XPATH_RESULT_ORDERED_NODE_ITERATOR_TYPE: number
const DOM_XPATH_RESULT_ORDERED_NODE_SNAPSHOT_TYPE: number
const DOM_XPATH_RESULT_STRING_TYPE: number
const DOM_XPATH_RESULT_UNORDERED_NODE_ITERATOR_TYPE: number
const DOM_XPATH_RESULT_UNORDERED_NODE_SNAPSHOT_TYPE: number
/**
 * Type definition for a function that will be called to initialize
 * the web extension when the web process starts.
 * @callback 
 * @param extension a #WebKitWebExtension
 */
interface WebExtensionInitializeFunction {
    (extension: WebExtension): void
}
/**
 * Type definition for a function that will be called to initialize
 * the web extensions when the web process starts, and which receives
 * as additional argument the user data set with
 * webkit_web_context_set_web_extensions_initialization_user_data().
 * @callback 
 * @param extension a #WebKitWebExtension
 * @param user_data a #GVariant
 */
interface WebExtensionInitializeWithUserDataFunction {
    (extension: WebExtension, user_data: GLib.Variant): void
}
interface DOMEventTarget_ConstructProps extends GObject.Object_ConstructProps {
}

interface DOMEventTarget {

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTarget

    /**
     * Version of webkit_dom_event_target_add_event_listener() using a closure
     * instead of a callbacks for easier binding in other languages.
     * @param event_name A #gchar
     * @param handler A #GClosure
     * @param use_capture A #gboolean
     */
    add_event_listener(event_name: string, handler: GObject.TClosure, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    /**
     * Version of webkit_dom_event_target_remove_event_listener() using a closure
     * instead of a callbacks for easier binding in other languages.
     * @param event_name A #gchar
     * @param handler A #GClosure
     * @param use_capture A #gboolean
     */
    remove_event_listener(event_name: string, handler: GObject.TClosure, use_capture: boolean): boolean

    // Own virtual methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTarget

    vfunc_add_event_listener(event_name: string, handler: GObject.TClosure, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: GObject.TClosure, use_capture: boolean): boolean

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTarget

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMEventTarget extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTarget

    static name: string
    static $gtype: GObject.GType<DOMEventTarget>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTarget

    constructor(config?: DOMEventTarget_ConstructProps) 
    _init(config?: DOMEventTarget_ConstructProps): void
}

interface DOMNodeFilter_ConstructProps extends GObject.Object_ConstructProps {
}

interface DOMNodeFilter {

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilter

    accept_node(node: DOMNode): number

    // Own virtual methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilter

    vfunc_accept_node(node: DOMNode): number

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilter

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMNodeFilter extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilter

    static name: string
    static $gtype: GObject.GType<DOMNodeFilter>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilter

    constructor(config?: DOMNodeFilter_ConstructProps) 
    _init(config?: DOMNodeFilter_ConstructProps): void
}

interface DOMXPathNSResolver_ConstructProps extends GObject.Object_ConstructProps {
}

interface DOMXPathNSResolver {

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolver

    lookup_namespace_uri(prefix: string): string

    // Own virtual methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolver

    vfunc_lookup_namespace_uri(prefix: string): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolver

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMXPathNSResolver extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolver

    static name: string
    static $gtype: GObject.GType<DOMXPathNSResolver>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolver

    constructor(config?: DOMXPathNSResolver_ConstructProps) 
    _init(config?: DOMXPathNSResolver_ConstructProps): void
}

interface ContextMenu_ConstructProps extends GObject.Object_ConstructProps {
}

interface ContextMenu {

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenu

    /**
     * Adds `item` at the end of the `menu`.
     * @param item the #WebKitContextMenuItem to add
     */
    append(item: ContextMenuItem): void
    /**
     * Gets the first item in the `menu`.
     */
    first(): ContextMenuItem
    /**
     * Gets the item at the given position in the `menu`.
     * @param position the position of the item, counting from 0
     */
    get_item_at_position(position: number): ContextMenuItem
    /**
     * Returns the item list of `menu`.
     */
    get_items(): ContextMenuItem[]
    /**
     * Gets the length of the `menu`.
     */
    get_n_items(): number
    /**
     * Gets the user data of `menu`.
     * This function can be used from the UI Process to get user data previously set
     * from the Web Process with webkit_context_menu_set_user_data().
     */
    get_user_data(): GLib.Variant
    /**
     * Inserts `item` into the `menu` at the given position.
     * If `position` is negative, or is larger than the number of items
     * in the #WebKitContextMenu, the item is added on to the end of
     * the `menu`. The first position is 0.
     * @param item the #WebKitContextMenuItem to add
     * @param position the position to insert the item
     */
    insert(item: ContextMenuItem, position: number): void
    /**
     * Gets the last item in the `menu`.
     */
    last(): ContextMenuItem
    /**
     * Moves `item` to the given position in the `menu`.
     * If `position` is negative, or is larger than the number of items
     * in the #WebKitContextMenu, the item is added on to the end of
     * the `menu`.
     * The first position is 0.
     * @param item the #WebKitContextMenuItem to add
     * @param position the new position to move the item
     */
    move_item(item: ContextMenuItem, position: number): void
    /**
     * Adds `item` at the beginning of the `menu`.
     * @param item the #WebKitContextMenuItem to add
     */
    prepend(item: ContextMenuItem): void
    /**
     * Removes `item` from the `menu`.
     * See also webkit_context_menu_remove_all() to remove all items.
     * @param item the #WebKitContextMenuItem to remove
     */
    remove(item: ContextMenuItem): void
    /**
     * Removes all items of the `menu`.
     */
    remove_all(): void
    /**
     * Sets user data to `menu`.
     * This function can be used from a Web Process extension to set user data
     * that can be retrieved from the UI Process using webkit_context_menu_get_user_data().
     * If the `user_data` #GVariant is floating, it is consumed.
     * @param user_data a #GVariant
     */
    set_user_data(user_data: GLib.Variant): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenu

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class ContextMenu extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenu

    static name: string
    static $gtype: GObject.GType<ContextMenu>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenu

    constructor(config?: ContextMenu_ConstructProps) 
    /**
     * Creates a new #WebKitContextMenu object to be used as a submenu of an existing
     * #WebKitContextMenu. The context menu of a #WebKitWebView is created by the view
     * and passed as an argument of #WebKitWebView::context-menu signal.
     * To add items to the menu use webkit_context_menu_prepend(),
     * webkit_context_menu_append() or webkit_context_menu_insert().
     * See also webkit_context_menu_new_with_items() to create a #WebKitContextMenu with
     * a list of initial items.
     * @constructor 
     */
    constructor() 
    /**
     * Creates a new #WebKitContextMenu object to be used as a submenu of an existing
     * #WebKitContextMenu. The context menu of a #WebKitWebView is created by the view
     * and passed as an argument of #WebKitWebView::context-menu signal.
     * To add items to the menu use webkit_context_menu_prepend(),
     * webkit_context_menu_append() or webkit_context_menu_insert().
     * See also webkit_context_menu_new_with_items() to create a #WebKitContextMenu with
     * a list of initial items.
     * @constructor 
     */
    static new(): ContextMenu
    /**
     * Creates a new #WebKitContextMenu object to be used as a submenu of an existing
     * #WebKitContextMenu with the given initial items.
     * See also webkit_context_menu_new()
     * @constructor 
     * @param items a #GList of #WebKitContextMenuItem
     */
    static new_with_items(items: ContextMenuItem[]): ContextMenu
    _init(config?: ContextMenu_ConstructProps): void
}

interface ContextMenuItem_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
}

interface ContextMenuItem {

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItem

    /**
     * Gets the action associated to `item` as a #GAction.
     */
    get_gaction(): Gio.Action
    /**
     * Gets the #WebKitContextMenuAction of `item`. If the #WebKitContextMenuItem was not
     * created for a stock action %WEBKIT_CONTEXT_MENU_ACTION_CUSTOM will be
     * returned. If the #WebKitContextMenuItem is a separator %WEBKIT_CONTEXT_MENU_ACTION_NO_ACTION
     * will be returned.
     */
    get_stock_action(): ContextMenuAction
    /**
     * Gets the submenu of `item`.
     */
    get_submenu(): ContextMenu
    /**
     * Checks whether `item` is a separator.
     */
    is_separator(): boolean
    /**
     * Sets or replaces the `item` submenu. If `submenu` is %NULL the current
     * submenu of `item` is removed.
     * @param submenu a #WebKitContextMenu
     */
    set_submenu(submenu: ContextMenu | null): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItem

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class ContextMenuItem extends GObject.InitiallyUnowned {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItem

    static name: string
    static $gtype: GObject.GType<ContextMenuItem>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItem

    constructor(config?: ContextMenuItem_ConstructProps) 
    /**
     * Creates a new #WebKitContextMenuItem for the given `action` and `label`. On activation
     * `target` will be passed as parameter to the callback.
     * @constructor 
     * @param action a #GAction
     * @param label the menu item label text
     * @param target a #GVariant to use as the action target
     */
    static new_from_gaction(action: Gio.Action, label: string, target: GLib.Variant | null): ContextMenuItem
    /**
     * Creates a new #WebKitContextMenuItem for the given stock action.
     * Stock actions are handled automatically by WebKit so that, for example,
     * when a menu item created with a %WEBKIT_CONTEXT_MENU_ACTION_STOP is
     * activated the action associated will be handled by WebKit and the current
     * load operation will be stopped. You can get the #GAction of a
     * #WebKitContextMenuItem created with a #WebKitContextMenuAction with
     * webkit_context_menu_item_get_gaction() and connect to the #GSimpleAction::activate signal
     * to be notified when the item is activated, but you can't prevent the associated
     * action from being performed.
     * @constructor 
     * @param action a #WebKitContextMenuAction stock action
     */
    static new_from_stock_action(action: ContextMenuAction): ContextMenuItem
    /**
     * Creates a new #WebKitContextMenuItem for the given stock action using the given `label`.
     * Stock actions have a predefined label, this method can be used to create a
     * #WebKitContextMenuItem for a #WebKitContextMenuAction but using a custom label.
     * @constructor 
     * @param action a #WebKitContextMenuAction stock action
     * @param label a custom label text to use instead of the predefined one
     */
    static new_from_stock_action_with_label(action: ContextMenuAction, label: string): ContextMenuItem
    /**
     * Creates a new #WebKitContextMenuItem representing a separator.
     * @constructor 
     */
    static new_separator(): ContextMenuItem
    /**
     * Creates a new #WebKitContextMenuItem using the given `label` with a submenu.
     * @constructor 
     * @param label the menu item label text
     * @param submenu a #WebKitContextMenu to set
     */
    static new_with_submenu(label: string, submenu: ContextMenu): ContextMenuItem
    _init(config?: ContextMenuItem_ConstructProps): void
}

interface DOMAttr_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    value?: string | null
}

interface DOMAttr extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    readonly local_name: string
    readonly name: string
    readonly namespace_uri: string
    readonly owner_element: DOMElement
    readonly prefix: string
    readonly specified: boolean
    value: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    parent_instance: DOMNode

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    get_local_name(): string
    get_name(): string
    get_namespace_uri(): string
    get_owner_element(): DOMElement
    get_prefix(): string
    get_specified(): boolean
    get_value(): string
    set_value(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    connect(sigName: "notify::local-name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::owner-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-element", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::specified", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::specified", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMAttr extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    static name: string
    static $gtype: GObject.GType<DOMAttr>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttr

    constructor(config?: DOMAttr_ConstructProps) 
    _init(config?: DOMAttr_ConstructProps): void
}

interface DOMBlob_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMBlob {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlob

    readonly size: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlob

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlob

    get_size(): number

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlob

    connect(sigName: "notify::size", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMBlob extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlob

    static name: string
    static $gtype: GObject.GType<DOMBlob>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlob

    constructor(config?: DOMBlob_ConstructProps) 
    _init(config?: DOMBlob_ConstructProps): void
}

interface DOMCDATASection_ConstructProps extends DOMEventTarget_ConstructProps, DOMText_ConstructProps {
}

interface DOMCDATASection extends DOMEventTarget {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCDATASection

    parent_instance: DOMText

    // Conflicting methods

    get_data(...args: any[]): any
    set_data(...args: any[]): any

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCDATASection

    connect(sigName: "notify::whole-text", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::whole-text", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCDATASection extends DOMText {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCDATASection

    static name: string
    static $gtype: GObject.GType<DOMCDATASection>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCDATASection

    constructor(config?: DOMCDATASection_ConstructProps) 
    _init(config?: DOMCDATASection_ConstructProps): void
}

interface DOMCSSRule_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    css_text?: string | null
}

interface DOMCSSRule {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    css_text: string
    readonly parent_rule: DOMCSSRule
    readonly parent_style_sheet: DOMCSSStyleSheet
    readonly type: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    get_css_text(): string
    get_parent_rule(): DOMCSSRule
    get_parent_style_sheet(): DOMCSSStyleSheet
    get_rule_type(): number
    set_css_text(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    connect(sigName: "notify::css-text", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-text", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::css-text", ...args: any[]): void
    connect(sigName: "notify::parent-rule", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-rule", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-rule", ...args: any[]): void
    connect(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-style-sheet", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCSSRule extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    static name: string
    static $gtype: GObject.GType<DOMCSSRule>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRule

    constructor(config?: DOMCSSRule_ConstructProps) 
    _init(config?: DOMCSSRule_ConstructProps): void
}

interface DOMCSSRuleList_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMCSSRuleList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleList

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleList

    get_length(): number
    item(index: number): DOMCSSRule

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleList

    connect(sigName: "notify::length", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCSSRuleList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleList

    static name: string
    static $gtype: GObject.GType<DOMCSSRuleList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleList

    constructor(config?: DOMCSSRuleList_ConstructProps) 
    _init(config?: DOMCSSRuleList_ConstructProps): void
}

interface DOMCSSStyleDeclaration_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    css_text?: string | null
}

interface DOMCSSStyleDeclaration {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    css_text: string
    readonly length: number
    readonly parent_rule: DOMCSSRule

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    get_css_text(): string
    get_length(): number
    get_parent_rule(): DOMCSSRule
    get_property_priority(propertyName: string): string
    get_property_shorthand(propertyName: string): string
    get_property_value(propertyName: string): string
    is_property_implicit(propertyName: string): boolean
    item(index: number): string
    remove_property(propertyName: string): string
    set_css_text(value: string): void
    set_property(propertyName: string, value?: string, priority?: string): void

    // Overloads of set_property

    /**
     * Sets a property on an object.
     * @param property_name the name of the property to set
     * @param value the value
     */
    set_property(property_name: string, value?: any): void
    set_property(...args: any[]): any
    set_property(args_or_property_name: any[] | string, value?: any): void | any

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    connect(sigName: "notify::css-text", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-text", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::css-text", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::parent-rule", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-rule", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-rule", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCSSStyleDeclaration extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    static name: string
    static $gtype: GObject.GType<DOMCSSStyleDeclaration>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclaration

    constructor(config?: DOMCSSStyleDeclaration_ConstructProps) 
    _init(config?: DOMCSSStyleDeclaration_ConstructProps): void
}

interface DOMCSSStyleSheet_ConstructProps extends DOMStyleSheet_ConstructProps {
}

interface DOMCSSStyleSheet {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheet

    readonly css_rules: DOMCSSRuleList
    readonly owner_rule: DOMCSSRule
    readonly rules: DOMCSSRuleList

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheet

    parent_instance: DOMStyleSheet

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheet

    add_rule(selector: string, style: string, index: number): number
    delete_rule(index: number): void
    get_css_rules(): DOMCSSRuleList
    get_owner_rule(): DOMCSSRule
    get_rules(): DOMCSSRuleList
    insert_rule(rule: string, index: number): number
    remove_rule(index: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheet

    connect(sigName: "notify::css-rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::css-rules", ...args: any[]): void
    connect(sigName: "notify::owner-rule", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-rule", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-rule", ...args: any[]): void
    connect(sigName: "notify::rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rules", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::href", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::href", ...args: any[]): void
    connect(sigName: "notify::media", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media", ...args: any[]): void
    connect(sigName: "notify::owner-node", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-node", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-node", ...args: any[]): void
    connect(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-style-sheet", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCSSStyleSheet extends DOMStyleSheet {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheet

    static name: string
    static $gtype: GObject.GType<DOMCSSStyleSheet>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheet

    constructor(config?: DOMCSSStyleSheet_ConstructProps) 
    _init(config?: DOMCSSStyleSheet_ConstructProps): void
}

interface DOMCSSValue_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    css_text?: string | null
}

interface DOMCSSValue {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    css_text: string
    readonly css_value_type: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    get_css_text(): string
    get_css_value_type(): number
    set_css_text(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    connect(sigName: "notify::css-text", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-text", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::css-text", ...args: any[]): void
    connect(sigName: "notify::css-value-type", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-value-type", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::css-value-type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCSSValue extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    static name: string
    static $gtype: GObject.GType<DOMCSSValue>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValue

    constructor(config?: DOMCSSValue_ConstructProps) 
    _init(config?: DOMCSSValue_ConstructProps): void
}

interface DOMCharacterData_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    data?: string | null
}

interface DOMCharacterData extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    data: string
    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    parent_instance: DOMNode

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     */
    get_data(key?: string): object | null
    get_data(...args: any[]): any
    get_data(args_or_key?: any[] | string): string | object | null | any
    get_length(): number
    insert_data(offset: number, data: string): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string, data?: object | null): void
    set_data(...args: any[]): any
    set_data(args_or_key: any[] | string, data?: object | null): void | any
    substring_data(offset: number, length: number): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    connect(sigName: "notify::data", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMCharacterData extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    static name: string
    static $gtype: GObject.GType<DOMCharacterData>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterData

    constructor(config?: DOMCharacterData_ConstructProps) 
    _init(config?: DOMCharacterData_ConstructProps): void
}

interface DOMClientRect_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMClientRect {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRect

    readonly bottom: number
    readonly height: number
    readonly left: number
    readonly right: number
    readonly top: number
    readonly width: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRect

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRect

    /**
     * Returns the bottom coordinate of `self,` relative to the viewport.
     */
    get_bottom(): number
    /**
     * Returns the height of `self`.
     */
    get_height(): number
    /**
     * Returns the left coordinate of `self,` relative to the viewport.
     */
    get_left(): number
    /**
     * Returns the right coordinate of `self,` relative to the viewport.
     */
    get_right(): number
    /**
     * Returns the top coordinate of `self,` relative to the viewport.
     */
    get_top(): number
    /**
     * Returns the width of `self`.
     */
    get_width(): number

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRect

    connect(sigName: "notify::bottom", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bottom", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bottom", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::left", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::left", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::left", ...args: any[]): void
    connect(sigName: "notify::right", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::right", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::right", ...args: any[]): void
    connect(sigName: "notify::top", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::top", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::top", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMClientRect, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMClientRect extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRect

    static name: string
    static $gtype: GObject.GType<DOMClientRect>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRect

    constructor(config?: DOMClientRect_ConstructProps) 
    _init(config?: DOMClientRect_ConstructProps): void
}

interface DOMClientRectList_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMClientRectList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectList

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectList

    /**
     * Returns the number of #WebKitDOMClientRect objects that `self` contains.
     */
    get_length(): number
    /**
     * Returns the #WebKitDOMClientRect object that `self` contains at `index`.
     * @param index A #gulong
     */
    item(index: number): DOMClientRect

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectList

    connect(sigName: "notify::length", callback: (($obj: DOMClientRectList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMClientRectList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMClientRectList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMClientRectList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMClientRectList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectList

    static name: string
    static $gtype: GObject.GType<DOMClientRectList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectList

    constructor(config?: DOMClientRectList_ConstructProps) 
    _init(config?: DOMClientRectList_ConstructProps): void
}

interface DOMComment_ConstructProps extends DOMEventTarget_ConstructProps, DOMCharacterData_ConstructProps {
}

interface DOMComment extends DOMEventTarget {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMComment

    parent_instance: DOMCharacterData

    // Conflicting methods

    get_data(...args: any[]): any
    set_data(...args: any[]): any

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMComment

    connect(sigName: "notify::data", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMComment extends DOMCharacterData {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMComment

    static name: string
    static $gtype: GObject.GType<DOMComment>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMComment

    constructor(config?: DOMComment_ConstructProps) 
    _init(config?: DOMComment_ConstructProps): void
}

interface DOMDOMImplementation_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMDOMImplementation {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementation

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementation

    create_css_style_sheet(title: string, media: string): DOMCSSStyleSheet
    create_document(namespaceURI: string | null, qualifiedName: string, doctype: DOMDocumentType | null): DOMDocument
    create_document_type(qualifiedName: string, publicId: string, systemId: string): DOMDocumentType
    create_html_document(title: string): DOMHTMLDocument
    has_feature(feature: string, version: string): boolean

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementation

    connect(sigName: "notify::core-object", callback: (($obj: DOMDOMImplementation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDOMImplementation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDOMImplementation extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementation

    static name: string
    static $gtype: GObject.GType<DOMDOMImplementation>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementation

    constructor(config?: DOMDOMImplementation_ConstructProps) 
    _init(config?: DOMDOMImplementation_ConstructProps): void
}

interface DOMDOMSelection_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMDOMSelection {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelection

    readonly anchor_node: DOMNode
    readonly anchor_offset: number
    readonly base_node: DOMNode
    readonly base_offset: number
    readonly extent_node: DOMNode
    readonly extent_offset: number
    readonly focus_node: DOMNode
    readonly focus_offset: number
    readonly is_collapsed: boolean
    readonly range_count: number
    readonly type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelection

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelection

    add_range(range: DOMRange): void
    collapse(node: DOMNode, offset: number): void
    collapse_to_end(): void
    collapse_to_start(): void
    contains_node(node: DOMNode, allowPartial: boolean): boolean
    delete_from_document(): void
    empty(): void
    extend(node: DOMNode, offset: number): void
    get_anchor_node(): DOMNode
    get_anchor_offset(): number
    get_base_node(): DOMNode
    get_base_offset(): number
    get_extent_node(): DOMNode
    get_extent_offset(): number
    get_focus_node(): DOMNode
    get_focus_offset(): number
    get_is_collapsed(): boolean
    get_range_at(index: number): DOMRange
    get_range_count(): number
    get_selection_type(): string
    modify(alter: string, direction: string, granularity: string): void
    remove_all_ranges(): void
    select_all_children(node: DOMNode): void
    set_base_and_extent(baseNode: DOMNode, baseOffset: number, extentNode: DOMNode, extentOffset: number): void
    set_position(node: DOMNode, offset: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelection

    connect(sigName: "notify::anchor-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchor-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anchor-node", ...args: any[]): void
    connect(sigName: "notify::anchor-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchor-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anchor-offset", ...args: any[]): void
    connect(sigName: "notify::base-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-node", ...args: any[]): void
    connect(sigName: "notify::base-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-offset", ...args: any[]): void
    connect(sigName: "notify::extent-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extent-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::extent-node", ...args: any[]): void
    connect(sigName: "notify::extent-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extent-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::extent-offset", ...args: any[]): void
    connect(sigName: "notify::focus-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::focus-node", ...args: any[]): void
    connect(sigName: "notify::focus-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::focus-offset", ...args: any[]): void
    connect(sigName: "notify::is-collapsed", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-collapsed", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-collapsed", ...args: any[]): void
    connect(sigName: "notify::range-count", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::range-count", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::range-count", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDOMSelection extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelection

    static name: string
    static $gtype: GObject.GType<DOMDOMSelection>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelection

    constructor(config?: DOMDOMSelection_ConstructProps) 
    _init(config?: DOMDOMSelection_ConstructProps): void
}

interface DOMDOMTokenList_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    value?: string | null
}

interface DOMDOMTokenList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    readonly length: number
    value: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    contains(token: string): boolean
    get_length(): number
    get_value(): string
    item(index: number): string
    replace(token: string, newToken: string): void
    set_value(value: string): void
    toggle(token: string, force: boolean): boolean

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    connect(sigName: "notify::length", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDOMTokenList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    static name: string
    static $gtype: GObject.GType<DOMDOMTokenList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenList

    constructor(config?: DOMDOMTokenList_ConstructProps) 
    _init(config?: DOMDOMTokenList_ConstructProps): void
}

interface DOMDOMWindow_ConstructProps extends DOMEventTarget_ConstructProps, DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    default_status?: string | null
    name?: string | null
    status?: string | null
}

interface DOMDOMWindow extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    readonly closed: boolean
    default_status: string
    readonly device_pixel_ratio: number
    readonly document: DOMDocument
    readonly frame_element: DOMElement
    readonly frames: DOMDOMWindow
    readonly inner_height: number
    readonly inner_width: number
    readonly length: number
    name: string
    readonly offscreen_buffering: boolean
    readonly opener: DOMDOMWindow
    readonly orientation: number
    readonly outer_height: number
    readonly outer_width: number
    readonly page_x_offset: number
    readonly page_y_offset: number
    readonly parent: DOMDOMWindow
    readonly screen_left: number
    readonly screen_top: number
    readonly screen_x: number
    readonly screen_y: number
    readonly scroll_x: number
    readonly scroll_y: number
    readonly self: DOMDOMWindow
    status: string
    readonly top: DOMDOMWindow
    readonly window: DOMDOMWindow

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    alert(message: string): void
    blur(): void
    capture_events(): void
    close(): void
    confirm(message: string): boolean
    find(string: string, caseSensitive: boolean, backwards: boolean, wrap: boolean, wholeWord: boolean, searchInFrames: boolean, showDialog: boolean): boolean
    focus(): void
    get_closed(): boolean
    get_computed_style(element: DOMElement, pseudoElement: string | null): DOMCSSStyleDeclaration
    get_default_status(): string
    get_device_pixel_ratio(): number
    get_document(): DOMDocument
    get_frame_element(): DOMElement
    get_frames(): DOMDOMWindow
    get_inner_height(): number
    get_inner_width(): number
    get_length(): number
    get_name(): string
    get_offscreen_buffering(): boolean
    get_opener(): DOMDOMWindow
    get_orientation(): number
    get_outer_height(): number
    get_outer_width(): number
    get_page_x_offset(): number
    get_page_y_offset(): number
    get_parent(): DOMDOMWindow
    get_screen_left(): number
    get_screen_top(): number
    get_screen_x(): number
    get_screen_y(): number
    get_scroll_x(): number
    get_scroll_y(): number
    get_selection(): DOMDOMSelection
    get_self(): DOMDOMWindow
    get_status(): string
    get_top(): DOMDOMWindow
    get_window(): DOMDOMWindow
    move_by(x: number, y: number): void
    move_to(x: number, y: number): void
    print(): void
    prompt(message: string, defaultValue: string): string
    release_events(): void
    resize_by(x: number, y: number): void
    resize_to(width: number, height: number): void
    scroll_by(x: number, y: number): void
    scroll_to(x: number, y: number): void
    set_default_status(value: string): void
    set_name(value: string): void
    set_status(value: string): void
    stop(): void
    webkit_message_handlers_post_message(handler: string, message: string): boolean

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    connect(sigName: "notify::closed", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::closed", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::closed", ...args: any[]): void
    connect(sigName: "notify::default-status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-status", ...args: any[]): void
    connect(sigName: "notify::device-pixel-ratio", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::device-pixel-ratio", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::device-pixel-ratio", ...args: any[]): void
    connect(sigName: "notify::document", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document", ...args: any[]): void
    connect(sigName: "notify::frame-element", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame-element", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::frame-element", ...args: any[]): void
    connect(sigName: "notify::frames", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frames", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::frames", ...args: any[]): void
    connect(sigName: "notify::inner-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-height", ...args: any[]): void
    connect(sigName: "notify::inner-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-width", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::offscreen-buffering", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offscreen-buffering", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offscreen-buffering", ...args: any[]): void
    connect(sigName: "notify::opener", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opener", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::opener", ...args: any[]): void
    connect(sigName: "notify::orientation", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::orientation", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::orientation", ...args: any[]): void
    connect(sigName: "notify::outer-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-height", ...args: any[]): void
    connect(sigName: "notify::outer-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-width", ...args: any[]): void
    connect(sigName: "notify::page-x-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-x-offset", ...args: any[]): void
    connect(sigName: "notify::page-y-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-y-offset", ...args: any[]): void
    connect(sigName: "notify::parent", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent", ...args: any[]): void
    connect(sigName: "notify::screen-left", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-left", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-left", ...args: any[]): void
    connect(sigName: "notify::screen-top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-top", ...args: any[]): void
    connect(sigName: "notify::screen-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-x", ...args: any[]): void
    connect(sigName: "notify::screen-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-y", ...args: any[]): void
    connect(sigName: "notify::scroll-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-x", ...args: any[]): void
    connect(sigName: "notify::scroll-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-y", ...args: any[]): void
    connect(sigName: "notify::self", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::self", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::self", ...args: any[]): void
    connect(sigName: "notify::status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::status", ...args: any[]): void
    connect(sigName: "notify::top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::top", ...args: any[]): void
    connect(sigName: "notify::window", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::window", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::window", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDOMWindow extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    static name: string
    static $gtype: GObject.GType<DOMDOMWindow>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindow

    constructor(config?: DOMDOMWindow_ConstructProps) 
    _init(config?: DOMDOMWindow_ConstructProps): void
}

interface DOMDocument_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    charset?: string | null
    cookie?: string | null
    design_mode?: string | null
    dir?: string | null
    document_uri?: string | null
    selected_stylesheet_set?: string | null
    title?: string | null
    xml_standalone?: boolean | null
    xml_version?: string | null
}

interface DOMDocument extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    readonly active_element: DOMElement
    readonly anchors: DOMHTMLCollection
    readonly applets: DOMHTMLCollection
    readonly body: DOMHTMLElement
    readonly character_set: string
    charset: string
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly compat_mode: string
    readonly content_type: string
    cookie: string
    readonly current_script: DOMHTMLScriptElement
    readonly default_view: DOMDOMWindow
    design_mode: string
    dir: string
    readonly doctype: DOMDocumentType
    readonly document_element: DOMElement
    document_uri: string
    readonly domain: string
    readonly embeds: DOMHTMLCollection
    readonly first_element_child: DOMElement
    readonly forms: DOMHTMLCollection
    readonly head: DOMHTMLHeadElement
    readonly hidden: boolean
    readonly images: DOMHTMLCollection
    readonly implementation: DOMDOMImplementation
    readonly input_encoding: string
    readonly last_element_child: DOMElement
    readonly last_modified: string
    readonly links: DOMHTMLCollection
    readonly origin: string
    readonly plugins: DOMHTMLCollection
    readonly pointer_lock_element: DOMElement
    readonly preferred_stylesheet_set: string
    readonly ready_state: string
    readonly referrer: string
    readonly scripts: DOMHTMLCollection
    readonly scrolling_element: DOMElement
    selected_stylesheet_set: string
    readonly style_sheets: DOMStyleSheetList
    title: string
    readonly url: string
    readonly visibility_state: string
    readonly webkit_current_full_screen_element: DOMElement
    readonly webkit_full_screen_keyboard_input_allowed: boolean
    readonly webkit_fullscreen_element: DOMElement
    readonly webkit_fullscreen_enabled: boolean
    readonly webkit_is_full_screen: boolean
    readonly xml_encoding: string
    xml_standalone: boolean
    xml_version: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    parent_instance: DOMNode

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    adopt_node(source: DOMNode): DOMNode
    caret_range_from_point(x: number, y: number): DOMRange
    create_attribute(name: string): DOMAttr
    create_attribute_ns(namespaceURI: string | null, qualifiedName: string): DOMAttr
    create_cdata_section(data: string): DOMCDATASection
    create_comment(data: string): DOMComment
    create_css_style_declaration(): DOMCSSStyleDeclaration
    create_document_fragment(): DOMDocumentFragment
    create_element(tagName: string): DOMElement
    create_element_ns(namespaceURI: string | null, qualifiedName: string): DOMElement
    /**
     * This function has been removed from the DOM spec and it just returns %NULL.
     * @param name A #gchar
     */
    create_entity_reference(name: string | null): DOMEntityReference
    create_event(eventType: string): DOMEvent
    create_expression(expression: string, resolver: DOMXPathNSResolver): DOMXPathExpression
    create_node_iterator(root: DOMNode, whatToShow: number, filter: DOMNodeFilter | null, expandEntityReferences: boolean): DOMNodeIterator
    create_ns_resolver(nodeResolver: DOMNode): DOMXPathNSResolver
    create_processing_instruction(target: string, data: string): DOMProcessingInstruction
    create_range(): DOMRange
    create_text_node(data: string): DOMText
    create_tree_walker(root: DOMNode, whatToShow: number, filter: DOMNodeFilter | null, expandEntityReferences: boolean): DOMTreeWalker
    element_from_point(x: number, y: number): DOMElement
    evaluate(expression: string, contextNode: DOMNode, resolver: DOMXPathNSResolver | null, type: number, inResult: DOMXPathResult | null): DOMXPathResult
    exec_command(command: string, userInterface: boolean, value: string): boolean
    exit_pointer_lock(): void
    get_active_element(): DOMElement
    get_anchors(): DOMHTMLCollection
    get_applets(): DOMHTMLCollection
    get_body(): DOMHTMLElement
    get_character_set(): string
    get_charset(): string
    get_child_element_count(): number
    get_children(): DOMHTMLCollection
    get_compat_mode(): string
    get_content_type(): string
    get_cookie(): string
    get_current_script(): DOMHTMLScriptElement
    get_default_charset(): string
    get_default_view(): DOMDOMWindow
    get_design_mode(): string
    get_dir(): string
    get_doctype(): DOMDocumentType
    get_document_element(): DOMElement
    get_document_uri(): string
    get_domain(): string
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(classNames: string): DOMHTMLCollection
    get_elements_by_name(elementName: string): DOMNodeList
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(tagname: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_embeds(): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_forms(): DOMHTMLCollection
    get_head(): DOMHTMLHeadElement
    get_hidden(): boolean
    get_images(): DOMHTMLCollection
    get_implementation(): DOMDOMImplementation
    get_input_encoding(): string
    get_last_element_child(): DOMElement
    get_last_modified(): string
    get_links(): DOMHTMLCollection
    get_origin(): string
    get_override_style(element: DOMElement, pseudoElement: string | null): DOMCSSStyleDeclaration
    get_plugins(): DOMHTMLCollection
    get_pointer_lock_element(): DOMElement
    /**
     * This function has been removed and does nothing.
     */
    get_preferred_stylesheet_set(): string
    get_ready_state(): string
    get_referrer(): string
    get_scripts(): DOMHTMLCollection
    get_scrolling_element(): DOMElement
    /**
     * This function has been removed and does nothing.
     */
    get_selected_stylesheet_set(): string
    get_style_sheets(): DOMStyleSheetList
    get_title(): string
    get_url(): string
    get_visibility_state(): string
    get_webkit_current_fullscreen_element(): DOMElement
    get_webkit_fullscreen_element(): DOMElement
    get_webkit_fullscreen_enabled(): boolean
    get_webkit_fullscreen_keyboard_input_allowed(): boolean
    get_webkit_is_fullscreen(): boolean
    get_xml_encoding(): string
    get_xml_standalone(): boolean
    get_xml_version(): string
    has_focus(): boolean
    import_node(importedNode: DOMNode, deep: boolean): DOMNode
    query_command_enabled(command: string): boolean
    query_command_indeterm(command: string): boolean
    query_command_state(command: string): boolean
    query_command_supported(command: string): boolean
    query_command_value(command: string): string
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    set_body(value: DOMHTMLElement): void
    set_charset(value: string): void
    set_cookie(value: string): void
    set_design_mode(value: string): void
    set_dir(value: string): void
    set_document_uri(value: string): void
    /**
     * This function has been removed and does nothing.
     * @param value A #gchar
     */
    set_selected_stylesheet_set(value: string): void
    set_title(value: string): void
    set_xml_standalone(value: boolean): void
    set_xml_version(value: string): void
    webkit_cancel_fullscreen(): void
    webkit_exit_fullscreen(): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    connect(sigName: "notify::active-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::active-element", ...args: any[]): void
    connect(sigName: "notify::anchors", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchors", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anchors", ...args: any[]): void
    connect(sigName: "notify::applets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::applets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::applets", ...args: any[]): void
    connect(sigName: "notify::body", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::body", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::body", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::charset", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::charset", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::cookie", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cookie", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cookie", ...args: any[]): void
    connect(sigName: "notify::current-script", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-script", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-script", ...args: any[]): void
    connect(sigName: "notify::default-view", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-view", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-view", ...args: any[]): void
    connect(sigName: "notify::design-mode", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::design-mode", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::design-mode", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::domain", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::domain", ...args: any[]): void
    connect(sigName: "notify::embeds", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::embeds", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::embeds", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::forms", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::forms", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::forms", ...args: any[]): void
    connect(sigName: "notify::head", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::head", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::head", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::images", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::images", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::images", ...args: any[]): void
    connect(sigName: "notify::implementation", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::input-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::input-encoding", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::last-modified", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-modified", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-modified", ...args: any[]): void
    connect(sigName: "notify::links", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::links", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::links", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::plugins", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::plugins", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::plugins", ...args: any[]): void
    connect(sigName: "notify::pointer-lock-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-lock-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pointer-lock-element", ...args: any[]): void
    connect(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::preferred-stylesheet-set", ...args: any[]): void
    connect(sigName: "notify::ready-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ready-state", ...args: any[]): void
    connect(sigName: "notify::referrer", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::referrer", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::referrer", ...args: any[]): void
    connect(sigName: "notify::scripts", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scripts", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scripts", ...args: any[]): void
    connect(sigName: "notify::scrolling-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scrolling-element", ...args: any[]): void
    connect(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selected-stylesheet-set", ...args: any[]): void
    connect(sigName: "notify::style-sheets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-sheets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style-sheets", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::visibility-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visibility-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::visibility-state", ...args: any[]): void
    connect(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-current-full-screen-element", ...args: any[]): void
    connect(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-full-screen-keyboard-input-allowed", ...args: any[]): void
    connect(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-fullscreen-element", ...args: any[]): void
    connect(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-fullscreen-enabled", ...args: any[]): void
    connect(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-is-full-screen", ...args: any[]): void
    connect(sigName: "notify::xml-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::xml-encoding", ...args: any[]): void
    connect(sigName: "notify::xml-standalone", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-standalone", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::xml-standalone", ...args: any[]): void
    connect(sigName: "notify::xml-version", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-version", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::xml-version", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDocument extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    static name: string
    static $gtype: GObject.GType<DOMDocument>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocument

    constructor(config?: DOMDocument_ConstructProps) 
    _init(config?: DOMDocument_ConstructProps): void
}

interface DOMDocumentFragment_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {
}

interface DOMDocumentFragment extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragment

    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly first_element_child: DOMElement
    readonly last_element_child: DOMElement

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragment

    parent_instance: DOMNode

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragment

    get_child_element_count(): number
    get_children(): DOMHTMLCollection
    get_element_by_id(elementId: string): DOMElement
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragment

    connect(sigName: "notify::child-element-count", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDocumentFragment extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragment

    static name: string
    static $gtype: GObject.GType<DOMDocumentFragment>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragment

    constructor(config?: DOMDocumentFragment_ConstructProps) 
    _init(config?: DOMDocumentFragment_ConstructProps): void
}

interface DOMDocumentType_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {
}

interface DOMDocumentType extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentType

    readonly entities: DOMNamedNodeMap
    readonly internal_subset: string
    readonly name: string
    readonly notations: DOMNamedNodeMap
    readonly public_id: string
    readonly system_id: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentType

    parent_instance: DOMNode

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentType

    get_entities(): DOMNamedNodeMap
    get_internal_subset(): string
    get_name(): string
    get_notations(): DOMNamedNodeMap
    get_public_id(): string
    get_system_id(): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentType

    connect(sigName: "notify::entities", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entities", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::entities", ...args: any[]): void
    connect(sigName: "notify::internal-subset", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::internal-subset", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::internal-subset", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::notations", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::notations", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::notations", ...args: any[]): void
    connect(sigName: "notify::public-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::public-id", ...args: any[]): void
    connect(sigName: "notify::system-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::system-id", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMDocumentType extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentType

    static name: string
    static $gtype: GObject.GType<DOMDocumentType>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentType

    constructor(config?: DOMDocumentType_ConstructProps) 
    _init(config?: DOMDocumentType_ConstructProps): void
}

interface DOMElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    class_name?: string | null
    id?: string | null
    inner_html?: string | null
    outer_html?: string | null
    scroll_left?: number | null
    scroll_top?: number | null
}

interface DOMElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    parent_instance: DOMNode

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    /**
     * Returns a #WebKitDOMClientRect representing the size and position of `self`
     * relative to the viewport.
     */
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    /**
     * Returns a collection of #WebKitDOMClientRect objects, each of which describe
     * the size and position of a CSS border box relative to the viewport.
     */
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_inner_html(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_outer_html(): string
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    /**
     * CSS Regions support has been removed. This function does nothing.
     */
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    /**
     * Get whether `element` is an HTML text input element that has been edited by a user action.
     */
    html_input_element_is_user_edited(): boolean
    /**
     * Set whether the element is an HTML input element that has been filled automatically.
     * If `element` is not an HTML input element this function does nothing.
     * @param auto_filled value to set
     */
    html_input_element_set_auto_filled(auto_filled: boolean): void
    /**
     * Set the value of an HTML input element as if it had been edited by
     * the user, triggering a change event. If `element` is not an HTML input
     * element this function does nothing.
     * @param value the text to set
     */
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    connect(sigName: "notify::attributes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMElement extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    static name: string
    static $gtype: GObject.GType<DOMElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElement

    constructor(config?: DOMElement_ConstructProps) 
    _init(config?: DOMElement_ConstructProps): void
}

interface DOMEntityReference_ConstructProps extends DOMEventTarget_ConstructProps, DOMNode_ConstructProps {
}

interface DOMEntityReference extends DOMEventTarget {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEntityReference

    parent_instance: DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEntityReference

    connect(sigName: "notify::base-uri", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMEntityReference extends DOMNode {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEntityReference

    static name: string
    static $gtype: GObject.GType<DOMEntityReference>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEntityReference

    constructor(config?: DOMEntityReference_ConstructProps) 
    _init(config?: DOMEntityReference_ConstructProps): void
}

interface DOMEvent_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    cancel_bubble?: boolean | null
    return_value?: boolean | null
}

interface DOMEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_event_phase(): number
    get_event_type(): string
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_propagation(): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    connect(sigName: "notify::bubbles", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancel-bubble", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: "notify::return-value", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::return-value", ...args: any[]): void
    connect(sigName: "notify::src-element", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src-element", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMEvent extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    static name: string
    static $gtype: GObject.GType<DOMEvent>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEvent

    constructor(config?: DOMEvent_ConstructProps) 
    _init(config?: DOMEvent_ConstructProps): void
}

interface DOMFile_ConstructProps extends DOMBlob_ConstructProps {
}

interface DOMFile {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFile

    readonly name: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFile

    parent_instance: DOMBlob

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFile

    get_name(): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFile

    connect(sigName: "notify::name", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMFile extends DOMBlob {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFile

    static name: string
    static $gtype: GObject.GType<DOMFile>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFile

    constructor(config?: DOMFile_ConstructProps) 
    _init(config?: DOMFile_ConstructProps): void
}

interface DOMFileList_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMFileList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileList

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileList

    get_length(): number
    item(index: number): DOMFile

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileList

    connect(sigName: "notify::length", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMFileList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileList

    static name: string
    static $gtype: GObject.GType<DOMFileList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileList

    constructor(config?: DOMFileList_ConstructProps) 
    _init(config?: DOMFileList_ConstructProps): void
}

interface DOMHTMLAnchorElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    charset?: string | null
    coords?: string | null
    hash?: string | null
    host?: string | null
    hostname?: string | null
    href?: string | null
    hreflang?: string | null
    name?: string | null
    pathname?: string | null
    port?: string | null
    protocol?: string | null
    rel?: string | null
    rev?: string | null
    search?: string | null
    shape?: string | null
    target?: string | null
    text?: string | null
    type?: string | null
}

interface DOMHTMLAnchorElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    charset: string
    coords: string
    hash: string
    host: string
    hostname: string
    href: string
    hreflang: string
    name: string
    pathname: string
    port: string
    protocol: string
    rel: string
    rev: string
    search: string
    shape: string
    target: string
    text: string
    type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    get_charset(): string
    get_coords(): string
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_hreflang(): string
    get_name(): string
    get_pathname(): string
    get_port(): string
    get_protocol(): string
    get_rel(): string
    get_rev(): string
    get_search(): string
    get_shape(): string
    get_target(): string
    get_text(): string
    get_type_attr(): string
    set_charset(value: string): void
    set_coords(value: string): void
    set_hash(value: string): void
    set_host(value: string): void
    set_hostname(value: string): void
    set_href(value: string): void
    set_hreflang(value: string): void
    set_name(value: string): void
    set_pathname(value: string): void
    set_port(value: string): void
    set_protocol(value: string): void
    set_rel(value: string): void
    set_rev(value: string): void
    set_search(value: string): void
    set_shape(value: string): void
    set_target(value: string): void
    set_text(value: string): void
    set_type_attr(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::charset", ...args: any[]): void
    connect(sigName: "notify::coords", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::coords", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::coords", ...args: any[]): void
    connect(sigName: "notify::hash", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hash", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hash", ...args: any[]): void
    connect(sigName: "notify::host", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::host", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::host", ...args: any[]): void
    connect(sigName: "notify::hostname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hostname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hostname", ...args: any[]): void
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::href", ...args: any[]): void
    connect(sigName: "notify::hreflang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hreflang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hreflang", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::pathname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pathname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pathname", ...args: any[]): void
    connect(sigName: "notify::port", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::port", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::port", ...args: any[]): void
    connect(sigName: "notify::protocol", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::protocol", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::protocol", ...args: any[]): void
    connect(sigName: "notify::rel", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rel", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rel", ...args: any[]): void
    connect(sigName: "notify::rev", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rev", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rev", ...args: any[]): void
    connect(sigName: "notify::search", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::search", ...args: any[]): void
    connect(sigName: "notify::shape", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shape", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::shape", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLAnchorElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLAnchorElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElement

    constructor(config?: DOMHTMLAnchorElement_ConstructProps) 
    _init(config?: DOMHTMLAnchorElement_ConstructProps): void
}

interface DOMHTMLAppletElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    align?: string | null
    alt?: string | null
    archive?: string | null
    code?: string | null
    code_base?: string | null
    height?: string | null
    hspace?: number | null
    name?: string | null
    object?: string | null
    vspace?: number | null
    width?: string | null
}

interface DOMHTMLAppletElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    align: string
    alt: string
    archive: string
    code: string
    code_base: string
    height: string
    hspace: number
    name: string
    object: string
    vspace: number
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    get_align(): string
    get_alt(): string
    get_archive(): string
    get_code(): string
    get_code_base(): string
    get_height(): string
    get_hspace(): number
    get_name(): string
    get_object(): string
    get_vspace(): number
    get_width(): string
    set_align(value: string): void
    set_alt(value: string): void
    set_archive(value: string): void
    set_code(value: string): void
    set_code_base(value: string): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_name(value: string): void
    set_object(value: string): void
    set_vspace(value: number): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt", ...args: any[]): void
    connect(sigName: "notify::archive", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::archive", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::archive", ...args: any[]): void
    connect(sigName: "notify::code", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::code", ...args: any[]): void
    connect(sigName: "notify::code-base", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code-base", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::code-base", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hspace", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::object", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::object", ...args: any[]): void
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::vspace", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLAppletElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLAppletElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElement

    constructor(config?: DOMHTMLAppletElement_ConstructProps) 
    _init(config?: DOMHTMLAppletElement_ConstructProps): void
}

interface DOMHTMLAreaElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    alt?: string | null
    coords?: string | null
    hash?: string | null
    host?: string | null
    hostname?: string | null
    href?: string | null
    no_href?: boolean | null
    pathname?: string | null
    port?: string | null
    protocol?: string | null
    search?: string | null
    shape?: string | null
    target?: string | null
}

interface DOMHTMLAreaElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    alt: string
    coords: string
    hash: string
    host: string
    hostname: string
    href: string
    no_href: boolean
    pathname: string
    port: string
    protocol: string
    search: string
    shape: string
    target: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    get_alt(): string
    get_coords(): string
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_no_href(): boolean
    get_pathname(): string
    get_port(): string
    get_protocol(): string
    get_search(): string
    get_shape(): string
    get_target(): string
    set_alt(value: string): void
    set_coords(value: string): void
    set_hash(value: string): void
    set_host(value: string): void
    set_hostname(value: string): void
    set_href(value: string): void
    set_no_href(value: boolean): void
    set_pathname(value: string): void
    set_port(value: string): void
    set_protocol(value: string): void
    set_search(value: string): void
    set_shape(value: string): void
    set_target(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt", ...args: any[]): void
    connect(sigName: "notify::coords", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::coords", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::coords", ...args: any[]): void
    connect(sigName: "notify::hash", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hash", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hash", ...args: any[]): void
    connect(sigName: "notify::host", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::host", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::host", ...args: any[]): void
    connect(sigName: "notify::hostname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hostname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hostname", ...args: any[]): void
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::href", ...args: any[]): void
    connect(sigName: "notify::no-href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::no-href", ...args: any[]): void
    connect(sigName: "notify::pathname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pathname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pathname", ...args: any[]): void
    connect(sigName: "notify::port", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::port", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::port", ...args: any[]): void
    connect(sigName: "notify::protocol", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::protocol", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::protocol", ...args: any[]): void
    connect(sigName: "notify::search", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::search", ...args: any[]): void
    connect(sigName: "notify::shape", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shape", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::shape", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLAreaElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLAreaElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElement

    constructor(config?: DOMHTMLAreaElement_ConstructProps) 
    _init(config?: DOMHTMLAreaElement_ConstructProps): void
}

interface DOMHTMLBRElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    clear?: string | null
}

interface DOMHTMLBRElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    clear: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    get_clear(): string
    set_clear(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    connect(sigName: "notify::clear", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::clear", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::clear", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLBRElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLBRElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElement

    constructor(config?: DOMHTMLBRElement_ConstructProps) 
    _init(config?: DOMHTMLBRElement_ConstructProps): void
}

interface DOMHTMLBaseElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    href?: string | null
    target?: string | null
}

interface DOMHTMLBaseElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    href: string
    target: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    get_href(): string
    get_target(): string
    set_href(value: string): void
    set_target(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    connect(sigName: "notify::href", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::href", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLBaseElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLBaseElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElement

    constructor(config?: DOMHTMLBaseElement_ConstructProps) 
    _init(config?: DOMHTMLBaseElement_ConstructProps): void
}

interface DOMHTMLBaseFontElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {
}

interface DOMHTMLBaseFontElement extends DOMEventTarget {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElement

    /**
     * This function has been removed from the DOM spec and it just returns %NULL.
     */
    get_color(): string
    /**
     * This function has been removed from the DOM spec and it just returns %NULL.
     */
    get_face(): string
    /**
     * This function has been removed from the DOM spec and it just returns 0.
     */
    get_size(): number
    /**
     * This function has been removed from the DOM spec and it does nothing.
     * @param value A #gchar
     */
    set_color(value: string): void
    /**
     * This function has been removed from the DOM spec and it does nothing.
     * @param value A #gchar
     */
    set_face(value: string): void
    /**
     * This function has been removed from the DOM spec and it does nothing.
     * @param value A #glong
     */
    set_size(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElement

    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLBaseFontElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLBaseFontElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElement

    constructor(config?: DOMHTMLBaseFontElement_ConstructProps) 
    _init(config?: DOMHTMLBaseFontElement_ConstructProps): void
}

interface DOMHTMLBodyElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    a_link?: string | null
    background?: string | null
    bg_color?: string | null
    link?: string | null
    text?: string | null
    v_link?: string | null
}

interface DOMHTMLBodyElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    a_link: string
    background: string
    bg_color: string
    link: string
    text: string
    v_link: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    get_a_link(): string
    get_background(): string
    get_bg_color(): string
    get_link(): string
    get_text(): string
    get_v_link(): string
    set_a_link(value: string): void
    set_background(value: string): void
    set_bg_color(value: string): void
    set_link(value: string): void
    set_text(value: string): void
    set_v_link(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    connect(sigName: "notify::a-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::a-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::a-link", ...args: any[]): void
    connect(sigName: "notify::background", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::background", ...args: any[]): void
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bg-color", ...args: any[]): void
    connect(sigName: "notify::link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link", ...args: any[]): void
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text", ...args: any[]): void
    connect(sigName: "notify::v-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-link", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLBodyElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLBodyElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElement

    constructor(config?: DOMHTMLBodyElement_ConstructProps) 
    _init(config?: DOMHTMLBodyElement_ConstructProps): void
}

interface DOMHTMLButtonElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    autofocus?: boolean | null
    disabled?: boolean | null
    name?: string | null
    type?: string | null
    value?: string | null
}

interface DOMHTMLButtonElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    autofocus: boolean
    disabled: boolean
    readonly form: DOMHTMLFormElement
    name: string
    type: string
    value: string
    readonly will_validate: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    get_autofocus(): boolean
    get_button_type(): string
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_name(): string
    get_value(): string
    get_will_validate(): boolean
    set_autofocus(value: boolean): void
    set_button_type(value: string): void
    set_disabled(value: boolean): void
    set_name(value: string): void
    set_value(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::autofocus", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::will-validate", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLButtonElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLButtonElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElement

    constructor(config?: DOMHTMLButtonElement_ConstructProps) 
    _init(config?: DOMHTMLButtonElement_ConstructProps): void
}

interface DOMHTMLCanvasElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    height?: number | null
    width?: number | null
}

interface DOMHTMLCanvasElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    height: number
    width: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    get_height(): number
    get_width(): number
    set_height(value: number): void
    set_width(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    connect(sigName: "notify::height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLCanvasElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLCanvasElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElement

    constructor(config?: DOMHTMLCanvasElement_ConstructProps) 
    _init(config?: DOMHTMLCanvasElement_ConstructProps): void
}

interface DOMHTMLCollection_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMHTMLCollection {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollection

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollection

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollection

    get_length(): number
    item(index: number): DOMNode
    named_item(name: string): DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollection

    connect(sigName: "notify::length", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLCollection extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollection

    static name: string
    static $gtype: GObject.GType<DOMHTMLCollection>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollection

    constructor(config?: DOMHTMLCollection_ConstructProps) 
    _init(config?: DOMHTMLCollection_ConstructProps): void
}

interface DOMHTMLDListElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    compact?: boolean | null
}

interface DOMHTMLDListElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    compact: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    get_compact(): boolean
    set_compact(value: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compact", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLDListElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLDListElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElement

    constructor(config?: DOMHTMLDListElement_ConstructProps) 
    _init(config?: DOMHTMLDListElement_ConstructProps): void
}

interface DOMHTMLDirectoryElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    compact?: boolean | null
}

interface DOMHTMLDirectoryElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    compact: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    get_compact(): boolean
    set_compact(value: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compact", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLDirectoryElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLDirectoryElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElement

    constructor(config?: DOMHTMLDirectoryElement_ConstructProps) 
    _init(config?: DOMHTMLDirectoryElement_ConstructProps): void
}

interface DOMHTMLDivElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    align?: string | null
}

interface DOMHTMLDivElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    align: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    get_align(): string
    set_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLDivElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLDivElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElement

    constructor(config?: DOMHTMLDivElement_ConstructProps) 
    _init(config?: DOMHTMLDivElement_ConstructProps): void
}

interface DOMHTMLDocument_ConstructProps extends DOMEventTarget_ConstructProps, DOMDocument_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    alink_color?: string | null
    bg_color?: string | null
    dir?: string | null
    fg_color?: string | null
    link_color?: string | null
    vlink_color?: string | null
}

interface DOMHTMLDocument extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    alink_color: string
    bg_color: string
    dir: string
    fg_color: string
    readonly height: number
    link_color: string
    vlink_color: string
    readonly width: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    parent_instance: DOMDocument

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    capture_events(): void
    clear(): void
    close(): void
    get_alink_color(): string
    get_bg_color(): string
    get_compat_mode(): string
    get_design_mode(): string
    get_dir(): string
    get_embeds(): DOMHTMLCollection
    get_fg_color(): string
    get_height(): number
    get_link_color(): string
    get_plugins(): DOMHTMLCollection
    get_scripts(): DOMHTMLCollection
    get_vlink_color(): string
    get_width(): number
    release_events(): void
    set_alink_color(value: string): void
    set_bg_color(value: string): void
    set_design_mode(value: string): void
    set_dir(value: string): void
    set_fg_color(value: string): void
    set_link_color(value: string): void
    set_vlink_color(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    connect(sigName: "notify::alink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alink-color", ...args: any[]): void
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bg-color", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::fg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::fg-color", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::link-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-color", ...args: any[]): void
    connect(sigName: "notify::vlink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vlink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::vlink-color", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::active-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::active-element", ...args: any[]): void
    connect(sigName: "notify::anchors", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchors", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::anchors", ...args: any[]): void
    connect(sigName: "notify::applets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::applets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::applets", ...args: any[]): void
    connect(sigName: "notify::body", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::body", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::body", ...args: any[]): void
    connect(sigName: "notify::character-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::character-set", ...args: any[]): void
    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::charset", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::compat-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compat-mode", ...args: any[]): void
    connect(sigName: "notify::content-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-type", ...args: any[]): void
    connect(sigName: "notify::cookie", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cookie", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cookie", ...args: any[]): void
    connect(sigName: "notify::current-script", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-script", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-script", ...args: any[]): void
    connect(sigName: "notify::default-view", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-view", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-view", ...args: any[]): void
    connect(sigName: "notify::design-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::design-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::design-mode", ...args: any[]): void
    connect(sigName: "notify::doctype", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::doctype", ...args: any[]): void
    connect(sigName: "notify::document-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-element", ...args: any[]): void
    connect(sigName: "notify::document-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::document-uri", ...args: any[]): void
    connect(sigName: "notify::domain", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::domain", ...args: any[]): void
    connect(sigName: "notify::embeds", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::embeds", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::embeds", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::forms", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::forms", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::forms", ...args: any[]): void
    connect(sigName: "notify::head", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::head", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::head", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::images", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::images", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::images", ...args: any[]): void
    connect(sigName: "notify::implementation", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::implementation", ...args: any[]): void
    connect(sigName: "notify::input-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::input-encoding", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::last-modified", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-modified", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-modified", ...args: any[]): void
    connect(sigName: "notify::links", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::links", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::links", ...args: any[]): void
    connect(sigName: "notify::origin", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::origin", ...args: any[]): void
    connect(sigName: "notify::plugins", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::plugins", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::plugins", ...args: any[]): void
    connect(sigName: "notify::pointer-lock-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-lock-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pointer-lock-element", ...args: any[]): void
    connect(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::preferred-stylesheet-set", ...args: any[]): void
    connect(sigName: "notify::ready-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ready-state", ...args: any[]): void
    connect(sigName: "notify::referrer", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::referrer", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::referrer", ...args: any[]): void
    connect(sigName: "notify::scripts", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scripts", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scripts", ...args: any[]): void
    connect(sigName: "notify::scrolling-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scrolling-element", ...args: any[]): void
    connect(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selected-stylesheet-set", ...args: any[]): void
    connect(sigName: "notify::style-sheets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-sheets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style-sheets", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::url", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::url", ...args: any[]): void
    connect(sigName: "notify::visibility-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visibility-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::visibility-state", ...args: any[]): void
    connect(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-current-full-screen-element", ...args: any[]): void
    connect(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-full-screen-keyboard-input-allowed", ...args: any[]): void
    connect(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-fullscreen-element", ...args: any[]): void
    connect(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-fullscreen-enabled", ...args: any[]): void
    connect(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-is-full-screen", ...args: any[]): void
    connect(sigName: "notify::xml-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::xml-encoding", ...args: any[]): void
    connect(sigName: "notify::xml-standalone", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-standalone", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::xml-standalone", ...args: any[]): void
    connect(sigName: "notify::xml-version", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-version", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::xml-version", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLDocument extends DOMDocument {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    static name: string
    static $gtype: GObject.GType<DOMHTMLDocument>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocument

    constructor(config?: DOMHTMLDocument_ConstructProps) 
    _init(config?: DOMHTMLDocument_ConstructProps): void
}

interface DOMHTMLElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    access_key?: string | null
    content_editable?: string | null
    dir?: string | null
    draggable?: boolean | null
    hidden?: boolean | null
    inner_text?: string | null
    lang?: string | null
    outer_text?: string | null
    spellcheck?: boolean | null
    tab_index?: number | null
    title?: string | null
    translate?: boolean | null
    webkitdropzone?: string | null
}

interface DOMHTMLElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    parent_instance: DOMElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLElement extends DOMElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElement

    constructor(config?: DOMHTMLElement_ConstructProps) 
    _init(config?: DOMHTMLElement_ConstructProps): void
}

interface DOMHTMLEmbedElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    align?: string | null
    height?: number | null
    name?: string | null
    src?: string | null
    type?: string | null
    width?: number | null
}

interface DOMHTMLEmbedElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    align: string
    height: number
    name: string
    src: string
    type: string
    width: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    get_align(): string
    get_height(): number
    get_name(): string
    get_src(): string
    get_type_attr(): string
    get_width(): number
    set_align(value: string): void
    set_height(value: number): void
    set_name(value: string): void
    set_src(value: string): void
    set_type_attr(value: string): void
    set_width(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLEmbedElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLEmbedElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElement

    constructor(config?: DOMHTMLEmbedElement_ConstructProps) 
    _init(config?: DOMHTMLEmbedElement_ConstructProps): void
}

interface DOMHTMLFieldSetElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {
}

interface DOMHTMLFieldSetElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElement

    readonly form: DOMHTMLFormElement

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElement

    get_form(): DOMHTMLFormElement

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElement

    connect(sigName: "notify::form", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLFieldSetElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLFieldSetElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElement

    constructor(config?: DOMHTMLFieldSetElement_ConstructProps) 
    _init(config?: DOMHTMLFieldSetElement_ConstructProps): void
}

interface DOMHTMLFontElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    color?: string | null
    face?: string | null
    size?: string | null
}

interface DOMHTMLFontElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    color: string
    face: string
    size: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    get_color(): string
    get_face(): string
    get_size(): string
    set_color(value: string): void
    set_face(value: string): void
    set_size(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    connect(sigName: "notify::color", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::color", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::color", ...args: any[]): void
    connect(sigName: "notify::face", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::face", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::face", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLFontElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLFontElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElement

    constructor(config?: DOMHTMLFontElement_ConstructProps) 
    _init(config?: DOMHTMLFontElement_ConstructProps): void
}

interface DOMHTMLFormElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    accept_charset?: string | null
    action?: string | null
    encoding?: string | null
    enctype?: string | null
    method?: string | null
    name?: string | null
    target?: string | null
}

interface DOMHTMLFormElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    accept_charset: string
    action: string
    readonly elements: DOMHTMLCollection
    encoding: string
    enctype: string
    readonly length: number
    method: string
    name: string
    target: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    get_accept_charset(): string
    get_action(): string
    get_elements(): DOMHTMLCollection
    get_encoding(): string
    get_enctype(): string
    get_length(): number
    get_method(): string
    get_name(): string
    get_target(): string
    reset(): void
    set_accept_charset(value: string): void
    set_action(value: string): void
    set_encoding(value: string): void
    set_enctype(value: string): void
    set_method(value: string): void
    set_name(value: string): void
    set_target(value: string): void
    submit(): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    connect(sigName: "notify::accept-charset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept-charset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::accept-charset", ...args: any[]): void
    connect(sigName: "notify::action", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::action", ...args: any[]): void
    connect(sigName: "notify::elements", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::elements", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::elements", ...args: any[]): void
    connect(sigName: "notify::encoding", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::encoding", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::encoding", ...args: any[]): void
    connect(sigName: "notify::enctype", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enctype", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::enctype", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::method", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::method", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::method", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLFormElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLFormElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElement

    constructor(config?: DOMHTMLFormElement_ConstructProps) 
    _init(config?: DOMHTMLFormElement_ConstructProps): void
}

interface DOMHTMLFrameElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    frame_border?: string | null
    long_desc?: string | null
    margin_height?: string | null
    margin_width?: string | null
    name?: string | null
    no_resize?: boolean | null
    scrolling?: string | null
    src?: string | null
}

interface DOMHTMLFrameElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    readonly content_document: DOMDocument
    readonly content_window: DOMDOMWindow
    frame_border: string
    readonly height: number
    long_desc: string
    margin_height: string
    margin_width: string
    name: string
    no_resize: boolean
    scrolling: string
    src: string
    readonly width: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    get_content_document(): DOMDocument
    get_content_window(): DOMDOMWindow
    get_frame_border(): string
    get_height(): number
    get_long_desc(): string
    get_margin_height(): string
    get_margin_width(): string
    get_name(): string
    get_no_resize(): boolean
    get_scrolling(): string
    get_src(): string
    get_width(): number
    set_frame_border(value: string): void
    set_long_desc(value: string): void
    set_margin_height(value: string): void
    set_margin_width(value: string): void
    set_name(value: string): void
    set_no_resize(value: boolean): void
    set_scrolling(value: string): void
    set_src(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    connect(sigName: "notify::content-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-document", ...args: any[]): void
    connect(sigName: "notify::content-window", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-window", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-window", ...args: any[]): void
    connect(sigName: "notify::frame-border", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame-border", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::frame-border", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::long-desc", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::long-desc", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::long-desc", ...args: any[]): void
    connect(sigName: "notify::margin-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::margin-height", ...args: any[]): void
    connect(sigName: "notify::margin-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::margin-width", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::no-resize", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-resize", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::no-resize", ...args: any[]): void
    connect(sigName: "notify::scrolling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scrolling", ...args: any[]): void
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLFrameElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLFrameElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElement

    constructor(config?: DOMHTMLFrameElement_ConstructProps) 
    _init(config?: DOMHTMLFrameElement_ConstructProps): void
}

interface DOMHTMLFrameSetElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    cols?: string | null
    rows?: string | null
}

interface DOMHTMLFrameSetElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    cols: string
    rows: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    get_cols(): string
    get_rows(): string
    set_cols(value: string): void
    set_rows(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    connect(sigName: "notify::cols", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cols", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cols", ...args: any[]): void
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rows", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLFrameSetElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLFrameSetElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElement

    constructor(config?: DOMHTMLFrameSetElement_ConstructProps) 
    _init(config?: DOMHTMLFrameSetElement_ConstructProps): void
}

interface DOMHTMLHRElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    align?: string | null
    no_shade?: boolean | null
    size?: string | null
    width?: string | null
}

interface DOMHTMLHRElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    align: string
    no_shade: boolean
    size: string
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    get_align(): string
    get_no_shade(): boolean
    get_size(): string
    get_width(): string
    set_align(value: string): void
    set_no_shade(value: boolean): void
    set_size(value: string): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::no-shade", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-shade", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::no-shade", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLHRElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLHRElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElement

    constructor(config?: DOMHTMLHRElement_ConstructProps) 
    _init(config?: DOMHTMLHRElement_ConstructProps): void
}

interface DOMHTMLHeadElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    profile?: string | null
}

interface DOMHTMLHeadElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    profile: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    get_profile(): string
    set_profile(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    connect(sigName: "notify::profile", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::profile", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::profile", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLHeadElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLHeadElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElement

    constructor(config?: DOMHTMLHeadElement_ConstructProps) 
    _init(config?: DOMHTMLHeadElement_ConstructProps): void
}

interface DOMHTMLHeadingElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    align?: string | null
}

interface DOMHTMLHeadingElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    align: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    get_align(): string
    set_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLHeadingElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLHeadingElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElement

    constructor(config?: DOMHTMLHeadingElement_ConstructProps) 
    _init(config?: DOMHTMLHeadingElement_ConstructProps): void
}

interface DOMHTMLHtmlElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    version?: string | null
}

interface DOMHTMLHtmlElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    version: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    get_version(): string
    set_version(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    connect(sigName: "notify::version", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::version", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::version", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLHtmlElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLHtmlElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElement

    constructor(config?: DOMHTMLHtmlElement_ConstructProps) 
    _init(config?: DOMHTMLHtmlElement_ConstructProps): void
}

interface DOMHTMLIFrameElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    align?: string | null
    frame_border?: string | null
    height?: string | null
    long_desc?: string | null
    margin_height?: string | null
    margin_width?: string | null
    name?: string | null
    scrolling?: string | null
    src?: string | null
    width?: string | null
}

interface DOMHTMLIFrameElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    align: string
    readonly content_document: DOMDocument
    readonly content_window: DOMDOMWindow
    frame_border: string
    height: string
    long_desc: string
    margin_height: string
    margin_width: string
    name: string
    scrolling: string
    src: string
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    get_align(): string
    get_content_document(): DOMDocument
    get_content_window(): DOMDOMWindow
    get_frame_border(): string
    get_height(): string
    get_long_desc(): string
    get_margin_height(): string
    get_margin_width(): string
    get_name(): string
    get_scrolling(): string
    get_src(): string
    get_width(): string
    set_align(value: string): void
    set_frame_border(value: string): void
    set_height(value: string): void
    set_long_desc(value: string): void
    set_margin_height(value: string): void
    set_margin_width(value: string): void
    set_name(value: string): void
    set_scrolling(value: string): void
    set_src(value: string): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::content-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-document", ...args: any[]): void
    connect(sigName: "notify::content-window", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-window", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-window", ...args: any[]): void
    connect(sigName: "notify::frame-border", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame-border", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::frame-border", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::long-desc", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::long-desc", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::long-desc", ...args: any[]): void
    connect(sigName: "notify::margin-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::margin-height", ...args: any[]): void
    connect(sigName: "notify::margin-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::margin-width", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::scrolling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scrolling", ...args: any[]): void
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLIFrameElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLIFrameElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElement

    constructor(config?: DOMHTMLIFrameElement_ConstructProps) 
    _init(config?: DOMHTMLIFrameElement_ConstructProps): void
}

interface DOMHTMLImageElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    align?: string | null
    alt?: string | null
    border?: string | null
    height?: number | null
    hspace?: number | null
    is_map?: boolean | null
    long_desc?: string | null
    lowsrc?: string | null
    name?: string | null
    src?: string | null
    use_map?: string | null
    vspace?: number | null
    width?: number | null
}

interface DOMHTMLImageElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    align: string
    alt: string
    border: string
    readonly complete: boolean
    height: number
    hspace: number
    is_map: boolean
    long_desc: string
    lowsrc: string
    name: string
    readonly natural_height: number
    readonly natural_width: number
    src: string
    use_map: string
    vspace: number
    width: number
    readonly x: number
    readonly y: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    get_align(): string
    get_alt(): string
    get_border(): string
    get_complete(): boolean
    get_height(): number
    get_hspace(): number
    get_is_map(): boolean
    get_long_desc(): string
    get_lowsrc(): string
    get_name(): string
    get_natural_height(): number
    get_natural_width(): number
    get_src(): string
    get_use_map(): string
    get_vspace(): number
    get_width(): number
    get_x(): number
    get_y(): number
    set_align(value: string): void
    set_alt(value: string): void
    set_border(value: string): void
    set_height(value: number): void
    set_hspace(value: number): void
    set_is_map(value: boolean): void
    set_long_desc(value: string): void
    set_lowsrc(value: string): void
    set_name(value: string): void
    set_src(value: string): void
    set_use_map(value: string): void
    set_vspace(value: number): void
    set_width(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt", ...args: any[]): void
    connect(sigName: "notify::border", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::border", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::border", ...args: any[]): void
    connect(sigName: "notify::complete", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complete", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::complete", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hspace", ...args: any[]): void
    connect(sigName: "notify::is-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-map", ...args: any[]): void
    connect(sigName: "notify::long-desc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::long-desc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::long-desc", ...args: any[]): void
    connect(sigName: "notify::lowsrc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lowsrc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lowsrc", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::natural-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::natural-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::natural-height", ...args: any[]): void
    connect(sigName: "notify::natural-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::natural-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::natural-width", ...args: any[]): void
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src", ...args: any[]): void
    connect(sigName: "notify::use-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::use-map", ...args: any[]): void
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::vspace", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::x", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::x", ...args: any[]): void
    connect(sigName: "notify::y", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::y", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLImageElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLImageElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElement

    constructor(config?: DOMHTMLImageElement_ConstructProps) 
    _init(config?: DOMHTMLImageElement_ConstructProps): void
}

interface DOMHTMLInputElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    accept?: string | null
    align?: string | null
    alt?: string | null
    autofocus?: boolean | null
    capture?: string | null
    checked?: boolean | null
    default_checked?: boolean | null
    default_value?: string | null
    disabled?: boolean | null
    height?: number | null
    indeterminate?: boolean | null
    max_length?: number | null
    multiple?: boolean | null
    name?: string | null
    read_only?: boolean | null
    size?: number | null
    src?: string | null
    type?: string | null
    use_map?: string | null
    value?: string | null
    width?: number | null
}

interface DOMHTMLInputElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    accept: string
    align: string
    alt: string
    autofocus: boolean
    capture: string
    checked: boolean
    default_checked: boolean
    default_value: string
    disabled: boolean
    readonly files: DOMFileList
    readonly form: DOMHTMLFormElement
    height: number
    indeterminate: boolean
    max_length: number
    multiple: boolean
    name: string
    read_only: boolean
    size: number
    src: string
    type: string
    use_map: string
    value: string
    width: number
    readonly will_validate: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    get_accept(): string
    get_align(): string
    get_alt(): string
    get_auto_filled(): boolean
    get_autofocus(): boolean
    get_capture(): boolean
    get_capture_type(): string
    get_checked(): boolean
    get_default_checked(): boolean
    get_default_value(): string
    get_disabled(): boolean
    get_files(): DOMFileList
    get_form(): DOMHTMLFormElement
    get_height(): number
    get_indeterminate(): boolean
    get_input_type(): string
    get_max_length(): number
    get_multiple(): boolean
    get_name(): string
    get_read_only(): boolean
    get_size(): number
    get_src(): string
    get_use_map(): string
    get_value(): string
    get_width(): number
    get_will_validate(): boolean
    is_edited(): boolean
    select(): void
    set_accept(value: string): void
    set_align(value: string): void
    set_alt(value: string): void
    set_auto_filled(value: boolean): void
    set_autofocus(value: boolean): void
    set_capture_type(value: string): void
    set_checked(value: boolean): void
    set_default_checked(value: boolean): void
    set_default_value(value: string): void
    set_disabled(value: boolean): void
    set_editing_value(value: string): void
    set_files(value: DOMFileList): void
    set_height(value: number): void
    set_indeterminate(value: boolean): void
    set_input_type(value: string): void
    set_max_length(value: number): void
    set_multiple(value: boolean): void
    set_name(value: string): void
    set_read_only(value: boolean): void
    set_size(value: number): void
    set_src(value: string): void
    set_use_map(value: string): void
    set_value(value: string): void
    set_width(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    connect(sigName: "notify::accept", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::accept", ...args: any[]): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt", ...args: any[]): void
    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::autofocus", ...args: any[]): void
    connect(sigName: "notify::capture", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::capture", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::capture", ...args: any[]): void
    connect(sigName: "notify::checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::checked", ...args: any[]): void
    connect(sigName: "notify::default-checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-checked", ...args: any[]): void
    connect(sigName: "notify::default-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-value", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::files", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::files", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::files", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::indeterminate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indeterminate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::indeterminate", ...args: any[]): void
    connect(sigName: "notify::max-length", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-length", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::max-length", ...args: any[]): void
    connect(sigName: "notify::multiple", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::multiple", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::multiple", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::use-map", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-map", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::use-map", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::will-validate", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLInputElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLInputElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElement

    constructor(config?: DOMHTMLInputElement_ConstructProps) 
    _init(config?: DOMHTMLInputElement_ConstructProps): void
}

interface DOMHTMLLIElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    type?: string | null
    value?: number | null
}

interface DOMHTMLLIElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    type: string
    value: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    get_type_attr(): string
    get_value(): number
    set_type_attr(value: string): void
    set_value(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    connect(sigName: "notify::type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLLIElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLLIElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElement

    constructor(config?: DOMHTMLLIElement_ConstructProps) 
    _init(config?: DOMHTMLLIElement_ConstructProps): void
}

interface DOMHTMLLabelElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    html_for?: string | null
}

interface DOMHTMLLabelElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    readonly form: DOMHTMLFormElement
    html_for: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    get_form(): DOMHTMLFormElement
    get_html_for(): string
    set_html_for(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    connect(sigName: "notify::form", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::html-for", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::html-for", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::html-for", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLLabelElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLLabelElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElement

    constructor(config?: DOMHTMLLabelElement_ConstructProps) 
    _init(config?: DOMHTMLLabelElement_ConstructProps): void
}

interface DOMHTMLLegendElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    align?: string | null
}

interface DOMHTMLLegendElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    align: string
    readonly form: DOMHTMLFormElement

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    get_align(): string
    get_form(): DOMHTMLFormElement
    set_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLLegendElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLLegendElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElement

    constructor(config?: DOMHTMLLegendElement_ConstructProps) 
    _init(config?: DOMHTMLLegendElement_ConstructProps): void
}

interface DOMHTMLLinkElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    charset?: string | null
    disabled?: boolean | null
    href?: string | null
    hreflang?: string | null
    media?: string | null
    rel?: string | null
    rev?: string | null
    target?: string | null
    type?: string | null
}

interface DOMHTMLLinkElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    charset: string
    disabled: boolean
    href: string
    hreflang: string
    media: string
    rel: string
    rev: string
    readonly sheet: DOMStyleSheet
    readonly sizes: DOMDOMTokenList
    target: string
    type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    get_charset(): string
    get_disabled(): boolean
    get_href(): string
    get_hreflang(): string
    get_media(): string
    get_rel(): string
    get_rev(): string
    get_sheet(): DOMStyleSheet
    get_sizes(): DOMDOMTokenList
    get_target(): string
    get_type_attr(): string
    set_charset(value: string): void
    set_disabled(value: boolean): void
    set_href(value: string): void
    set_hreflang(value: string): void
    set_media(value: string): void
    set_rel(value: string): void
    set_rev(value: string): void
    set_sizes(value: string): void
    set_target(value: string): void
    set_type_attr(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::charset", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::href", ...args: any[]): void
    connect(sigName: "notify::hreflang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hreflang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hreflang", ...args: any[]): void
    connect(sigName: "notify::media", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media", ...args: any[]): void
    connect(sigName: "notify::rel", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rel", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rel", ...args: any[]): void
    connect(sigName: "notify::rev", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rev", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rev", ...args: any[]): void
    connect(sigName: "notify::sheet", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sheet", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::sheet", ...args: any[]): void
    connect(sigName: "notify::sizes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sizes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::sizes", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLLinkElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLLinkElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElement

    constructor(config?: DOMHTMLLinkElement_ConstructProps) 
    _init(config?: DOMHTMLLinkElement_ConstructProps): void
}

interface DOMHTMLMapElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    name?: string | null
}

interface DOMHTMLMapElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    readonly areas: DOMHTMLCollection
    name: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    get_areas(): DOMHTMLCollection
    get_name(): string
    set_name(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    connect(sigName: "notify::areas", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::areas", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::areas", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLMapElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLMapElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElement

    constructor(config?: DOMHTMLMapElement_ConstructProps) 
    _init(config?: DOMHTMLMapElement_ConstructProps): void
}

interface DOMHTMLMarqueeElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {
}

interface DOMHTMLMarqueeElement extends DOMEventTarget {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElement

    start(): void
    stop(): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElement

    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLMarqueeElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLMarqueeElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElement

    constructor(config?: DOMHTMLMarqueeElement_ConstructProps) 
    _init(config?: DOMHTMLMarqueeElement_ConstructProps): void
}

interface DOMHTMLMenuElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    compact?: boolean | null
}

interface DOMHTMLMenuElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    compact: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    get_compact(): boolean
    set_compact(value: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compact", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLMenuElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLMenuElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElement

    constructor(config?: DOMHTMLMenuElement_ConstructProps) 
    _init(config?: DOMHTMLMenuElement_ConstructProps): void
}

interface DOMHTMLMetaElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    content?: string | null
    http_equiv?: string | null
    name?: string | null
    scheme?: string | null
}

interface DOMHTMLMetaElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    content: string
    http_equiv: string
    name: string
    scheme: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    get_content(): string
    get_http_equiv(): string
    get_name(): string
    get_scheme(): string
    set_content(value: string): void
    set_http_equiv(value: string): void
    set_name(value: string): void
    set_scheme(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    connect(sigName: "notify::content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content", ...args: any[]): void
    connect(sigName: "notify::http-equiv", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::http-equiv", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::http-equiv", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::scheme", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scheme", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scheme", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLMetaElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLMetaElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElement

    constructor(config?: DOMHTMLMetaElement_ConstructProps) 
    _init(config?: DOMHTMLMetaElement_ConstructProps): void
}

interface DOMHTMLModElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    cite?: string | null
    date_time?: string | null
}

interface DOMHTMLModElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    cite: string
    date_time: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    get_cite(): string
    get_date_time(): string
    set_cite(value: string): void
    set_date_time(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    connect(sigName: "notify::cite", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cite", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cite", ...args: any[]): void
    connect(sigName: "notify::date-time", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::date-time", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::date-time", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLModElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLModElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElement

    constructor(config?: DOMHTMLModElement_ConstructProps) 
    _init(config?: DOMHTMLModElement_ConstructProps): void
}

interface DOMHTMLOListElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    compact?: boolean | null
    start?: number | null
    type?: string | null
}

interface DOMHTMLOListElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    compact: boolean
    start: number
    type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    get_compact(): boolean
    get_start(): number
    get_type_attr(): string
    set_compact(value: boolean): void
    set_start(value: number): void
    set_type_attr(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compact", ...args: any[]): void
    connect(sigName: "notify::start", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLOListElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLOListElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElement

    constructor(config?: DOMHTMLOListElement_ConstructProps) 
    _init(config?: DOMHTMLOListElement_ConstructProps): void
}

interface DOMHTMLObjectElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    align?: string | null
    archive?: string | null
    border?: string | null
    code?: string | null
    code_base?: string | null
    code_type?: string | null
    data?: string | null
    declare?: boolean | null
    height?: string | null
    hspace?: number | null
    name?: string | null
    standby?: string | null
    type?: string | null
    use_map?: string | null
    vspace?: number | null
    width?: string | null
}

interface DOMHTMLObjectElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    align: string
    archive: string
    border: string
    code: string
    code_base: string
    code_type: string
    readonly content_document: DOMDocument
    data: string
    declare: boolean
    readonly form: DOMHTMLFormElement
    height: string
    hspace: number
    name: string
    standby: string
    type: string
    use_map: string
    vspace: number
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    get_align(): string
    get_archive(): string
    get_border(): string
    get_code(): string
    get_code_base(): string
    get_code_type(): string
    get_content_document(): DOMDocument
    get_data(): string

    // Overloads of get_data

    /**
     * Gets a named field from the objects table of associations (see g_object_set_data()).
     * @param key name of the key for that association
     */
    get_data(key?: string): object | null
    get_data(...args: any[]): any
    get_data(args_or_key?: any[] | string): string | object | null | any
    get_declare(): boolean
    get_form(): DOMHTMLFormElement
    get_height(): string
    get_hspace(): number
    get_name(): string
    get_standby(): string
    get_type_attr(): string
    get_use_map(): string
    get_vspace(): number
    get_width(): string
    set_align(value: string): void
    set_archive(value: string): void
    set_border(value: string): void
    set_code(value: string): void
    set_code_base(value: string): void
    set_code_type(value: string): void
    set_data(value: string): void

    // Overloads of set_data

    /**
     * Each object carries around a table of associations from
     * strings to pointers.  This function lets you set an association.
     * 
     * If the object already had an association with that name,
     * the old association will be destroyed.
     * 
     * Internally, the `key` is converted to a #GQuark using g_quark_from_string().
     * This means a copy of `key` is kept permanently (even after `object` has been
     * finalized) — so it is recommended to only use a small, bounded set of values
     * for `key` in your program, to avoid the #GQuark storage growing unbounded.
     * @param key name of the key
     * @param data data to associate with that key
     */
    set_data(key: string, data?: object | null): void
    set_data(...args: any[]): any
    set_data(args_or_key: any[] | string, data?: object | null): void | any
    set_declare(value: boolean): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_name(value: string): void
    set_standby(value: string): void
    set_type_attr(value: string): void
    set_use_map(value: string): void
    set_vspace(value: number): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::archive", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::archive", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::archive", ...args: any[]): void
    connect(sigName: "notify::border", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::border", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::border", ...args: any[]): void
    connect(sigName: "notify::code", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::code", ...args: any[]): void
    connect(sigName: "notify::code-base", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code-base", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::code-base", ...args: any[]): void
    connect(sigName: "notify::code-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::code-type", ...args: any[]): void
    connect(sigName: "notify::content-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-document", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::declare", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::declare", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::declare", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hspace", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::standby", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::standby", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::standby", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::use-map", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-map", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::use-map", ...args: any[]): void
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::vspace", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLObjectElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLObjectElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElement

    constructor(config?: DOMHTMLObjectElement_ConstructProps) 
    _init(config?: DOMHTMLObjectElement_ConstructProps): void
}

interface DOMHTMLOptGroupElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    disabled?: boolean | null
    label?: string | null
}

interface DOMHTMLOptGroupElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    disabled: boolean
    label: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    get_disabled(): boolean
    get_label(): string
    set_disabled(value: boolean): void
    set_label(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::label", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::label", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLOptGroupElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLOptGroupElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElement

    constructor(config?: DOMHTMLOptGroupElement_ConstructProps) 
    _init(config?: DOMHTMLOptGroupElement_ConstructProps): void
}

interface DOMHTMLOptionElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    default_selected?: boolean | null
    disabled?: boolean | null
    label?: string | null
    selected?: boolean | null
    value?: string | null
}

interface DOMHTMLOptionElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    default_selected: boolean
    disabled: boolean
    readonly form: DOMHTMLFormElement
    readonly index: number
    label: string
    selected: boolean
    readonly text: string
    value: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    get_default_selected(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_index(): number
    get_label(): string
    get_selected(): boolean
    get_text(): string
    get_value(): string
    set_default_selected(value: boolean): void
    set_disabled(value: boolean): void
    set_label(value: string): void
    set_selected(value: boolean): void
    set_value(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    connect(sigName: "notify::default-selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-selected", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::index", ...args: any[]): void
    connect(sigName: "notify::label", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::label", ...args: any[]): void
    connect(sigName: "notify::selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selected", ...args: any[]): void
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLOptionElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLOptionElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElement

    constructor(config?: DOMHTMLOptionElement_ConstructProps) 
    _init(config?: DOMHTMLOptionElement_ConstructProps): void
}

interface DOMHTMLOptionsCollection_ConstructProps extends DOMHTMLCollection_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    selected_index?: number | null
}

interface DOMHTMLOptionsCollection {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    readonly length: number
    selected_index: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    parent_instance: DOMHTMLCollection

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    get_length(): number
    get_selected_index(): number
    named_item(name: string): DOMNode
    set_selected_index(value: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    connect(sigName: "notify::length", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::selected-index", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-index", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selected-index", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLOptionsCollection extends DOMHTMLCollection {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    static name: string
    static $gtype: GObject.GType<DOMHTMLOptionsCollection>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollection

    constructor(config?: DOMHTMLOptionsCollection_ConstructProps) 
    _init(config?: DOMHTMLOptionsCollection_ConstructProps): void
}

interface DOMHTMLParagraphElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    align?: string | null
}

interface DOMHTMLParagraphElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    align: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    get_align(): string
    set_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLParagraphElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLParagraphElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElement

    constructor(config?: DOMHTMLParagraphElement_ConstructProps) 
    _init(config?: DOMHTMLParagraphElement_ConstructProps): void
}

interface DOMHTMLParamElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    name?: string | null
    type?: string | null
    value?: string | null
    value_type?: string | null
}

interface DOMHTMLParamElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    name: string
    type: string
    value: string
    value_type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    get_name(): string
    get_type_attr(): string
    get_value(): string
    get_value_type(): string
    set_name(value: string): void
    set_type_attr(value: string): void
    set_value(value: string): void
    set_value_type(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    connect(sigName: "notify::name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::value-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value-type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLParamElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLParamElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElement

    constructor(config?: DOMHTMLParamElement_ConstructProps) 
    _init(config?: DOMHTMLParamElement_ConstructProps): void
}

interface DOMHTMLPreElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    width?: number | null
    wrap?: boolean | null
}

interface DOMHTMLPreElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    width: number
    wrap: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    get_width(): number
    get_wrap(): boolean
    set_width(value: number): void
    set_wrap(value: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    connect(sigName: "notify::width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::wrap", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::wrap", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLPreElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLPreElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElement

    constructor(config?: DOMHTMLPreElement_ConstructProps) 
    _init(config?: DOMHTMLPreElement_ConstructProps): void
}

interface DOMHTMLQuoteElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    cite?: string | null
}

interface DOMHTMLQuoteElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    cite: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    get_cite(): string
    set_cite(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    connect(sigName: "notify::cite", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cite", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cite", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLQuoteElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLQuoteElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElement

    constructor(config?: DOMHTMLQuoteElement_ConstructProps) 
    _init(config?: DOMHTMLQuoteElement_ConstructProps): void
}

interface DOMHTMLScriptElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    charset?: string | null
    defer?: boolean | null
    event?: string | null
    html_for?: string | null
    src?: string | null
    text?: string | null
    type?: string | null
}

interface DOMHTMLScriptElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    charset: string
    defer: boolean
    event: string
    html_for: string
    src: string
    text: string
    type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    get_charset(): string
    get_defer(): boolean
    get_event(): string
    get_html_for(): string
    get_src(): string
    get_text(): string
    get_type_attr(): string
    set_charset(value: string): void
    set_defer(value: boolean): void
    set_event(value: string): void
    set_html_for(value: string): void
    set_src(value: string): void
    set_text(value: string): void
    set_type_attr(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::charset", ...args: any[]): void
    connect(sigName: "notify::defer", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::defer", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::defer", ...args: any[]): void
    connect(sigName: "notify::event", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event", ...args: any[]): void
    connect(sigName: "notify::html-for", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::html-for", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::html-for", ...args: any[]): void
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src", ...args: any[]): void
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLScriptElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLScriptElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElement

    constructor(config?: DOMHTMLScriptElement_ConstructProps) 
    _init(config?: DOMHTMLScriptElement_ConstructProps): void
}

interface DOMHTMLSelectElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    autofocus?: boolean | null
    disabled?: boolean | null
    length?: number | null
    multiple?: boolean | null
    name?: string | null
    selected_index?: number | null
    size?: number | null
    value?: string | null
}

interface DOMHTMLSelectElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    autofocus: boolean
    disabled: boolean
    readonly form: DOMHTMLFormElement
    length: number
    multiple: boolean
    name: string
    readonly options: DOMHTMLOptionsCollection
    selected_index: number
    size: number
    readonly type: string
    value: string
    readonly will_validate: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    add(element: DOMHTMLElement, before: DOMHTMLElement): void
    get_autofocus(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_length(): number
    get_multiple(): boolean
    get_name(): string
    get_options(): DOMHTMLOptionsCollection
    get_select_type(): string
    get_selected_index(): number
    get_size(): number
    get_value(): string
    get_will_validate(): boolean
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    remove(index?: number): void

    // Overloads of remove

    remove(): void
    remove(...args: any[]): any
    remove(...args: any[]): void | any
    set_autofocus(value: boolean): void
    set_disabled(value: boolean): void
    set_length(value: number): void
    set_multiple(value: boolean): void
    set_name(value: string): void
    set_selected_index(value: number): void
    set_size(value: number): void
    set_value(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::autofocus", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::multiple", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::multiple", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::multiple", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::options", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::options", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::options", ...args: any[]): void
    connect(sigName: "notify::selected-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selected-index", ...args: any[]): void
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::size", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::will-validate", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLSelectElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLSelectElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElement

    constructor(config?: DOMHTMLSelectElement_ConstructProps) 
    _init(config?: DOMHTMLSelectElement_ConstructProps): void
}

interface DOMHTMLStyleElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    disabled?: boolean | null
    media?: string | null
    type?: string | null
}

interface DOMHTMLStyleElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    disabled: boolean
    media: string
    readonly sheet: DOMStyleSheet
    type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    get_disabled(): boolean
    get_media(): string
    get_sheet(): DOMStyleSheet
    get_type_attr(): string
    set_disabled(value: boolean): void
    set_media(value: string): void
    set_type_attr(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::media", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media", ...args: any[]): void
    connect(sigName: "notify::sheet", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sheet", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::sheet", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLStyleElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLStyleElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElement

    constructor(config?: DOMHTMLStyleElement_ConstructProps) 
    _init(config?: DOMHTMLStyleElement_ConstructProps): void
}

interface DOMHTMLTableCaptionElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    align?: string | null
}

interface DOMHTMLTableCaptionElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    align: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    get_align(): string
    set_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTableCaptionElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTableCaptionElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElement

    constructor(config?: DOMHTMLTableCaptionElement_ConstructProps) 
    _init(config?: DOMHTMLTableCaptionElement_ConstructProps): void
}

interface DOMHTMLTableCellElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    abbr?: string | null
    align?: string | null
    axis?: string | null
    bg_color?: string | null
    ch?: string | null
    ch_off?: string | null
    col_span?: number | null
    headers?: string | null
    height?: string | null
    no_wrap?: boolean | null
    row_span?: number | null
    scope?: string | null
    v_align?: string | null
    width?: string | null
}

interface DOMHTMLTableCellElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    abbr: string
    align: string
    axis: string
    bg_color: string
    readonly cell_index: number
    ch: string
    ch_off: string
    col_span: number
    headers: string
    height: string
    no_wrap: boolean
    row_span: number
    scope: string
    v_align: string
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    get_abbr(): string
    get_align(): string
    get_axis(): string
    get_bg_color(): string
    get_cell_index(): number
    get_ch(): string
    get_ch_off(): string
    get_col_span(): number
    get_headers(): string
    get_height(): string
    get_no_wrap(): boolean
    get_row_span(): number
    get_scope(): string
    get_v_align(): string
    get_width(): string
    set_abbr(value: string): void
    set_align(value: string): void
    set_axis(value: string): void
    set_bg_color(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_col_span(value: number): void
    set_headers(value: string): void
    set_height(value: string): void
    set_no_wrap(value: boolean): void
    set_row_span(value: number): void
    set_scope(value: string): void
    set_v_align(value: string): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    connect(sigName: "notify::abbr", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abbr", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::abbr", ...args: any[]): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::axis", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::axis", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::axis", ...args: any[]): void
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bg-color", ...args: any[]): void
    connect(sigName: "notify::cell-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cell-index", ...args: any[]): void
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch", ...args: any[]): void
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch-off", ...args: any[]): void
    connect(sigName: "notify::col-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::col-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::col-span", ...args: any[]): void
    connect(sigName: "notify::headers", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::headers", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::headers", ...args: any[]): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::height", ...args: any[]): void
    connect(sigName: "notify::no-wrap", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-wrap", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::no-wrap", ...args: any[]): void
    connect(sigName: "notify::row-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::row-span", ...args: any[]): void
    connect(sigName: "notify::scope", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scope", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scope", ...args: any[]): void
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-align", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTableCellElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTableCellElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElement

    constructor(config?: DOMHTMLTableCellElement_ConstructProps) 
    _init(config?: DOMHTMLTableCellElement_ConstructProps): void
}

interface DOMHTMLTableColElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    align?: string | null
    ch?: string | null
    ch_off?: string | null
    span?: number | null
    v_align?: string | null
    width?: string | null
}

interface DOMHTMLTableColElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    align: string
    ch: string
    ch_off: string
    span: number
    v_align: string
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    get_align(): string
    get_ch(): string
    get_ch_off(): string
    get_span(): number
    get_v_align(): string
    get_width(): string
    set_align(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_span(value: number): void
    set_v_align(value: string): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch", ...args: any[]): void
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch-off", ...args: any[]): void
    connect(sigName: "notify::span", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::span", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::span", ...args: any[]): void
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-align", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTableColElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTableColElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElement

    constructor(config?: DOMHTMLTableColElement_ConstructProps) 
    _init(config?: DOMHTMLTableColElement_ConstructProps): void
}

interface DOMHTMLTableElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    align?: string | null
    bg_color?: string | null
    border?: string | null
    cell_padding?: string | null
    cell_spacing?: string | null
    rules?: string | null
    summary?: string | null
    width?: string | null
}

interface DOMHTMLTableElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    align: string
    bg_color: string
    border: string
    readonly caption: DOMHTMLTableCaptionElement
    cell_padding: string
    cell_spacing: string
    readonly rows: DOMHTMLCollection
    rules: string
    summary: string
    readonly t_bodies: DOMHTMLCollection
    readonly t_foot: DOMHTMLTableSectionElement
    readonly t_head: DOMHTMLTableSectionElement
    width: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    create_caption(): DOMHTMLElement
    create_t_foot(): DOMHTMLElement
    create_t_head(): DOMHTMLElement
    delete_caption(): void
    delete_row(index: number): void
    delete_t_foot(): void
    delete_t_head(): void
    get_align(): string
    get_bg_color(): string
    get_border(): string
    get_caption(): DOMHTMLTableCaptionElement
    get_cell_padding(): string
    get_cell_spacing(): string
    get_rows(): DOMHTMLCollection
    get_rules(): string
    get_summary(): string
    get_t_bodies(): DOMHTMLCollection
    get_t_foot(): DOMHTMLTableSectionElement
    get_t_head(): DOMHTMLTableSectionElement
    get_width(): string
    insert_row(index: number): DOMHTMLElement
    set_align(value: string): void
    set_bg_color(value: string): void
    set_border(value: string): void
    set_caption(value: DOMHTMLTableCaptionElement): void
    set_cell_padding(value: string): void
    set_cell_spacing(value: string): void
    set_rules(value: string): void
    set_summary(value: string): void
    set_t_foot(value: DOMHTMLTableSectionElement): void
    set_t_head(value: DOMHTMLTableSectionElement): void
    set_width(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bg-color", ...args: any[]): void
    connect(sigName: "notify::border", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::border", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::border", ...args: any[]): void
    connect(sigName: "notify::caption", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::caption", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::caption", ...args: any[]): void
    connect(sigName: "notify::cell-padding", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-padding", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cell-padding", ...args: any[]): void
    connect(sigName: "notify::cell-spacing", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-spacing", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cell-spacing", ...args: any[]): void
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rows", ...args: any[]): void
    connect(sigName: "notify::rules", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rules", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rules", ...args: any[]): void
    connect(sigName: "notify::summary", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::summary", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::summary", ...args: any[]): void
    connect(sigName: "notify::t-bodies", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::t-bodies", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::t-bodies", ...args: any[]): void
    connect(sigName: "notify::t-foot", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::t-foot", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::t-foot", ...args: any[]): void
    connect(sigName: "notify::t-head", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::t-head", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::t-head", ...args: any[]): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::width", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTableElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTableElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElement

    constructor(config?: DOMHTMLTableElement_ConstructProps) 
    _init(config?: DOMHTMLTableElement_ConstructProps): void
}

interface DOMHTMLTableRowElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    align?: string | null
    bg_color?: string | null
    ch?: string | null
    ch_off?: string | null
    v_align?: string | null
}

interface DOMHTMLTableRowElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    align: string
    bg_color: string
    readonly cells: DOMHTMLCollection
    ch: string
    ch_off: string
    readonly row_index: number
    readonly section_row_index: number
    v_align: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    delete_cell(index: number): void
    get_align(): string
    get_bg_color(): string
    get_cells(): DOMHTMLCollection
    get_ch(): string
    get_ch_off(): string
    get_row_index(): number
    get_section_row_index(): number
    get_v_align(): string
    insert_cell(index: number): DOMHTMLElement
    set_align(value: string): void
    set_bg_color(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_v_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bg-color", ...args: any[]): void
    connect(sigName: "notify::cells", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cells", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cells", ...args: any[]): void
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch", ...args: any[]): void
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch-off", ...args: any[]): void
    connect(sigName: "notify::row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::row-index", ...args: any[]): void
    connect(sigName: "notify::section-row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::section-row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::section-row-index", ...args: any[]): void
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-align", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTableRowElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTableRowElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElement

    constructor(config?: DOMHTMLTableRowElement_ConstructProps) 
    _init(config?: DOMHTMLTableRowElement_ConstructProps): void
}

interface DOMHTMLTableSectionElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    align?: string | null
    ch?: string | null
    ch_off?: string | null
    v_align?: string | null
}

interface DOMHTMLTableSectionElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    align: string
    ch: string
    ch_off: string
    readonly rows: DOMHTMLCollection
    v_align: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    delete_row(index: number): void
    get_align(): string
    get_ch(): string
    get_ch_off(): string
    get_rows(): DOMHTMLCollection
    get_v_align(): string
    insert_row(index: number): DOMHTMLElement
    set_align(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_v_align(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::align", ...args: any[]): void
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch", ...args: any[]): void
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ch-off", ...args: any[]): void
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rows", ...args: any[]): void
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::v-align", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTableSectionElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTableSectionElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElement

    constructor(config?: DOMHTMLTableSectionElement_ConstructProps) 
    _init(config?: DOMHTMLTableSectionElement_ConstructProps): void
}

interface DOMHTMLTextAreaElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    autofocus?: boolean | null
    cols?: number | null
    default_value?: string | null
    disabled?: boolean | null
    name?: string | null
    read_only?: boolean | null
    rows?: number | null
    selection_end?: number | null
    selection_start?: number | null
    value?: string | null
}

interface DOMHTMLTextAreaElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    autofocus: boolean
    cols: number
    default_value: string
    disabled: boolean
    readonly form: DOMHTMLFormElement
    name: string
    read_only: boolean
    rows: number
    selection_end: number
    selection_start: number
    readonly type: string
    value: string
    readonly will_validate: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    get_area_type(): string
    get_autofocus(): boolean
    get_cols(): number
    get_default_value(): string
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_name(): string
    get_read_only(): boolean
    get_rows(): number
    get_selection_end(): number
    get_selection_start(): number
    get_value(): string
    get_will_validate(): boolean
    is_edited(): boolean
    select(): void
    set_autofocus(value: boolean): void
    set_cols(value: number): void
    set_default_value(value: string): void
    set_disabled(value: boolean): void
    set_name(value: string): void
    set_read_only(value: boolean): void
    set_rows(value: number): void
    set_selection_end(value: number): void
    set_selection_range(start: number, end: number, direction: string): void
    set_selection_start(value: number): void
    set_value(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::autofocus", ...args: any[]): void
    connect(sigName: "notify::cols", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cols", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cols", ...args: any[]): void
    connect(sigName: "notify::default-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::default-value", ...args: any[]): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::form", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::read-only", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::read-only", ...args: any[]): void
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::rows", ...args: any[]): void
    connect(sigName: "notify::selection-end", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-end", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selection-end", ...args: any[]): void
    connect(sigName: "notify::selection-start", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-start", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::selection-start", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::value", ...args: any[]): void
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::will-validate", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTextAreaElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTextAreaElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElement

    constructor(config?: DOMHTMLTextAreaElement_ConstructProps) 
    _init(config?: DOMHTMLTextAreaElement_ConstructProps): void
}

interface DOMHTMLTitleElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    text?: string | null
}

interface DOMHTMLTitleElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    text: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    get_text(): string
    set_text(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    connect(sigName: "notify::text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLTitleElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLTitleElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElement

    constructor(config?: DOMHTMLTitleElement_ConstructProps) 
    _init(config?: DOMHTMLTitleElement_ConstructProps): void
}

interface DOMHTMLUListElement_ConstructProps extends DOMEventTarget_ConstructProps, DOMHTMLElement_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    compact?: boolean | null
    type?: string | null
}

interface DOMHTMLUListElement extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    compact: boolean
    type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    parent_instance: DOMHTMLElement

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    get_compact(): boolean
    get_type_attr(): string
    set_compact(value: boolean): void
    set_type_attr(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::compact", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::access-key", ...args: any[]): void
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-editable", ...args: any[]): void
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::dir", ...args: any[]): void
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::draggable", ...args: any[]): void
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::hidden", ...args: any[]): void
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-text", ...args: any[]): void
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::is-content-editable", ...args: any[]): void
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::lang", ...args: any[]): void
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-text", ...args: any[]): void
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::spellcheck", ...args: any[]): void
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tab-index", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::translate", ...args: any[]): void
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkitdropzone", ...args: any[]): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::attributes", ...args: any[]): void
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-element-count", ...args: any[]): void
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::children", ...args: any[]): void
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-list", ...args: any[]): void
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::class-name", ...args: any[]): void
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-height", ...args: any[]): void
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-left", ...args: any[]): void
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-top", ...args: any[]): void
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-width", ...args: any[]): void
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-element-child", ...args: any[]): void
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::id", ...args: any[]): void
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::inner-html", ...args: any[]): void
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-element-child", ...args: any[]): void
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::local-name", ...args: any[]): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::namespace-uri", ...args: any[]): void
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-element-sibling", ...args: any[]): void
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-height", ...args: any[]): void
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-left", ...args: any[]): void
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-parent", ...args: any[]): void
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-top", ...args: any[]): void
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-width", ...args: any[]): void
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::outer-html", ...args: any[]): void
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::prefix", ...args: any[]): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-element-sibling", ...args: any[]): void
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-height", ...args: any[]): void
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-left", ...args: any[]): void
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-top", ...args: any[]): void
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::scroll-width", ...args: any[]): void
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::style", ...args: any[]): void
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::tag-name", ...args: any[]): void
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::webkit-region-overset", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMHTMLUListElement extends DOMHTMLElement {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    static name: string
    static $gtype: GObject.GType<DOMHTMLUListElement>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElement

    constructor(config?: DOMHTMLUListElement_ConstructProps) 
    _init(config?: DOMHTMLUListElement_ConstructProps): void
}

interface DOMKeyboardEvent_ConstructProps extends DOMUIEvent_ConstructProps {
}

interface DOMKeyboardEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEvent

    readonly alt_graph_key: boolean
    readonly alt_key: boolean
    readonly ctrl_key: boolean
    readonly key_identifier: string
    readonly key_location: number
    readonly meta_key: boolean
    readonly shift_key: boolean

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEvent

    parent_instance: DOMUIEvent

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEvent

    get_alt_graph_key(): boolean
    get_alt_key(): boolean
    get_ctrl_key(): boolean
    get_key_identifier(): string
    get_key_location(): number
    get_meta_key(): boolean
    get_modifier_state(keyIdentifierArg: string): boolean
    get_shift_key(): boolean
    init_keyboard_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, keyIdentifier: string, location: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, altGraphKey: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEvent

    connect(sigName: "notify::alt-graph-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-graph-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt-graph-key", ...args: any[]): void
    connect(sigName: "notify::alt-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt-key", ...args: any[]): void
    connect(sigName: "notify::ctrl-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ctrl-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ctrl-key", ...args: any[]): void
    connect(sigName: "notify::key-identifier", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-identifier", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key-identifier", ...args: any[]): void
    connect(sigName: "notify::key-location", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-location", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key-location", ...args: any[]): void
    connect(sigName: "notify::meta-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::meta-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::meta-key", ...args: any[]): void
    connect(sigName: "notify::shift-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shift-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::shift-key", ...args: any[]): void
    connect(sigName: "notify::char-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::char-code", ...args: any[]): void
    connect(sigName: "notify::detail", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: "notify::key-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key-code", ...args: any[]): void
    connect(sigName: "notify::layer-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-x", ...args: any[]): void
    connect(sigName: "notify::layer-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-y", ...args: any[]): void
    connect(sigName: "notify::page-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-x", ...args: any[]): void
    connect(sigName: "notify::page-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-y", ...args: any[]): void
    connect(sigName: "notify::view", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::view", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancel-bubble", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: "notify::return-value", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::return-value", ...args: any[]): void
    connect(sigName: "notify::src-element", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src-element", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMKeyboardEvent extends DOMUIEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEvent

    static name: string
    static $gtype: GObject.GType<DOMKeyboardEvent>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEvent

    constructor(config?: DOMKeyboardEvent_ConstructProps) 
    _init(config?: DOMKeyboardEvent_ConstructProps): void
}

interface DOMMediaList_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    media_text?: string | null
}

interface DOMMediaList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    readonly length: number
    media_text: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    append_medium(newMedium: string): void
    delete_medium(oldMedium: string): void
    get_length(): number
    get_media_text(): string
    item(index: number): string
    set_media_text(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    connect(sigName: "notify::length", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::media-text", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-text", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media-text", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMMediaList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    static name: string
    static $gtype: GObject.GType<DOMMediaList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaList

    constructor(config?: DOMMediaList_ConstructProps) 
    _init(config?: DOMMediaList_ConstructProps): void
}

interface DOMMouseEvent_ConstructProps extends DOMUIEvent_ConstructProps {
}

interface DOMMouseEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEvent

    readonly alt_key: boolean
    readonly button: number
    readonly client_x: number
    readonly client_y: number
    readonly ctrl_key: boolean
    readonly from_element: DOMNode
    readonly meta_key: boolean
    readonly offset_x: number
    readonly offset_y: number
    readonly related_target: DOMEventTarget
    readonly screen_x: number
    readonly screen_y: number
    readonly shift_key: boolean
    readonly to_element: DOMNode
    readonly x: number
    readonly y: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEvent

    parent_instance: DOMUIEvent

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEvent

    get_alt_key(): boolean
    get_button(): number
    get_client_x(): number
    get_client_y(): number
    get_ctrl_key(): boolean
    get_from_element(): DOMNode
    get_meta_key(): boolean
    get_offset_x(): number
    get_offset_y(): number
    get_related_target(): DOMEventTarget
    get_screen_x(): number
    get_screen_y(): number
    get_shift_key(): boolean
    get_to_element(): DOMNode
    get_x(): number
    get_y(): number
    init_mouse_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, button: number, relatedTarget: DOMEventTarget): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEvent

    connect(sigName: "notify::alt-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt-key", ...args: any[]): void
    connect(sigName: "notify::button", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::button", ...args: any[]): void
    connect(sigName: "notify::client-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-x", ...args: any[]): void
    connect(sigName: "notify::client-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-y", ...args: any[]): void
    connect(sigName: "notify::ctrl-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ctrl-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ctrl-key", ...args: any[]): void
    connect(sigName: "notify::from-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::from-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::from-element", ...args: any[]): void
    connect(sigName: "notify::meta-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::meta-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::meta-key", ...args: any[]): void
    connect(sigName: "notify::offset-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-x", ...args: any[]): void
    connect(sigName: "notify::offset-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-y", ...args: any[]): void
    connect(sigName: "notify::related-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::related-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::related-target", ...args: any[]): void
    connect(sigName: "notify::screen-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-x", ...args: any[]): void
    connect(sigName: "notify::screen-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-y", ...args: any[]): void
    connect(sigName: "notify::shift-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shift-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::shift-key", ...args: any[]): void
    connect(sigName: "notify::to-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::to-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::to-element", ...args: any[]): void
    connect(sigName: "notify::x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::x", ...args: any[]): void
    connect(sigName: "notify::y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::y", ...args: any[]): void
    connect(sigName: "notify::char-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::char-code", ...args: any[]): void
    connect(sigName: "notify::detail", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: "notify::key-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key-code", ...args: any[]): void
    connect(sigName: "notify::layer-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-x", ...args: any[]): void
    connect(sigName: "notify::layer-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-y", ...args: any[]): void
    connect(sigName: "notify::page-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-x", ...args: any[]): void
    connect(sigName: "notify::page-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-y", ...args: any[]): void
    connect(sigName: "notify::view", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::view", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancel-bubble", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: "notify::return-value", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::return-value", ...args: any[]): void
    connect(sigName: "notify::src-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src-element", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMMouseEvent extends DOMUIEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEvent

    static name: string
    static $gtype: GObject.GType<DOMMouseEvent>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEvent

    constructor(config?: DOMMouseEvent_ConstructProps) 
    _init(config?: DOMMouseEvent_ConstructProps): void
}

interface DOMNamedNodeMap_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMNamedNodeMap {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMap

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMap

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMap

    get_length(): number
    get_named_item(name: string): DOMNode
    get_named_item_ns(namespaceURI: string, localName: string): DOMNode
    item(index: number): DOMNode
    remove_named_item(name: string): DOMNode
    remove_named_item_ns(namespaceURI: string, localName: string): DOMNode
    set_named_item(node: DOMNode): DOMNode
    set_named_item_ns(node: DOMNode): DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMap

    connect(sigName: "notify::length", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMNamedNodeMap extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMap

    static name: string
    static $gtype: GObject.GType<DOMNamedNodeMap>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMap

    constructor(config?: DOMNamedNodeMap_ConstructProps) 
    _init(config?: DOMNamedNodeMap_ConstructProps): void
}

interface DOMNode_ConstructProps extends DOMEventTarget_ConstructProps, DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    node_value?: string | null
    text_content?: string | null
}

interface DOMNode extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    connect(sigName: "notify::base-uri", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMNode extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    static name: string
    static $gtype: GObject.GType<DOMNode>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNode

    constructor(config?: DOMNode_ConstructProps) 
    _init(config?: DOMNode_ConstructProps): void
    /**
     * Get the #WebKitDOMNode for the DOM node referenced by `value`.
     * @param value a #JSCValue
     */
    static for_js_value(value: JavaScriptCore.Value): DOMNode
}

interface DOMNodeIterator_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMNodeIterator {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIterator

    readonly filter: DOMNodeFilter
    readonly pointer_before_reference_node: boolean
    readonly reference_node: DOMNode
    readonly root: DOMNode
    readonly what_to_show: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIterator

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIterator

    detach(): void
    /**
     * This function has been removed from the DOM spec and it just returns %FALSE.
     */
    get_expand_entity_references(): boolean
    get_filter(): DOMNodeFilter
    get_pointer_before_reference_node(): boolean
    get_reference_node(): DOMNode
    get_root(): DOMNode
    get_what_to_show(): number
    next_node(): DOMNode
    previous_node(): DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIterator

    connect(sigName: "notify::filter", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::filter", ...args: any[]): void
    connect(sigName: "notify::pointer-before-reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-before-reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::pointer-before-reference-node", ...args: any[]): void
    connect(sigName: "notify::reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::reference-node", ...args: any[]): void
    connect(sigName: "notify::root", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::what-to-show", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::what-to-show", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMNodeIterator extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIterator

    static name: string
    static $gtype: GObject.GType<DOMNodeIterator>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIterator

    constructor(config?: DOMNodeIterator_ConstructProps) 
    _init(config?: DOMNodeIterator_ConstructProps): void
}

interface DOMNodeList_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMNodeList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeList

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeList

    get_length(): number
    item(index: number): DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeList

    connect(sigName: "notify::length", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMNodeList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeList

    static name: string
    static $gtype: GObject.GType<DOMNodeList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeList

    constructor(config?: DOMNodeList_ConstructProps) 
    _init(config?: DOMNodeList_ConstructProps): void
}

interface DOMObject_ConstructProps extends GObject.Object_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObject

    core_object?: object | null
}

interface DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObject

    readonly core_object: object

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObject

    parentInstance: GObject.Object
    coreObject: object

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObject

    connect(sigName: "notify::core-object", callback: (($obj: DOMObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMObject extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObject

    static name: string
    static $gtype: GObject.GType<DOMObject>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObject

    constructor(config?: DOMObject_ConstructProps) 
    _init(config?: DOMObject_ConstructProps): void
}

interface DOMProcessingInstruction_ConstructProps extends DOMEventTarget_ConstructProps, DOMCharacterData_ConstructProps {
}

interface DOMProcessingInstruction extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstruction

    readonly sheet: DOMStyleSheet
    readonly target: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstruction

    parent_instance: DOMCharacterData

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstruction

    get_sheet(): DOMStyleSheet
    get_target(): string

    // Conflicting methods

    get_data(...args: any[]): any
    set_data(...args: any[]): any

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstruction

    connect(sigName: "notify::sheet", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sheet", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::sheet", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMProcessingInstruction extends DOMCharacterData {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstruction

    static name: string
    static $gtype: GObject.GType<DOMProcessingInstruction>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstruction

    constructor(config?: DOMProcessingInstruction_ConstructProps) 
    _init(config?: DOMProcessingInstruction_ConstructProps): void
}

interface DOMRange_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMRange {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRange

    readonly collapsed: boolean
    readonly common_ancestor_container: DOMNode
    readonly end_container: DOMNode
    readonly end_offset: number
    readonly start_container: DOMNode
    readonly start_offset: number
    readonly text: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRange

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRange

    clone_contents(): DOMDocumentFragment
    clone_range(): DOMRange
    collapse(toStart: boolean): void
    compare_boundary_points(how: number, sourceRange: DOMRange): number
    compare_node(refNode: DOMNode): number
    compare_point(refNode: DOMNode, offset: number): number
    create_contextual_fragment(html: string): DOMDocumentFragment
    delete_contents(): void
    detach(): void
    expand(unit: string): void
    extract_contents(): DOMDocumentFragment
    get_collapsed(): boolean
    get_common_ancestor_container(): DOMNode
    get_end_container(): DOMNode
    get_end_offset(): number
    get_start_container(): DOMNode
    get_start_offset(): number
    get_text(): string
    insert_node(newNode: DOMNode): void
    intersects_node(refNode: DOMNode): boolean
    is_point_in_range(refNode: DOMNode, offset: number): boolean
    select_node(refNode: DOMNode): void
    select_node_contents(refNode: DOMNode): void
    set_end(refNode: DOMNode, offset: number): void
    set_end_after(refNode: DOMNode): void
    set_end_before(refNode: DOMNode): void
    set_start(refNode: DOMNode, offset: number): void
    set_start_after(refNode: DOMNode): void
    set_start_before(refNode: DOMNode): void
    surround_contents(newParent: DOMNode): void
    to_string(): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRange

    connect(sigName: "notify::collapsed", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::collapsed", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::collapsed", ...args: any[]): void
    connect(sigName: "notify::common-ancestor-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::common-ancestor-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::common-ancestor-container", ...args: any[]): void
    connect(sigName: "notify::end-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::end-container", ...args: any[]): void
    connect(sigName: "notify::end-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::end-offset", ...args: any[]): void
    connect(sigName: "notify::start-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start-container", ...args: any[]): void
    connect(sigName: "notify::start-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::start-offset", ...args: any[]): void
    connect(sigName: "notify::text", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMRange extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRange

    static name: string
    static $gtype: GObject.GType<DOMRange>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRange

    constructor(config?: DOMRange_ConstructProps) 
    _init(config?: DOMRange_ConstructProps): void
}

interface DOMStyleSheet_ConstructProps extends DOMObject_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    disabled?: boolean | null
}

interface DOMStyleSheet {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    disabled: boolean
    readonly href: string
    readonly media: DOMMediaList
    readonly owner_node: DOMNode
    readonly parent_style_sheet: DOMStyleSheet
    readonly title: string
    readonly type: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    get_content_type(): string
    get_disabled(): boolean
    get_href(): string
    get_media(): DOMMediaList
    get_owner_node(): DOMNode
    get_parent_style_sheet(): DOMStyleSheet
    get_title(): string
    set_disabled(value: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    connect(sigName: "notify::disabled", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::disabled", ...args: any[]): void
    connect(sigName: "notify::href", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::href", ...args: any[]): void
    connect(sigName: "notify::media", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media", ...args: any[]): void
    connect(sigName: "notify::owner-node", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-node", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-node", ...args: any[]): void
    connect(sigName: "notify::parent-style-sheet", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-style-sheet", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-style-sheet", ...args: any[]): void
    connect(sigName: "notify::title", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::title", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMStyleSheet extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    static name: string
    static $gtype: GObject.GType<DOMStyleSheet>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheet

    constructor(config?: DOMStyleSheet_ConstructProps) 
    _init(config?: DOMStyleSheet_ConstructProps): void
}

interface DOMStyleSheetList_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMStyleSheetList {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetList

    readonly length: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetList

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetList

    get_length(): number
    item(index: number): DOMStyleSheet

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetList

    connect(sigName: "notify::length", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMStyleSheetList extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetList

    static name: string
    static $gtype: GObject.GType<DOMStyleSheetList>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetList

    constructor(config?: DOMStyleSheetList_ConstructProps) 
    _init(config?: DOMStyleSheetList_ConstructProps): void
}

interface DOMText_ConstructProps extends DOMEventTarget_ConstructProps, DOMCharacterData_ConstructProps {
}

interface DOMText extends DOMEventTarget {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMText

    readonly whole_text: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMText

    parent_instance: DOMCharacterData

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMText

    get_whole_text(): string
    replace_whole_text(content: string): DOMText
    split_text(offset: number): DOMText

    // Conflicting methods

    get_data(...args: any[]): any
    set_data(...args: any[]): any

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMText

    connect(sigName: "notify::whole-text", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::whole-text", ...args: any[]): void
    connect(sigName: "notify::data", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::data", ...args: any[]): void
    connect(sigName: "notify::length", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::length", ...args: any[]): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::base-uri", ...args: any[]): void
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::child-nodes", ...args: any[]): void
    connect(sigName: "notify::first-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::first-child", ...args: any[]): void
    connect(sigName: "notify::last-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::last-child", ...args: any[]): void
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::next-sibling", ...args: any[]): void
    connect(sigName: "notify::node-name", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-name", ...args: any[]): void
    connect(sigName: "notify::node-type", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-type", ...args: any[]): void
    connect(sigName: "notify::node-value", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node-value", ...args: any[]): void
    connect(sigName: "notify::owner-document", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::owner-document", ...args: any[]): void
    connect(sigName: "notify::parent-element", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-element", ...args: any[]): void
    connect(sigName: "notify::parent-node", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parent-node", ...args: any[]): void
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::previous-sibling", ...args: any[]): void
    connect(sigName: "notify::text-content", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::text-content", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMText extends DOMCharacterData {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMText

    static name: string
    static $gtype: GObject.GType<DOMText>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMText

    constructor(config?: DOMText_ConstructProps) 
    _init(config?: DOMText_ConstructProps): void
}

interface DOMTreeWalker_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMTreeWalker {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalker

    readonly current_node: DOMNode
    readonly filter: DOMNodeFilter
    readonly root: DOMNode
    readonly what_to_show: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalker

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalker

    first_child(): DOMNode
    get_current_node(): DOMNode
    /**
     * This function has been removed from the DOM spec and it just returns %FALSE.
     */
    get_expand_entity_references(): boolean
    get_filter(): DOMNodeFilter
    get_root(): DOMNode
    get_what_to_show(): number
    last_child(): DOMNode
    next_node(): DOMNode
    next_sibling(): DOMNode
    parent_node(): DOMNode
    previous_node(): DOMNode
    previous_sibling(): DOMNode
    set_current_node(value: DOMNode): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalker

    connect(sigName: "notify::current-node", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-node", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-node", ...args: any[]): void
    connect(sigName: "notify::filter", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::filter", ...args: any[]): void
    connect(sigName: "notify::root", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::root", ...args: any[]): void
    connect(sigName: "notify::what-to-show", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::what-to-show", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMTreeWalker extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalker

    static name: string
    static $gtype: GObject.GType<DOMTreeWalker>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalker

    constructor(config?: DOMTreeWalker_ConstructProps) 
    _init(config?: DOMTreeWalker_ConstructProps): void
}

interface DOMUIEvent_ConstructProps extends DOMEvent_ConstructProps {
}

interface DOMUIEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEvent

    readonly char_code: number
    readonly detail: number
    readonly key_code: number
    readonly layer_x: number
    readonly layer_y: number
    readonly page_x: number
    readonly page_y: number
    readonly view: DOMDOMWindow

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEvent

    parent_instance: DOMEvent

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEvent

    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEvent

    connect(sigName: "notify::char-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::char-code", ...args: any[]): void
    connect(sigName: "notify::detail", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: "notify::key-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key-code", ...args: any[]): void
    connect(sigName: "notify::layer-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-x", ...args: any[]): void
    connect(sigName: "notify::layer-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-y", ...args: any[]): void
    connect(sigName: "notify::page-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-x", ...args: any[]): void
    connect(sigName: "notify::page-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-y", ...args: any[]): void
    connect(sigName: "notify::view", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::view", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancel-bubble", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: "notify::return-value", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::return-value", ...args: any[]): void
    connect(sigName: "notify::src-element", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src-element", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMUIEvent extends DOMEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEvent

    static name: string
    static $gtype: GObject.GType<DOMUIEvent>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEvent

    constructor(config?: DOMUIEvent_ConstructProps) 
    _init(config?: DOMUIEvent_ConstructProps): void
}

interface DOMWheelEvent_ConstructProps extends DOMMouseEvent_ConstructProps {
}

interface DOMWheelEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEvent

    readonly wheel_delta: number
    readonly wheel_delta_x: number
    readonly wheel_delta_y: number

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEvent

    parent_instance: DOMMouseEvent

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEvent

    get_wheel_delta(): number
    get_wheel_delta_x(): number
    get_wheel_delta_y(): number
    init_wheel_event(wheelDeltaX: number, wheelDeltaY: number, view: DOMDOMWindow, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEvent

    connect(sigName: "notify::wheel-delta", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wheel-delta", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::wheel-delta", ...args: any[]): void
    connect(sigName: "notify::wheel-delta-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wheel-delta-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::wheel-delta-x", ...args: any[]): void
    connect(sigName: "notify::wheel-delta-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wheel-delta-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::wheel-delta-y", ...args: any[]): void
    connect(sigName: "notify::alt-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::alt-key", ...args: any[]): void
    connect(sigName: "notify::button", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::button", ...args: any[]): void
    connect(sigName: "notify::client-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-x", ...args: any[]): void
    connect(sigName: "notify::client-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::client-y", ...args: any[]): void
    connect(sigName: "notify::ctrl-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ctrl-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::ctrl-key", ...args: any[]): void
    connect(sigName: "notify::from-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::from-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::from-element", ...args: any[]): void
    connect(sigName: "notify::meta-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::meta-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::meta-key", ...args: any[]): void
    connect(sigName: "notify::offset-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-x", ...args: any[]): void
    connect(sigName: "notify::offset-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::offset-y", ...args: any[]): void
    connect(sigName: "notify::related-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::related-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::related-target", ...args: any[]): void
    connect(sigName: "notify::screen-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-x", ...args: any[]): void
    connect(sigName: "notify::screen-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::screen-y", ...args: any[]): void
    connect(sigName: "notify::shift-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shift-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::shift-key", ...args: any[]): void
    connect(sigName: "notify::to-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::to-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::to-element", ...args: any[]): void
    connect(sigName: "notify::x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::x", ...args: any[]): void
    connect(sigName: "notify::y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::y", ...args: any[]): void
    connect(sigName: "notify::char-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::char-code", ...args: any[]): void
    connect(sigName: "notify::detail", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::detail", ...args: any[]): void
    connect(sigName: "notify::key-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::key-code", ...args: any[]): void
    connect(sigName: "notify::layer-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-x", ...args: any[]): void
    connect(sigName: "notify::layer-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::layer-y", ...args: any[]): void
    connect(sigName: "notify::page-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-x", ...args: any[]): void
    connect(sigName: "notify::page-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::page-y", ...args: any[]): void
    connect(sigName: "notify::view", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::view", ...args: any[]): void
    connect(sigName: "notify::bubbles", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::bubbles", ...args: any[]): void
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancel-bubble", ...args: any[]): void
    connect(sigName: "notify::cancelable", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::cancelable", ...args: any[]): void
    connect(sigName: "notify::current-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::current-target", ...args: any[]): void
    connect(sigName: "notify::event-phase", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::event-phase", ...args: any[]): void
    connect(sigName: "notify::return-value", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::return-value", ...args: any[]): void
    connect(sigName: "notify::src-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::src-element", ...args: any[]): void
    connect(sigName: "notify::target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::target", ...args: any[]): void
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::time-stamp", ...args: any[]): void
    connect(sigName: "notify::type", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::type", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMWheelEvent extends DOMMouseEvent {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEvent

    static name: string
    static $gtype: GObject.GType<DOMWheelEvent>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEvent

    constructor(config?: DOMWheelEvent_ConstructProps) 
    _init(config?: DOMWheelEvent_ConstructProps): void
}

interface DOMXPathExpression_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMXPathExpression {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpression

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpression

    evaluate(contextNode: DOMNode, type: number, inResult: DOMXPathResult): DOMXPathResult

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpression

    connect(sigName: "notify::core-object", callback: (($obj: DOMXPathExpression, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMXPathExpression, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMXPathExpression extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpression

    static name: string
    static $gtype: GObject.GType<DOMXPathExpression>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpression

    constructor(config?: DOMXPathExpression_ConstructProps) 
    _init(config?: DOMXPathExpression_ConstructProps): void
}

interface DOMXPathResult_ConstructProps extends DOMObject_ConstructProps {
}

interface DOMXPathResult {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResult

    readonly boolean_value: boolean
    readonly invalid_iterator_state: boolean
    readonly number_value: number
    readonly result_type: number
    readonly single_node_value: DOMNode
    readonly snapshot_length: number
    readonly string_value: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResult

    parent_instance: DOMObject

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResult

    get_boolean_value(): boolean
    get_invalid_iterator_state(): boolean
    get_number_value(): number
    get_result_type(): number
    get_single_node_value(): DOMNode
    get_snapshot_length(): number
    get_string_value(): string
    iterate_next(): DOMNode
    snapshot_item(index: number): DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResult

    connect(sigName: "notify::boolean-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::boolean-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::boolean-value", ...args: any[]): void
    connect(sigName: "notify::invalid-iterator-state", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invalid-iterator-state", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::invalid-iterator-state", ...args: any[]): void
    connect(sigName: "notify::number-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::number-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::number-value", ...args: any[]): void
    connect(sigName: "notify::result-type", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::result-type", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::result-type", ...args: any[]): void
    connect(sigName: "notify::single-node-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-node-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::single-node-value", ...args: any[]): void
    connect(sigName: "notify::snapshot-length", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::snapshot-length", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::snapshot-length", ...args: any[]): void
    connect(sigName: "notify::string-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::string-value", ...args: any[]): void
    connect(sigName: "notify::core-object", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::core-object", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::core-object", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class DOMXPathResult extends DOMObject {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResult

    static name: string
    static $gtype: GObject.GType<DOMXPathResult>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResult

    constructor(config?: DOMXPathResult_ConstructProps) 
    _init(config?: DOMXPathResult_ConstructProps): void
}

interface Frame_ConstructProps extends GObject.Object_ConstructProps {
}

interface Frame {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.Frame

    parent: GObject.Object
    priv: FramePrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.Frame

    /**
     * Gets the process-unique identifier of this #WebKitFrame. No other
     * frame in the same web process will have the same ID; however, frames
     * in other web processes may.
     */
    get_id(): number
    /**
     * Get the JavaScript execution context of `frame`. Use this function to bridge
     * between the WebKit and JavaScriptCore APIs.
     */
    get_js_context(): JavaScriptCore.Context
    /**
     * Get the JavaScript execution context of `frame` for the given #WebKitScriptWorld.
     * @param world a #WebKitScriptWorld
     */
    get_js_context_for_script_world(world: ScriptWorld): JavaScriptCore.Context
    /**
     * Get a #JSCValue referencing the given DOM object. The value is created in the JavaScript execution
     * context of `frame`.
     * @param dom_object a #WebKitDOMObject
     */
    get_js_value_for_dom_object(dom_object: DOMObject): JavaScriptCore.Value
    /**
     * Get a #JSCValue referencing the given DOM object. The value is created in the JavaScript execution
     * context of `frame` for the given #WebKitScriptWorld.
     * @param dom_object a #WebKitDOMObject
     * @param world a #WebKitScriptWorld
     */
    get_js_value_for_dom_object_in_script_world(dom_object: DOMObject, world: ScriptWorld): JavaScriptCore.Value
    /**
     * Gets the current active URI of `frame`.
     */
    get_uri(): string
    /**
     * Gets whether `frame` is the main frame of a #WebKitWebPage
     */
    is_main_frame(): boolean

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.Frame

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class Frame extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.Frame

    static name: string
    static $gtype: GObject.GType<Frame>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.Frame

    constructor(config?: Frame_ConstructProps) 
    _init(config?: Frame_ConstructProps): void
}

interface HitTestResult_ConstructProps extends GObject.Object_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    /**
     * Bitmask of #WebKitHitTestResultContext flags representing
     * the context of the #WebKitHitTestResult.
     */
    context?: number | null
    /**
     * The URI of the image if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_IMAGE
     * is present in #WebKitHitTestResult:context
     */
    image_uri?: string | null
    /**
     * The label of the link if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK
     * is present in #WebKitHitTestResult:context
     */
    link_label?: string | null
    /**
     * The title of the link if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK
     * is present in #WebKitHitTestResult:context
     */
    link_title?: string | null
    /**
     * The URI of the link if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK
     * is present in #WebKitHitTestResult:context
     */
    link_uri?: string | null
    /**
     * The URI of the media if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_MEDIA
     * is present in #WebKitHitTestResult:context
     */
    media_uri?: string | null
}

interface HitTestResult {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    /**
     * Bitmask of #WebKitHitTestResultContext flags representing
     * the context of the #WebKitHitTestResult.
     */
    readonly context: number
    /**
     * The URI of the image if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_IMAGE
     * is present in #WebKitHitTestResult:context
     */
    readonly image_uri: string
    /**
     * The label of the link if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK
     * is present in #WebKitHitTestResult:context
     */
    readonly link_label: string
    /**
     * The title of the link if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK
     * is present in #WebKitHitTestResult:context
     */
    readonly link_title: string
    /**
     * The URI of the link if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK
     * is present in #WebKitHitTestResult:context
     */
    readonly link_uri: string
    /**
     * The URI of the media if flag %WEBKIT_HIT_TEST_RESULT_CONTEXT_MEDIA
     * is present in #WebKitHitTestResult:context
     */
    readonly media_uri: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    parent: GObject.Object
    priv: HitTestResultPrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    /**
     * Gets whether %WEBKIT_HIT_TEST_RESULT_CONTEXT_EDITABLE flag is present in
     * #WebKitHitTestResult:context.
     */
    context_is_editable(): boolean
    /**
     * Gets whether %WEBKIT_HIT_TEST_RESULT_CONTEXT_IMAGE flag is present in
     * #WebKitHitTestResult:context.
     */
    context_is_image(): boolean
    /**
     * Gets whether %WEBKIT_HIT_TEST_RESULT_CONTEXT_LINK flag is present in
     * #WebKitHitTestResult:context.
     */
    context_is_link(): boolean
    /**
     * Gets whether %WEBKIT_HIT_TEST_RESULT_CONTEXT_MEDIA flag is present in
     * #WebKitHitTestResult:context.
     */
    context_is_media(): boolean
    /**
     * Gets whether %WEBKIT_HIT_TEST_RESULT_CONTEXT_SCROLLBAR flag is present in
     * #WebKitHitTestResult:context.
     */
    context_is_scrollbar(): boolean
    /**
     * Gets whether %WEBKIT_HIT_TEST_RESULT_CONTEXT_SELECTION flag is present in
     * #WebKitHitTestResult:context.
     */
    context_is_selection(): boolean
    /**
     * Gets the value of the #WebKitHitTestResult:context property.
     */
    get_context(): number
    /**
     * Gets the value of the #WebKitHitTestResult:image-uri property.
     */
    get_image_uri(): string
    /**
     * Gets the value of the #WebKitHitTestResult:link-label property.
     */
    get_link_label(): string
    /**
     * Gets the value of the #WebKitHitTestResult:link-title property.
     */
    get_link_title(): string
    /**
     * Gets the value of the #WebKitHitTestResult:link-uri property.
     */
    get_link_uri(): string
    /**
     * Gets the value of the #WebKitHitTestResult:media-uri property.
     */
    get_media_uri(): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    connect(sigName: "notify::context", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::context", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::context", ...args: any[]): void
    connect(sigName: "notify::image-uri", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::image-uri", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::image-uri", ...args: any[]): void
    connect(sigName: "notify::link-label", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-label", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-label", ...args: any[]): void
    connect(sigName: "notify::link-title", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-title", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-title", ...args: any[]): void
    connect(sigName: "notify::link-uri", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-uri", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-uri", ...args: any[]): void
    connect(sigName: "notify::media-uri", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-uri", callback: (($obj: HitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media-uri", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class HitTestResult extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    static name: string
    static $gtype: GObject.GType<HitTestResult>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResult

    constructor(config?: HitTestResult_ConstructProps) 
    _init(config?: HitTestResult_ConstructProps): void
}

interface ScriptWorld_ConstructProps extends GObject.Object_ConstructProps {
}

/**
 * Signal callback interface for `window-object-cleared`
 */
interface ScriptWorld_WindowObjectClearedSignalCallback {
    ($obj: ScriptWorld, page: WebPage, frame: Frame): void
}

interface ScriptWorld {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorld

    parent: GObject.Object
    priv: ScriptWorldPrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorld

    /**
     * Get the name of a #WebKitScriptWorld.
     */
    get_name(): string

    // Own signals of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorld

    connect(sigName: "window-object-cleared", callback: ScriptWorld_WindowObjectClearedSignalCallback): number
    connect_after(sigName: "window-object-cleared", callback: ScriptWorld_WindowObjectClearedSignalCallback): number
    emit(sigName: "window-object-cleared", page: WebPage, frame: Frame, ...args: any[]): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorld

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class ScriptWorld extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorld

    static name: string
    static $gtype: GObject.GType<ScriptWorld>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorld

    constructor(config?: ScriptWorld_ConstructProps) 
    /**
     * Creates a new isolated #WebKitScriptWorld. Scripts executed in
     * isolated worlds have access to the DOM but not to other variable
     * or functions created by the page.
     * The #WebKitScriptWorld is created with a generated unique name. Use
     * webkit_script_world_new_with_name() if you want to create it with a
     * custom name.
     * You can get the JavaScript execution context of a #WebKitScriptWorld
     * for a given #WebKitFrame with webkit_frame_get_javascript_context_for_script_world().
     * @constructor 
     */
    constructor() 
    /**
     * Creates a new isolated #WebKitScriptWorld. Scripts executed in
     * isolated worlds have access to the DOM but not to other variable
     * or functions created by the page.
     * The #WebKitScriptWorld is created with a generated unique name. Use
     * webkit_script_world_new_with_name() if you want to create it with a
     * custom name.
     * You can get the JavaScript execution context of a #WebKitScriptWorld
     * for a given #WebKitFrame with webkit_frame_get_javascript_context_for_script_world().
     * @constructor 
     */
    static new(): ScriptWorld
    /**
     * Creates a new isolated #WebKitScriptWorld with a name. Scripts executed in
     * isolated worlds have access to the DOM but not to other variable
     * or functions created by the page.
     * You can get the JavaScript execution context of a #WebKitScriptWorld
     * for a given #WebKitFrame with webkit_frame_get_javascript_context_for_script_world().
     * @constructor 
     * @param name a name for the script world
     */
    static new_with_name(name: string): ScriptWorld
    _init(config?: ScriptWorld_ConstructProps): void
    /**
     * Get the default #WebKitScriptWorld. This is the normal script world
     * where all scripts are executed by default.
     * You can get the JavaScript execution context of a #WebKitScriptWorld
     * for a given #WebKitFrame with webkit_frame_get_javascript_context_for_script_world().
     */
    static get_default(): ScriptWorld
}

interface URIRequest_ConstructProps extends GObject.Object_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    /**
     * The URI to which the request will be made.
     */
    uri?: string | null
}

interface URIRequest {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    /**
     * The URI to which the request will be made.
     */
    uri: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    parent: GObject.Object

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    /**
     * Get the HTTP headers of a #WebKitURIRequest as a #SoupMessageHeaders.
     */
    get_http_headers(): Soup.MessageHeaders
    /**
     * Get the HTTP method of the #WebKitURIRequest.
     */
    get_http_method(): string
    get_uri(): string
    /**
     * Set the URI of `request`
     * @param uri an URI
     */
    set_uri(uri: string): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    connect(sigName: "notify::uri", callback: (($obj: URIRequest, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: URIRequest, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::uri", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class URIRequest extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    static name: string
    static $gtype: GObject.GType<URIRequest>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequest

    constructor(config?: URIRequest_ConstructProps) 
    /**
     * Creates a new #WebKitURIRequest for the given URI.
     * @constructor 
     * @param uri an URI
     */
    constructor(uri: string) 
    /**
     * Creates a new #WebKitURIRequest for the given URI.
     * @constructor 
     * @param uri an URI
     */
    static new(uri: string): URIRequest
    _init(config?: URIRequest_ConstructProps): void
}

interface URIResponse_ConstructProps extends GObject.Object_ConstructProps {
}

interface URIResponse {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponse

    /**
     * The expected content length of the response.
     */
    readonly content_length: number
    /**
     * The HTTP headers of the response, or %NULL if the response is not an HTTP response.
     */
    readonly http_headers: Soup.MessageHeaders
    /**
     * The MIME type of the response.
     */
    readonly mime_type: string
    /**
     * The status code of the response as returned by the server.
     */
    readonly status_code: number
    /**
     * The suggested filename for the URI response.
     */
    readonly suggested_filename: string
    /**
     * The URI for which the response was made.
     */
    readonly uri: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponse

    parent: GObject.Object

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponse

    /**
     * Get the expected content length of the #WebKitURIResponse. It can
     * be 0 if the server provided an incorrect or missing Content-Length.
     */
    get_content_length(): number
    /**
     * Get the HTTP headers of a #WebKitURIResponse as a #SoupMessageHeaders.
     */
    get_http_headers(): Soup.MessageHeaders
    get_mime_type(): string
    /**
     * Get the status code of the #WebKitURIResponse as returned by
     * the server. It will normally be a #SoupKnownStatusCode, for
     * example %SOUP_STATUS_OK, though the server can respond with any
     * unsigned integer.
     */
    get_status_code(): number
    /**
     * Get the suggested filename for `response,` as specified by
     * the 'Content-Disposition' HTTP header, or %NULL if it's not
     * present.
     */
    get_suggested_filename(): string
    get_uri(): string

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponse

    connect(sigName: "notify::content-length", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-length", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::content-length", ...args: any[]): void
    connect(sigName: "notify::http-headers", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::http-headers", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::http-headers", ...args: any[]): void
    connect(sigName: "notify::mime-type", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mime-type", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::mime-type", ...args: any[]): void
    connect(sigName: "notify::status-code", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status-code", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::status-code", ...args: any[]): void
    connect(sigName: "notify::suggested-filename", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::suggested-filename", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::suggested-filename", ...args: any[]): void
    connect(sigName: "notify::uri", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::uri", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class URIResponse extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponse

    static name: string
    static $gtype: GObject.GType<URIResponse>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponse

    constructor(config?: URIResponse_ConstructProps) 
    _init(config?: URIResponse_ConstructProps): void
}

interface UserMessage_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    /**
     * The UNIX file descriptors of the user message.
     */
    fd_list?: Gio.UnixFDList | null
    /**
     * The name of the user message.
     */
    name?: string | null
    /**
     * The parameters of the user message as a #GVariant, or %NULL
     * if the message doesn't include parameters. Note that only complete types are
     * allowed.
     */
    parameters?: GLib.Variant | null
}

interface UserMessage {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    /**
     * The UNIX file descriptors of the user message.
     */
    readonly fd_list: Gio.UnixFDList
    /**
     * The name of the user message.
     */
    readonly name: string
    /**
     * The parameters of the user message as a #GVariant, or %NULL
     * if the message doesn't include parameters. Note that only complete types are
     * allowed.
     */
    readonly parameters: GLib.Variant

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    parent: GObject.InitiallyUnowned
    priv: UserMessagePrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    /**
     * Get the `message` list of file descritpor
     */
    get_fd_list(): Gio.UnixFDList | null
    /**
     * Get the `message` name
     */
    get_name(): string
    /**
     * Get the `message` parameters
     */
    get_parameters(): GLib.Variant | null
    /**
     * Send a reply to `message`. If `reply` is floating, it's consumed.
     * You can only send a reply to a #WebKitUserMessage that has been
     * received.
     * @param reply a #WebKitUserMessage to send as reply
     */
    send_reply(reply: UserMessage): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    connect(sigName: "notify::fd-list", callback: (($obj: UserMessage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fd-list", callback: (($obj: UserMessage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::fd-list", ...args: any[]): void
    connect(sigName: "notify::name", callback: (($obj: UserMessage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: UserMessage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::name", ...args: any[]): void
    connect(sigName: "notify::parameters", callback: (($obj: UserMessage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parameters", callback: (($obj: UserMessage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::parameters", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class UserMessage extends GObject.InitiallyUnowned {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    static name: string
    static $gtype: GObject.GType<UserMessage>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessage

    constructor(config?: UserMessage_ConstructProps) 
    /**
     * Create a new #WebKitUserMessage with `name`.
     * @constructor 
     * @param name the message name
     * @param parameters the message parameters as a #GVariant, or %NULL
     */
    constructor(name: string, parameters: GLib.Variant | null) 
    /**
     * Create a new #WebKitUserMessage with `name`.
     * @constructor 
     * @param name the message name
     * @param parameters the message parameters as a #GVariant, or %NULL
     */
    static new(name: string, parameters: GLib.Variant | null): UserMessage
    /**
     * Create a new #WebKitUserMessage including also a list of UNIX file descriptors to be sent.
     * @constructor 
     * @param name the message name
     * @param parameters the message parameters as a #GVariant
     * @param fd_list the message file descriptors
     */
    static new_with_fd_list(name: string, parameters: GLib.Variant | null, fd_list: Gio.UnixFDList | null): UserMessage
    _init(config?: UserMessage_ConstructProps): void
    static error_quark(): GLib.Quark
}

interface WebEditor_ConstructProps extends GObject.Object_ConstructProps {
}

/**
 * Signal callback interface for `selection-changed`
 */
interface WebEditor_SelectionChangedSignalCallback {
    ($obj: WebEditor): void
}

interface WebEditor {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditor

    parent: GObject.Object
    priv: WebEditorPrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditor

    /**
     * Gets the #WebKitWebPage that is associated with the #WebKitWebEditor that can
     * be used to access the #WebKitDOMDocument currently loaded into it.
     */
    get_page(): WebPage

    // Own signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditor

    connect(sigName: "selection-changed", callback: WebEditor_SelectionChangedSignalCallback): number
    connect_after(sigName: "selection-changed", callback: WebEditor_SelectionChangedSignalCallback): number
    emit(sigName: "selection-changed", ...args: any[]): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditor

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class WebEditor extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditor

    static name: string
    static $gtype: GObject.GType<WebEditor>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditor

    constructor(config?: WebEditor_ConstructProps) 
    _init(config?: WebEditor_ConstructProps): void
}

interface WebExtension_ConstructProps extends GObject.Object_ConstructProps {
}

/**
 * Signal callback interface for `page-created`
 */
interface WebExtension_PageCreatedSignalCallback {
    ($obj: WebExtension, web_page: WebPage): void
}

/**
 * Signal callback interface for `user-message-received`
 */
interface WebExtension_UserMessageReceivedSignalCallback {
    ($obj: WebExtension, message: UserMessage): void
}

interface WebExtension {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtension

    parent: GObject.Object
    priv: WebExtensionPrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtension

    /**
     * Get the web page of the given `page_id`.
     * @param page_id the identifier of the #WebKitWebPage to get
     */
    get_page(page_id: number): WebPage
    /**
     * Send `message` to the #WebKitWebContext corresponding to `extension`. If `message` is floating, it's consumed.
     * 
     * If you don't expect any reply, or you simply want to ignore it, you can pass %NULL as `calback`.
     * When the operation is finished, `callback` will be called. You can then call
     * webkit_web_extension_send_message_to_context_finish() to get the message reply.
     * @param message a #WebKitUserMessage
     * @param cancellable a #GCancellable or %NULL to ignore
     * @param callback (nullable): A #GAsyncReadyCallback to call when the request is satisfied or %NULL
     */
    send_message_to_context(message: UserMessage, cancellable: Gio.Cancellable | null, callback: Gio.AsyncReadyCallback | null): void
    /**
     * Finish an asynchronous operation started with webkit_web_extension_send_message_to_context().
     * @param result a #GAsyncResult
     */
    send_message_to_context_finish(result: Gio.AsyncResult): UserMessage

    // Own signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtension

    connect(sigName: "page-created", callback: WebExtension_PageCreatedSignalCallback): number
    connect_after(sigName: "page-created", callback: WebExtension_PageCreatedSignalCallback): number
    emit(sigName: "page-created", web_page: WebPage, ...args: any[]): void
    connect(sigName: "user-message-received", callback: WebExtension_UserMessageReceivedSignalCallback): number
    connect_after(sigName: "user-message-received", callback: WebExtension_UserMessageReceivedSignalCallback): number
    emit(sigName: "user-message-received", message: UserMessage, ...args: any[]): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtension

    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class WebExtension extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtension

    static name: string
    static $gtype: GObject.GType<WebExtension>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtension

    constructor(config?: WebExtension_ConstructProps) 
    _init(config?: WebExtension_ConstructProps): void
}

interface WebHitTestResult_ConstructProps extends HitTestResult_ConstructProps {

    // Own constructor properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    /**
     * The #WebKitDOMNode
     */
    node?: DOMNode | null
}

interface WebHitTestResult {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    /**
     * The #WebKitDOMNode
     */
    readonly node: DOMNode

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    parent: HitTestResult
    priv: WebHitTestResultPrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    /**
     * Get the #WebKitDOMNode in the coordinates of the Hit Test.
     */
    get_node(): DOMNode

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    connect(sigName: "notify::node", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::node", ...args: any[]): void
    connect(sigName: "notify::context", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::context", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::context", ...args: any[]): void
    connect(sigName: "notify::image-uri", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::image-uri", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::image-uri", ...args: any[]): void
    connect(sigName: "notify::link-label", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-label", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-label", ...args: any[]): void
    connect(sigName: "notify::link-title", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-title", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-title", ...args: any[]): void
    connect(sigName: "notify::link-uri", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-uri", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::link-uri", ...args: any[]): void
    connect(sigName: "notify::media-uri", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-uri", callback: (($obj: WebHitTestResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::media-uri", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class WebHitTestResult extends HitTestResult {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    static name: string
    static $gtype: GObject.GType<WebHitTestResult>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResult

    constructor(config?: WebHitTestResult_ConstructProps) 
    _init(config?: WebHitTestResult_ConstructProps): void
}

interface WebPage_ConstructProps extends GObject.Object_ConstructProps {
}

/**
 * Signal callback interface for `console-message-sent`
 */
interface WebPage_ConsoleMessageSentSignalCallback {
    ($obj: WebPage, console_message: ConsoleMessage): void
}

/**
 * Signal callback interface for `context-menu`
 */
interface WebPage_ContextMenuSignalCallback {
    ($obj: WebPage, context_menu: ContextMenu, hit_test_result: WebHitTestResult): boolean
}

/**
 * Signal callback interface for `document-loaded`
 */
interface WebPage_DocumentLoadedSignalCallback {
    ($obj: WebPage): void
}

/**
 * Signal callback interface for `form-controls-associated`
 */
interface WebPage_FormControlsAssociatedSignalCallback {
    ($obj: WebPage, elements: DOMElement[]): void
}

/**
 * Signal callback interface for `form-controls-associated-for-frame`
 */
interface WebPage_FormControlsAssociatedForFrameSignalCallback {
    ($obj: WebPage, elements: DOMElement[], frame: Frame): void
}

/**
 * Signal callback interface for `send-request`
 */
interface WebPage_SendRequestSignalCallback {
    ($obj: WebPage, request: URIRequest, redirected_response: URIResponse): boolean
}

/**
 * Signal callback interface for `user-message-received`
 */
interface WebPage_UserMessageReceivedSignalCallback {
    ($obj: WebPage, message: UserMessage): boolean
}

/**
 * Signal callback interface for `will-submit-form`
 */
interface WebPage_WillSubmitFormSignalCallback {
    ($obj: WebPage, form: DOMElement, step: FormSubmissionStep, source_frame: Frame, target_frame: Frame, text_field_names: string[], text_field_values: string[]): void
}

interface WebPage {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    /**
     * The current active URI of the #WebKitWebPage.
     */
    readonly uri: string

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    parent: GObject.Object
    priv: WebPagePrivate

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    /**
     * Get the #WebKitDOMDocument currently loaded in `web_page`
     */
    get_dom_document(): DOMDocument
    /**
     * Gets the #WebKitWebEditor of a #WebKitWebPage.
     */
    get_editor(): WebEditor
    /**
     * Get the identifier of the #WebKitWebPage
     */
    get_id(): number
    /**
     * Returns the main frame of a #WebKitWebPage.
     */
    get_main_frame(): Frame
    /**
     * Returns the current active URI of `web_page`.
     * 
     * You can monitor the active URI by connecting to the notify::uri
     * signal of `web_page`.
     */
    get_uri(): string
    /**
     * Send `message` to the #WebKitWebView corresponding to `web_page`. If `message` is floating, it's consumed.
     * 
     * If you don't expect any reply, or you simply want to ignore it, you can pass %NULL as `callback`.
     * When the operation is finished, `callback` will be called. You can then call
     * webkit_web_page_send_message_to_view_finish() to get the message reply.
     * @param message a #WebKitUserMessage
     * @param cancellable a #GCancellable or %NULL to ignore
     * @param callback (nullable): A #GAsyncReadyCallback to call when the request is satisfied or %NULL
     */
    send_message_to_view(message: UserMessage, cancellable: Gio.Cancellable | null, callback: Gio.AsyncReadyCallback | null): void
    /**
     * Finish an asynchronous operation started with webkit_web_page_send_message_to_view().
     * @param result a #GAsyncResult
     */
    send_message_to_view_finish(result: Gio.AsyncResult): UserMessage

    // Own signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    connect(sigName: "console-message-sent", callback: WebPage_ConsoleMessageSentSignalCallback): number
    connect_after(sigName: "console-message-sent", callback: WebPage_ConsoleMessageSentSignalCallback): number
    emit(sigName: "console-message-sent", console_message: ConsoleMessage, ...args: any[]): void
    connect(sigName: "context-menu", callback: WebPage_ContextMenuSignalCallback): number
    connect_after(sigName: "context-menu", callback: WebPage_ContextMenuSignalCallback): number
    emit(sigName: "context-menu", context_menu: ContextMenu, hit_test_result: WebHitTestResult, ...args: any[]): void
    connect(sigName: "document-loaded", callback: WebPage_DocumentLoadedSignalCallback): number
    connect_after(sigName: "document-loaded", callback: WebPage_DocumentLoadedSignalCallback): number
    emit(sigName: "document-loaded", ...args: any[]): void
    connect(sigName: "form-controls-associated", callback: WebPage_FormControlsAssociatedSignalCallback): number
    connect_after(sigName: "form-controls-associated", callback: WebPage_FormControlsAssociatedSignalCallback): number
    emit(sigName: "form-controls-associated", elements: DOMElement[], ...args: any[]): void
    connect(sigName: "form-controls-associated-for-frame", callback: WebPage_FormControlsAssociatedForFrameSignalCallback): number
    connect_after(sigName: "form-controls-associated-for-frame", callback: WebPage_FormControlsAssociatedForFrameSignalCallback): number
    emit(sigName: "form-controls-associated-for-frame", elements: DOMElement[], frame: Frame, ...args: any[]): void
    connect(sigName: "send-request", callback: WebPage_SendRequestSignalCallback): number
    connect_after(sigName: "send-request", callback: WebPage_SendRequestSignalCallback): number
    emit(sigName: "send-request", request: URIRequest, redirected_response: URIResponse, ...args: any[]): void
    connect(sigName: "user-message-received", callback: WebPage_UserMessageReceivedSignalCallback): number
    connect_after(sigName: "user-message-received", callback: WebPage_UserMessageReceivedSignalCallback): number
    emit(sigName: "user-message-received", message: UserMessage, ...args: any[]): void
    connect(sigName: "will-submit-form", callback: WebPage_WillSubmitFormSignalCallback): number
    connect_after(sigName: "will-submit-form", callback: WebPage_WillSubmitFormSignalCallback): number
    emit(sigName: "will-submit-form", form: DOMElement, step: FormSubmissionStep, source_frame: Frame, target_frame: Frame, text_field_names: string[], text_field_values: string[], ...args: any[]): void

    // Class property signals of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    connect(sigName: "notify::uri", callback: (($obj: WebPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: WebPage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify::uri", ...args: any[]): void
    connect(sigName: string, callback: (...args: any[]) => void): number
    connect_after(sigName: string, callback: (...args: any[]) => void): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
}

class WebPage extends GObject.Object {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    static name: string
    static $gtype: GObject.GType<WebPage>

    // Constructors of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPage

    constructor(config?: WebPage_ConstructProps) 
    _init(config?: WebPage_ConstructProps): void
}

interface ConsoleMessage {

    // Owm methods of WebKit2WebExtension-5.0.WebKit2WebExtension.ConsoleMessage

    /**
     * Make a copy of `console_message`.
     */
    copy(): ConsoleMessage
    /**
     * Free the #WebKitConsoleMessage
     */
    free(): void
    /**
     * Gets the log level of a #WebKitConsoleMessage
     */
    get_level(): ConsoleMessageLevel
    /**
     * Gets the line number of a #WebKitConsoleMessage
     */
    get_line(): number
    /**
     * Gets the source of a #WebKitConsoleMessage
     */
    get_source(): ConsoleMessageSource
    /**
     * Gets the source identifier of a #WebKitConsoleMessage
     */
    get_source_id(): string
    /**
     * Gets the text message of a #WebKitConsoleMessage
     */
    get_text(): string
}

class ConsoleMessage {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ConsoleMessage

    static name: string
}

interface ContextMenuClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuClass

    parent_class: GObject.ObjectClass
}

abstract class ContextMenuClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuClass

    static name: string
}

interface ContextMenuItemClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItemClass

    parent_class: GObject.InitiallyUnownedClass
}

abstract class ContextMenuItemClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItemClass

    static name: string
}

interface ContextMenuItemPrivate {
}

class ContextMenuItemPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuItemPrivate

    static name: string
}

interface ContextMenuPrivate {
}

class ContextMenuPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ContextMenuPrivate

    static name: string
}

interface DOMAttrClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttrClass

    parent_class: DOMNodeClass
}

abstract class DOMAttrClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMAttrClass

    static name: string
}

interface DOMBlobClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlobClass

    parent_class: DOMObjectClass
}

abstract class DOMBlobClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMBlobClass

    static name: string
}

interface DOMCDATASectionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCDATASectionClass

    parent_class: DOMTextClass
}

abstract class DOMCDATASectionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCDATASectionClass

    static name: string
}

interface DOMCSSRuleClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleClass

    parent_class: DOMObjectClass
}

abstract class DOMCSSRuleClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleClass

    static name: string
}

interface DOMCSSRuleListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleListClass

    parent_class: DOMObjectClass
}

abstract class DOMCSSRuleListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSRuleListClass

    static name: string
}

interface DOMCSSStyleDeclarationClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclarationClass

    parent_class: DOMObjectClass
}

abstract class DOMCSSStyleDeclarationClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleDeclarationClass

    static name: string
}

interface DOMCSSStyleSheetClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheetClass

    parent_class: DOMStyleSheetClass
}

abstract class DOMCSSStyleSheetClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSStyleSheetClass

    static name: string
}

interface DOMCSSValueClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValueClass

    parent_class: DOMObjectClass
}

abstract class DOMCSSValueClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCSSValueClass

    static name: string
}

interface DOMCharacterDataClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterDataClass

    parent_class: DOMNodeClass
}

abstract class DOMCharacterDataClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCharacterDataClass

    static name: string
}

interface DOMClientRectClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectClass

    parent_class: DOMObjectClass
}

abstract class DOMClientRectClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectClass

    static name: string
}

interface DOMClientRectListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectListClass

    parent_class: DOMObjectClass
}

abstract class DOMClientRectListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMClientRectListClass

    static name: string
}

interface DOMCommentClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCommentClass

    parent_class: DOMCharacterDataClass
}

abstract class DOMCommentClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMCommentClass

    static name: string
}

interface DOMDOMImplementationClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementationClass

    parent_class: DOMObjectClass
}

abstract class DOMDOMImplementationClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMImplementationClass

    static name: string
}

interface DOMDOMSelectionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelectionClass

    parent_class: DOMObjectClass
}

abstract class DOMDOMSelectionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMSelectionClass

    static name: string
}

interface DOMDOMTokenListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenListClass

    parent_class: DOMObjectClass
}

abstract class DOMDOMTokenListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMTokenListClass

    static name: string
}

interface DOMDOMWindowClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindowClass

    parent_class: DOMObjectClass
}

abstract class DOMDOMWindowClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDOMWindowClass

    static name: string
}

interface DOMDocumentClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentClass

    parent_class: DOMNodeClass
}

abstract class DOMDocumentClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentClass

    static name: string
}

interface DOMDocumentFragmentClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragmentClass

    parent_class: DOMNodeClass
}

abstract class DOMDocumentFragmentClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentFragmentClass

    static name: string
}

interface DOMDocumentTypeClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentTypeClass

    parent_class: DOMNodeClass
}

abstract class DOMDocumentTypeClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMDocumentTypeClass

    static name: string
}

interface DOMElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElementClass

    parent_class: DOMNodeClass
}

abstract class DOMElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMElementClass

    static name: string
}

interface DOMEntityReferenceClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEntityReferenceClass

    parent_class: DOMNodeClass
}

abstract class DOMEntityReferenceClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEntityReferenceClass

    static name: string
}

interface DOMEventClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventClass

    parent_class: DOMObjectClass
}

abstract class DOMEventClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventClass

    static name: string
}

interface DOMEventTargetIface {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTargetIface

    gIface: GObject.TypeInterface
    dispatch_event: (target: DOMEventTarget, event: DOMEvent) => boolean
    add_event_listener: (target: DOMEventTarget, event_name: string, handler: GObject.TClosure, use_capture: boolean) => boolean
    remove_event_listener: (target: DOMEventTarget, event_name: string, handler: GObject.TClosure, use_capture: boolean) => boolean
}

abstract class DOMEventTargetIface {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMEventTargetIface

    static name: string
}

interface DOMFileClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileClass

    parent_class: DOMBlobClass
}

abstract class DOMFileClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileClass

    static name: string
}

interface DOMFileListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileListClass

    parent_class: DOMObjectClass
}

abstract class DOMFileListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMFileListClass

    static name: string
}

interface DOMHTMLAnchorElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLAnchorElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAnchorElementClass

    static name: string
}

interface DOMHTMLAppletElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLAppletElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAppletElementClass

    static name: string
}

interface DOMHTMLAreaElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLAreaElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLAreaElementClass

    static name: string
}

interface DOMHTMLBRElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLBRElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBRElementClass

    static name: string
}

interface DOMHTMLBaseElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLBaseElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseElementClass

    static name: string
}

interface DOMHTMLBaseFontElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLBaseFontElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBaseFontElementClass

    static name: string
}

interface DOMHTMLBodyElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLBodyElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLBodyElementClass

    static name: string
}

interface DOMHTMLButtonElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLButtonElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLButtonElementClass

    static name: string
}

interface DOMHTMLCanvasElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLCanvasElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCanvasElementClass

    static name: string
}

interface DOMHTMLCollectionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollectionClass

    parent_class: DOMObjectClass
}

abstract class DOMHTMLCollectionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLCollectionClass

    static name: string
}

interface DOMHTMLDListElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLDListElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDListElementClass

    static name: string
}

interface DOMHTMLDirectoryElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLDirectoryElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDirectoryElementClass

    static name: string
}

interface DOMHTMLDivElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLDivElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDivElementClass

    static name: string
}

interface DOMHTMLDocumentClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocumentClass

    parent_class: DOMDocumentClass
}

abstract class DOMHTMLDocumentClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLDocumentClass

    static name: string
}

interface DOMHTMLElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElementClass

    parent_class: DOMElementClass
}

abstract class DOMHTMLElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLElementClass

    static name: string
}

interface DOMHTMLEmbedElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLEmbedElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLEmbedElementClass

    static name: string
}

interface DOMHTMLFieldSetElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLFieldSetElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFieldSetElementClass

    static name: string
}

interface DOMHTMLFontElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLFontElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFontElementClass

    static name: string
}

interface DOMHTMLFormElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLFormElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFormElementClass

    static name: string
}

interface DOMHTMLFrameElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLFrameElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameElementClass

    static name: string
}

interface DOMHTMLFrameSetElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLFrameSetElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLFrameSetElementClass

    static name: string
}

interface DOMHTMLHRElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLHRElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHRElementClass

    static name: string
}

interface DOMHTMLHeadElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLHeadElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadElementClass

    static name: string
}

interface DOMHTMLHeadingElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLHeadingElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHeadingElementClass

    static name: string
}

interface DOMHTMLHtmlElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLHtmlElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLHtmlElementClass

    static name: string
}

interface DOMHTMLIFrameElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLIFrameElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLIFrameElementClass

    static name: string
}

interface DOMHTMLImageElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLImageElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLImageElementClass

    static name: string
}

interface DOMHTMLInputElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLInputElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLInputElementClass

    static name: string
}

interface DOMHTMLLIElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLLIElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLIElementClass

    static name: string
}

interface DOMHTMLLabelElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLLabelElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLabelElementClass

    static name: string
}

interface DOMHTMLLegendElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLLegendElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLegendElementClass

    static name: string
}

interface DOMHTMLLinkElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLLinkElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLLinkElementClass

    static name: string
}

interface DOMHTMLMapElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLMapElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMapElementClass

    static name: string
}

interface DOMHTMLMarqueeElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLMarqueeElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMarqueeElementClass

    static name: string
}

interface DOMHTMLMenuElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLMenuElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMenuElementClass

    static name: string
}

interface DOMHTMLMetaElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLMetaElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLMetaElementClass

    static name: string
}

interface DOMHTMLModElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLModElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLModElementClass

    static name: string
}

interface DOMHTMLOListElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLOListElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOListElementClass

    static name: string
}

interface DOMHTMLObjectElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLObjectElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLObjectElementClass

    static name: string
}

interface DOMHTMLOptGroupElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLOptGroupElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptGroupElementClass

    static name: string
}

interface DOMHTMLOptionElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLOptionElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionElementClass

    static name: string
}

interface DOMHTMLOptionsCollectionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollectionClass

    parent_class: DOMHTMLCollectionClass
}

abstract class DOMHTMLOptionsCollectionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLOptionsCollectionClass

    static name: string
}

interface DOMHTMLParagraphElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLParagraphElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParagraphElementClass

    static name: string
}

interface DOMHTMLParamElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLParamElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLParamElementClass

    static name: string
}

interface DOMHTMLPreElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLPreElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLPreElementClass

    static name: string
}

interface DOMHTMLQuoteElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLQuoteElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLQuoteElementClass

    static name: string
}

interface DOMHTMLScriptElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLScriptElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLScriptElementClass

    static name: string
}

interface DOMHTMLSelectElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLSelectElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLSelectElementClass

    static name: string
}

interface DOMHTMLStyleElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLStyleElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLStyleElementClass

    static name: string
}

interface DOMHTMLTableCaptionElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTableCaptionElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCaptionElementClass

    static name: string
}

interface DOMHTMLTableCellElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTableCellElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableCellElementClass

    static name: string
}

interface DOMHTMLTableColElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTableColElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableColElementClass

    static name: string
}

interface DOMHTMLTableElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTableElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableElementClass

    static name: string
}

interface DOMHTMLTableRowElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTableRowElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableRowElementClass

    static name: string
}

interface DOMHTMLTableSectionElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTableSectionElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTableSectionElementClass

    static name: string
}

interface DOMHTMLTextAreaElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTextAreaElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTextAreaElementClass

    static name: string
}

interface DOMHTMLTitleElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLTitleElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLTitleElementClass

    static name: string
}

interface DOMHTMLUListElementClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElementClass

    parent_class: DOMHTMLElementClass
}

abstract class DOMHTMLUListElementClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMHTMLUListElementClass

    static name: string
}

interface DOMKeyboardEventClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEventClass

    parent_class: DOMUIEventClass
}

abstract class DOMKeyboardEventClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMKeyboardEventClass

    static name: string
}

interface DOMMediaListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaListClass

    parent_class: DOMObjectClass
}

abstract class DOMMediaListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMediaListClass

    static name: string
}

interface DOMMouseEventClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEventClass

    parent_class: DOMUIEventClass
}

abstract class DOMMouseEventClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMMouseEventClass

    static name: string
}

interface DOMNamedNodeMapClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMapClass

    parent_class: DOMObjectClass
}

abstract class DOMNamedNodeMapClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNamedNodeMapClass

    static name: string
}

interface DOMNodeClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeClass

    parent_class: DOMObjectClass
}

abstract class DOMNodeClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeClass

    static name: string
}

interface DOMNodeFilterIface {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilterIface

    gIface: GObject.TypeInterface
    accept_node: (filter: DOMNodeFilter, node: DOMNode) => number
}

abstract class DOMNodeFilterIface {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeFilterIface

    static name: string
}

interface DOMNodeIteratorClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIteratorClass

    parent_class: DOMObjectClass
}

abstract class DOMNodeIteratorClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeIteratorClass

    static name: string
}

interface DOMNodeListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeListClass

    parent_class: DOMObjectClass
}

abstract class DOMNodeListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMNodeListClass

    static name: string
}

interface DOMObjectClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObjectClass

    parentClass: GObject.ObjectClass
}

abstract class DOMObjectClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMObjectClass

    static name: string
}

interface DOMProcessingInstructionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstructionClass

    parent_class: DOMCharacterDataClass
}

abstract class DOMProcessingInstructionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMProcessingInstructionClass

    static name: string
}

interface DOMRangeClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRangeClass

    parent_class: DOMObjectClass
}

abstract class DOMRangeClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMRangeClass

    static name: string
}

interface DOMStyleSheetClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetClass

    parent_class: DOMObjectClass
}

abstract class DOMStyleSheetClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetClass

    static name: string
}

interface DOMStyleSheetListClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetListClass

    parent_class: DOMObjectClass
}

abstract class DOMStyleSheetListClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMStyleSheetListClass

    static name: string
}

interface DOMTextClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTextClass

    parent_class: DOMCharacterDataClass
}

abstract class DOMTextClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTextClass

    static name: string
}

interface DOMTreeWalkerClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalkerClass

    parent_class: DOMObjectClass
}

abstract class DOMTreeWalkerClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMTreeWalkerClass

    static name: string
}

interface DOMUIEventClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEventClass

    parent_class: DOMEventClass
}

abstract class DOMUIEventClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMUIEventClass

    static name: string
}

interface DOMWheelEventClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEventClass

    parent_class: DOMMouseEventClass
}

abstract class DOMWheelEventClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMWheelEventClass

    static name: string
}

interface DOMXPathExpressionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpressionClass

    parent_class: DOMObjectClass
}

abstract class DOMXPathExpressionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathExpressionClass

    static name: string
}

interface DOMXPathNSResolverIface {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolverIface

    gIface: GObject.TypeInterface
    lookup_namespace_uri: (resolver: DOMXPathNSResolver, prefix: string) => string
}

abstract class DOMXPathNSResolverIface {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathNSResolverIface

    static name: string
}

interface DOMXPathResultClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResultClass

    parent_class: DOMObjectClass
}

abstract class DOMXPathResultClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.DOMXPathResultClass

    static name: string
}

interface FrameClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.FrameClass

    parent_class: GObject.ObjectClass
}

abstract class FrameClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.FrameClass

    static name: string
}

interface FramePrivate {
}

class FramePrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.FramePrivate

    static name: string
}

interface HitTestResultClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResultClass

    parent_class: GObject.ObjectClass
}

abstract class HitTestResultClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResultClass

    static name: string
}

interface HitTestResultPrivate {
}

class HitTestResultPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.HitTestResultPrivate

    static name: string
}

interface ScriptWorldClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorldClass

    parent_class: GObject.ObjectClass
}

abstract class ScriptWorldClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorldClass

    static name: string
}

interface ScriptWorldPrivate {
}

class ScriptWorldPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.ScriptWorldPrivate

    static name: string
}

interface URIRequestClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequestClass

    parent_class: GObject.ObjectClass
}

abstract class URIRequestClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequestClass

    static name: string
}

interface URIRequestPrivate {
}

class URIRequestPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIRequestPrivate

    static name: string
}

interface URIResponseClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponseClass

    parent_class: GObject.ObjectClass
}

abstract class URIResponseClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponseClass

    static name: string
}

interface URIResponsePrivate {
}

class URIResponsePrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.URIResponsePrivate

    static name: string
}

interface UserMessageClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessageClass

    parent_class: GObject.InitiallyUnownedClass
}

abstract class UserMessageClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessageClass

    static name: string
}

interface UserMessagePrivate {
}

class UserMessagePrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.UserMessagePrivate

    static name: string
}

interface WebEditorClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditorClass

    parent_class: GObject.ObjectClass
}

abstract class WebEditorClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditorClass

    static name: string
}

interface WebEditorPrivate {
}

class WebEditorPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebEditorPrivate

    static name: string
}

interface WebExtensionClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtensionClass

    parent_class: GObject.ObjectClass
}

abstract class WebExtensionClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtensionClass

    static name: string
}

interface WebExtensionPrivate {
}

class WebExtensionPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebExtensionPrivate

    static name: string
}

interface WebHitTestResultClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResultClass

    parent_class: HitTestResultClass
}

abstract class WebHitTestResultClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResultClass

    static name: string
}

interface WebHitTestResultPrivate {
}

class WebHitTestResultPrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebHitTestResultPrivate

    static name: string
}

interface WebPageClass {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPageClass

    parent_class: GObject.ObjectClass
}

abstract class WebPageClass {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPageClass

    static name: string
}

interface WebPagePrivate {
}

class WebPagePrivate {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension.WebPagePrivate

    static name: string
}

interface _ContextMenu {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension._ContextMenu

    parent: GObject.Object
    priv: ContextMenuPrivate
}

class _ContextMenu {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension._ContextMenu

    static name: string
}

interface _ContextMenuItem {

    // Own fields of WebKit2WebExtension-5.0.WebKit2WebExtension._ContextMenuItem

    parent: GObject.InitiallyUnowned
    priv: ContextMenuItemPrivate
}

class _ContextMenuItem {

    // Own properties of WebKit2WebExtension-5.0.WebKit2WebExtension._ContextMenuItem

    static name: string
}

}
export default WebKit2WebExtension;